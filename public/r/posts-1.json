{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "posts-1",
  "type": "registry:block",
  "registryDependencies": [
    "section",
    "badge",
    "toggle"
  ],
  "files": [
    {
      "path": "src/blocks/posts-1.tsx",
      "content": "import * as React from \"react\"\n\nimport type { BlockProps } from \"@/lib/types\"\nimport { Badge } from \"@/components/ui/badge\"\nimport {\n  Section,\n  SectionContainer,\n  SectionContent,\n} from \"@/components/ui/section\"\nimport {\n  Tile,\n  TileContent,\n  TileDescription,\n  TileTagline,\n  TileTitle,\n} from \"@/components/ui/tile\"\nimport { Toggle } from \"@/components/ui/toggle\"\n\nexport default function ({ children, items }: BlockProps) {\n  // Collect all tags from items, flatten, and deduplicate\n  const allTags = items?.flatMap(({ tags }) => tags)\n  const uniqueTags = [...new Set(allTags)].filter((tag) => tag !== undefined)\n\n  // State for the currently active tag filter (null = show all)\n  const [activeTags, setActiveTags] = React.useState<string[]>([])\n\n  // Handler for toggling tag filters\n  const handleTagToggle = (tag: string) => (pressed: boolean) => {\n    setActiveTags(\n      pressed ? [...activeTags, tag] : activeTags.filter((t) => t !== tag)\n    )\n  }\n\n  // Filter items by active tag, or show all if none selected\n  const filteredPosts = React.useMemo(() => {\n    if (activeTags.length === 0) return items\n    return items?.filter((item) =>\n      item.tags?.some((tag) => activeTags.includes(tag))\n    )\n  }, [items, activeTags])\n\n  return (\n    <Section>\n      <SectionContainer className=\"max-w-screen-md lg:px-12\">\n        {children && (\n          <SectionContent className=\"text-center\">{children}</SectionContent>\n        )}\n        <div className=\"flex flex-col gap-4 not-first:mt-16\">\n          <div className=\"mb-8 flex flex-row flex-wrap justify-center gap-2\">\n            {uniqueTags?.map((tag: string, i: number) => (\n              <Toggle\n                key={i}\n                size=\"sm\"\n                variant=\"outline\"\n                onPressedChange={handleTagToggle(tag)}\n              >\n                {tag}\n              </Toggle>\n            ))}\n          </div>\n          <div className=\"mx-auto flex max-w-screen-md flex-col gap-4\">\n            {filteredPosts?.map(\n              ({ href, title, description, published, tags }, i: number) => (\n                <Tile className=\"gap-2\" key={i} href={href} panel={false}>\n                  <TileContent>\n                    {tags?.map((tag: string, j: number) => (\n                      <Badge key={j} variant=\"secondary\">\n                        {tag}\n                      </Badge>\n                    ))}\n                    <TileTagline>\n                      {published?.toLocaleDateString(\"nl-NL\")}\n                    </TileTagline>\n                    <TileTitle>{title}</TileTitle>\n                    <TileDescription>{description}</TileDescription>\n                  </TileContent>\n                </Tile>\n              )\n            )}\n          </div>\n        </div>\n      </SectionContainer>\n    </Section>\n  )\n}\n",
      "type": "registry:block"
    }
  ]
}