{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricings-1",
  "type": "registry:block",
  "registryDependencies": [
    "section",
    "link",
    "list",
    "select",
    "tile"
  ],
  "files": [
    {
      "path": "src/blocks/pricings-1.tsx",
      "content": "import { useState } from \"react\"\nimport { Check, X } from \"lucide-react\"\n\nimport type { BlockProps } from \"@/lib/types\"\nimport { money } from \"@/lib/utils\"\nimport { Link } from \"@/components/ui/link\"\nimport { List, ListItem } from \"@/components/ui/list\"\nimport {\n  Section,\n  SectionContainer,\n  SectionContent,\n  SectionGrid,\n} from \"@/components/ui/section\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport {\n  Tile,\n  TileContent,\n  TileFooter,\n  TileTagline,\n  TileTitle,\n} from \"@/components/ui/tile\"\n\nexport default function ({ children, items }: BlockProps) {\n  const [duration, setDuration] = useState<string>(\"month\")\n  const hasSubscription = items?.some((item) => \"subscription\" in item)\n  return (\n    <Section>\n      <SectionContainer className=\"flex flex-col\">\n        <div className=\"flex flex-col sm:flex-row sm:justify-between\">\n          {children && <SectionContent>{children}</SectionContent>}\n          {hasSubscription && (\n            <Select\n              value={duration}\n              onValueChange={(value) => setDuration(value)}\n            >\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"month\">Maand abonnement</SelectItem>\n                <SelectItem value=\"year\">Jaarlijks abonnement</SelectItem>\n                <SelectItem value=\"twoyears\">2 jaarlijks abonnement</SelectItem>\n              </SelectContent>\n            </Select>\n          )}\n        </div>\n        <SectionGrid className=\"not-first:mt-12\">\n          {items?.map(\n            (\n              {\n                tagline,\n                title,\n                description,\n                price,\n                subscription,\n                unit,\n                list,\n                links,\n                icon = \"check\",\n              },\n              i\n            ) => (\n              <Tile className=\"justify-between\" key={i}>\n                <TileContent>\n                  {tagline && (\n                    <TileTagline className=\"text-sm\">{tagline}</TileTagline>\n                  )}\n                  <TileTitle>{title}</TileTitle>\n                  {description && <p className=\"text-sm\">{description}</p>}\n                  {(price ||\n                    subscription?.[duration as keyof typeof subscription]) && (\n                    <div className=\"mt-4\">\n                      <span className=\"text-2xl font-medium\">\n                        {money(\n                          subscription?.[\n                            duration as keyof typeof subscription\n                          ] ||\n                            price ||\n                            0\n                        )}\n                      </span>\n                      {unit && <span className=\"text-sm\">/ {unit}</span>}\n                    </div>\n                  )}\n                  {list && list.length > 0 && (\n                    <List className=\"mt-6 text-sm\">\n                      {list.map((item: string, j: number) => (\n                        <ListItem key={j}>\n                          {icon === \"check\" && (\n                            <Check className=\"text-primary\" />\n                          )}\n                          {icon === \"cross\" && (\n                            <X className=\"text-muted-foreground\" />\n                          )}\n                          {item}\n                        </ListItem>\n                      ))}\n                    </List>\n                  )}\n                </TileContent>\n                {links && links.length > 0 && (\n                  <TileFooter className=\"flex flex-col gap-2\">\n                    {links.map(({ href, text }, i) => (\n                      <Link\n                        key={i}\n                        href={href}\n                        variant={i === 0 ? \"default\" : \"outline\"}\n                      >\n                        {text}\n                      </Link>\n                    ))}\n                  </TileFooter>\n                )}\n              </Tile>\n            )\n          )}\n        </SectionGrid>\n      </SectionContainer>\n    </Section>\n  )\n}\n",
      "type": "registry:block"
    }
  ]
}