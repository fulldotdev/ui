{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "section",
  "type": "registry:ui",
  "files": [
    {
      "path": "src/components/ui/section.tsx",
      "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Section({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <section className={cn(\"relative w-full py-16\", className)} {...props} />\n  )\n}\n\nfunction SectionContainer({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\"mx-auto w-full max-w-screen-xl px-4 lg:px-8\", className)}\n      {...props}\n    />\n  )\n}\n\nexport const sectionSplitVariants = cva(\n  \"grid w-full gap-y-8 auto-cols-fr lg:grid-flow-col lg:gap-x-16 items-start\",\n  {\n    variants: {\n      reverse: {\n        true: \"lg:[&>*:first-child]:order-last lg:[&>*:last-child]:order-first\",\n        false: null,\n      },\n      sticky: {\n        true: \"lg:*:sticky lg:*:top-24\",\n        false: null,\n      },\n    },\n    defaultVariants: {\n      sticky: false,\n      reverse: false,\n    },\n  }\n)\n\nfunction SectionSplit({\n  className,\n  reverse,\n  sticky,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof sectionSplitVariants>) {\n  return (\n    <div\n      className={cn(sectionSplitVariants({ reverse, sticky }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction SectionMasonry({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\n        \"columns-3xs gap-4 space-y-6 [&>*]:break-inside-avoid\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SectionGrid({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\n        \"grid w-full grid-cols-[repeat(auto-fit,minmax(220px,1fr))] gap-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nconst sectionContentVariants = cva(\n  [\n    \"w-full max-w-2xl\",\n    \"[&_p]:leading-[1.8] [&_p]:not-first:mt-4\",\n    \"[&_ul]:list-inside [&_ul]:list-disc [&_ul]:space-y-2 [&_ul]:not-first:mt-4\",\n    \"[&_ol]:list-inside [&_ol]:list-decimal [&_ol]:space-y-2 [&_ol]:not-first:mt-4\",\n    \"[&_a]:text-primary [&_a]:hover:underline\",\n    \"[&_:is(h1,h2,h3,h4,h5,h6)]:scroll-mt-20 [&_:is(h1,h2,h3,h4,h5,h6)]:not-first:mt-12 [&_:is(h1,h2,h3,h4,h5,h6)]:text-pretty [&_:is(h1,h2,h3,h4,h5,h6)]:font-semibold [&_:is(h1,h2,h3,h4,h5,h6)]:leading-[1.1]\",\n    \"[&_img]:rounded-lg [&_img]:not-first:mt-12\",\n  ],\n  {\n    variants: {\n      size: {\n        sm: \"text-sm [&_h1]:text-2xl [&_h2]:text-xl [&_h3]:text-lg [&_h4]:text-base [&_h5]:text-sm [&_h6]:text-sm max-w-xl\",\n        default:\n          \"[&_h1]:text-4xl [&_h2]:text-3xl [&_h3]:text-2xl [&_h4]:text-xl [&_h5]:text-lg [&_h6]:text-base max-w-2xl\",\n        lg: \"text-lg [&_h1]:text-5xl [&_h2]:text-4xl [&_h3]:text-3xl [&_h4]:text-2xl [&_h5]:text-xl [&_h6]:text-lg max-w-3xl\",\n        xl: \"text-xl [&_h1]:text-6xl [&_h2]:text-5xl [&_h3]:text-4xl [&_h4]:text-3xl [&_h5]:text-2xl [&_h6]:text-xl max-w-4xl\",\n      },\n    },\n    defaultVariants: {\n      size: \"default\",\n    },\n  }\n)\n\nfunction SectionContent({\n  className,\n  size,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof sectionContentVariants>) {\n  return (\n    <div\n      className={cn(sectionContentVariants({ size }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction SectionFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div className={cn(\"inline-flex flex-wrap gap-2\", className)} {...props} />\n  )\n}\n\nfunction SectionTitle({ className, ...props }: React.ComponentProps<\"h1\">) {\n  return (\n    <h1\n      className={cn(\n        \"scroll-m-20 text-4xl font-extrabold tracking-tight text-balance\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SectionDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"p\">) {\n  return (\n    <div\n      className={cn(\"text-muted-foreground text-xl text-pretty\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SectionTagline({ className, ...props }: React.ComponentProps<\"p\">) {\n  return (\n    <div\n      className={cn(\n        \"tagline text-primary leading-none font-medium text-pretty\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Section,\n  SectionContainer,\n  SectionFooter,\n  SectionSplit,\n  SectionMasonry,\n  SectionGrid,\n  SectionContent,\n  SectionTitle,\n  SectionDescription,\n  SectionTagline,\n}\n",
      "type": "registry:ui"
    }
  ]
}