---
import type { ComponentProps } from 'astro/types'
import type { CollectionEntry } from 'astro:content'
import Footer from 'fulldev-ui/blocks/Footer.astro'
import Header from 'fulldev-ui/blocks/Header.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Menus from 'fulldev-ui/components/Menus.astro'
import Paragraph from 'fulldev-ui/components/Paragraph.astro'
import type { PageSchema } from 'fulldev-ui/schemas/page.ts'
import Container from 'fulldev-ui/structures/Container.astro'
import Layout from 'fulldev-ui/structures/Layout.astro'
import Prose from 'fulldev-ui/structures/Prose.astro'
import Sidebar from 'fulldev-ui/structures/Sidebar.astro'

type Props = ComponentProps<typeof Layout> &
  PageSchema & {
    render: CollectionEntry<'pages'>['render']
  }

const { header, sidebar, render, title, description, footer } = Astro.props

const { Content } = await render()
---

<Layout
  class:list="block"
  {...Astro.props}
>
  <Header
    {...sidebar}
    {...header}
  />
  <Container
    class:list="block-main"
    as="main"
  >
    <Sidebar>
      <Menus
        size="sm"
        menus={sidebar?.menus}
      />
    </Sidebar>
    <Container class:list="block-container">
      <Prose class:list="block-prose">
        <Heading
          size="4xl"
          as="h1"
          text={title}
        />
        <Paragraph
          muted
          text={description}
        />
        <Content />
      </Prose>
    </Container>
  </Container>
  <Footer {...footer} />
</Layout>

<style is:global>
  @layer fulldev {
    .block {
      .block-main {
        @apply flex w-full items-start justify-between !px-0;
      }

      .block-container {
        max-width: calc(100% - var(--sidebar-width)) !important;
      }

      .sidebar {
        @apply hidden lg:flex;
      }

      .block-prose {
        @apply mx-auto max-w-none py-8;
      }
    }
  }
</style>
