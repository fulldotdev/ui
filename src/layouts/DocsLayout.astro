---
import type { ComponentProps } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Layout from 'fulldev-ui/layouts/Layout.astro'
import { crush } from 'radash'
import PostLayout from './PostLayout.astro'

type Props = ComponentProps<typeof Layout>

const { slug, navigation } = Astro.props

const flatButtons = crush((navigation as any)?.buttons ?? {})
const slugs = Object.entries(flatButtons)
  .map(([key, value]) => (key.endsWith('.slug') ? value : null))
  .filter(Boolean)
const slugIndex = slugs.findIndex((val) => val === slug)

const prevSlug = slugs[slugIndex - 1]
const nextSlug = slugs[slugIndex + 1]
---

<PostLayout
  class:list="docs-layout"
  {...Astro.props}
>
  <Element
    class:list={['prev-next', { 'next-only': !prevSlug }]}
    slot="prose"
  >
    <Button
      if={prevSlug}
      slug={prevSlug}
      icon="arrow-left"
      variant="secondary"
    />
    <Button
      if={nextSlug}
      slug={nextSlug}
      icon="arrow-right"
      variant="secondary"
      reverse={true}
    />
  </Element>
</PostLayout>

<style lang="scss" is:global>
  @layer fulldev {
    // .docs-layout {
    //   .prose {
    //     > a,
    //     > p > a {
    //       color: var(--brand-11);

    //       &:hover {
    //         color: var(--brand-12);
    //       }
    //     }

    //     .prev-next {
    //       display: flex;
    //       justify-content: space-between;
    //       align-items: center;
    //       margin-top: var(--space-7);

    //       &.next-only {
    //         justify-content: flex-end;
    //       }
    //     }
    //   }
    // }
  }
</style>
