---
import '@/styles/global.css'
import '@fontsource/geist-sans/100.css'
import '@fontsource/geist-sans/200.css'
import '@fontsource/geist-sans/300.css'
import '@fontsource/geist-sans/400.css'
import '@fontsource/geist-sans/500.css'
import '@fontsource/geist-sans/600.css'
import '@fontsource/geist-sans/700.css'
import '@fontsource/geist-sans/800.css'
import '@fontsource/geist-sans/900.css'
import { getEntry } from 'astro:content'

interface Props {
  title?: string
  description?: string
  image?: {
    src?: string
    alt?: string
  }
  meta?: {
    title?: string
    description?: string
    noindex?: boolean
    nofollow?: boolean
    head?: string
    body?: string
    css?: string
  }
}

const setting = await getEntry('settings', 'base')

const { title, description, image, meta } = { ...setting?.data, ...Astro.props }

const url = Astro.url.href.endsWith('/') ? Astro.url.href : `${Astro.url.href}/`

// TODO: shadcn theme switcher
const theme = 'light'
---

<!doctype html>
<html class="text-foreground h-full w-full font-sans text-base scheme-light dark:scheme-dark">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1"
    />
    <title>{meta?.title}</title>
    <meta
      content={meta?.description}
      name="description"
    />
    <meta
      name="robots"
      content={`${meta?.noindex ? 'noindex' : 'index'}, ${meta?.nofollow ? 'nofollow' : 'follow'}`}
    />
    <!-- TODO: check if astro now does this automatically -->
    <link
      rel="canonical"
      href={url}
    />
    <meta
      name="generator"
      content={Astro.generator}
    />
    <meta
      name="copyright"
      content={title}
    />
    <meta
      property="og:title"
      content={title}
    />
    <meta
      name="og:site_name"
      content={title}
    />
    <meta
      property="og:description"
      content={description}
    />
    <meta
      property="og:image"
      content={image?.src}
    />
    <meta
      property="og:image:alt"
      content={image?.alt}
    />
    <meta
      property="og:url"
      content={url}
    />
    <meta
      property="og:type"
      content="website"
    />

    <!-- Code -->
    <Fragment set:html={meta?.head} />
    <slot name="head" />

    <!-- Light / Dark theme -->
    <script is:inline define:vars={{ theme }}>
      function setTheme(document) {
        const value = localStorage.getItem('theme') || theme

        const isDark =
          value === 'dark' || (value === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches)

        document.documentElement.classList.toggle('dark', isDark)

        document.querySelectorAll('.themer').forEach((themer) => {
          themer?.querySelectorAll('option').forEach((option) => {
            option.selected = option.value === value
          })
        })
      }

      function setOption(document) {
        const value = localStorage.getItem('theme') || theme

        document.querySelectorAll('.themer').forEach((themer) => {
          themer?.querySelectorAll('option').forEach((option) => {
            option.selected = option.value === value
          })
        })
      }

      setTheme(document)
      setOption(document)

      document.addEventListener('astro:before-swap', (event) => {
        setTheme(event.newDocument)
      })

      document.addEventListener('astro:page-load', (event) => {
        setOption(document)
      })
    </script>
  </head>
  <body class="bg-background text-foreground w-full font-sans text-base scheme-light dark:scheme-dark">
    <slot />
    <style set:html={meta?.css}></style>
    <Fragment set:html={meta?.body} />
  </body>
</html>
