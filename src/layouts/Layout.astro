---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Banner from 'fulldev-ui/blocks/Banner.astro'
import Footer from 'fulldev-ui/blocks/Footer.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Head from 'fulldev-ui/components/Head.astro'
import Header from 'fulldev-ui/components/Header.astro'
import Sidebar from 'fulldev-ui/components/Sidebar.astro'
import Subheader from 'fulldev-ui/components/Subheader.astro'

type Props = HTMLAttributes<'html'> & {
  banner?: ComponentProps<typeof Banner>['text'] | undefined
  header?: ComponentProps<typeof Header> | undefined
  subheader?: ComponentProps<typeof Subheader> | undefined
  sidebar?: ComponentProps<typeof Sidebar> | undefined
  footer?: ComponentProps<typeof Footer> | undefined
  theme?: 'light' | 'dark' | 'system' | undefined
  title?: string
  code?: {
    head?: string
    body?: string
  }
  description?: string
  image?: any
  seo?: {
    title?: string
    description?: string
    image?: string
  }
  next?: string
  prev?: string
}

const {
  banner,
  header,
  subheader,
  sidebar,
  footer,
  theme,
  code,
  next,
  prev,
  ...rest
} = Astro.props
---

<!doctype html>
<html
  class="layout"
  {...rest}
>
  <Head {...Astro.props} />
  <Element
    class:list="layout-body"
    as="body"
    {theme}
  >
    <Banner text={banner} />
    <Header {...header} />
    <Subheader {...subheader} />
    <slot name="before" />

    <Element class:list={['layout-container', { 'has-sidebar': sidebar }]}>
      <Sidebar {...sidebar} />
      <main class="layout-main">
        <slot />
      </main>
    </Element>
    <Footer {...footer} />
    <slot name="after" />
    <Fragment set:html={code?.body} />

    <style is:global>
      @layer fulldev {
        .layout {
          @apply w-full font-sans text-base leading-relaxed text-foreground;
          color-scheme: light;

          &.dark {
            color-scheme: dark;
          }
        }

        .layout-body {
          @apply flex min-h-screen w-full flex-col bg-background font-sans text-foreground;
        }

        .layout-container {
          @apply relative flex h-full w-full flex-grow;

          &.has-sidebar {
            @apply container px-0;
          }
        }

        .layout-main {
          @apply flex w-full max-w-full flex-1 shrink flex-col;

          /* full width minus sidebar width */
          @media (min-width: 1024px) {
            max-width: calc(100% - var(--sidebar-width, 0px));
          }
        }
      }
    </style>
  </Element>
</html>
