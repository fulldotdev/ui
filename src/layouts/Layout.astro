---
import type { CollectionEntry } from 'astro:content'
import Block from 'fulldev-ui/components/Block.astro'
import Blocks from 'fulldev-ui/components/Blocks.astro'
import Button from 'fulldev-ui/components/Button.astro'
import Head from 'fulldev-ui/components/Head.astro'
import Header from 'fulldev-ui/components/Header.astro'
import Sidebar from 'fulldev-ui/components/Sidebar.astro'
import Toc from 'fulldev-ui/components/Toc.astro'
import NavigationButtons from '../components/docs/NavigationButtons.astro'

type Props = Partial<CollectionEntry<'pages'>> & {
  class?: string
  theme?: 'light' | 'dark'
}

const { slug, data, theme, class: classes, render } = Astro.props
const { logo, header, footer, footers, channels, sidebar, toc } = data || {}

const { headings } = render ? await render() : { headings: [] }

const h2Headings = headings.filter((heading: any) => heading.depth === 2)
---

<!doctype html>
<html
  lang="nl"
  class:list={[
    slug,
    {
      'theme-dark': theme === 'dark',
      'theme-light': theme === 'light',
    },
  ]}
>
  <Head {...Astro.props} />
  <body
    class:list={[
      classes,
      {
        'has-sidebar': sidebar,
        'has-toc': toc,
        'theme-dark': theme === 'dark',
        'theme-light': theme === 'light',
      },
    ]}
  >
    <Header {...header} />
    <div class="core">
      <Sidebar {sidebar} />
      <main data-pagefind-body>
        <Toc
          toc={toc}
          headings={h2Headings}
        />
        <div class="blocks">
          <slot />
          <NavigationButtons {sidebar} />
        </div>
      </main>
    </div>

    {
      channels?.whatsapp && (
        <Button
          variant="primary"
          color="brand"
          icon="brand-whatsapp"
          size="lg"
          href={`https://wa.me/${channels.whatsapp}`}
          style={{
            position: 'fixed',
            right: 'var(--space-4)',
            bottom: 'var(--space-4)',
            backgroundColor: '#46A758',
          }}
        />
      )
    }
    <Block
      _bookshop_name="Footer"
      {logo}
      {...footer}
    />
    <Blocks {...footers} />

    <Fragment set:html={data?.code?.body} />
    <style lang="scss" is:global>
      @layer fulldev {
        :root {
          --screen: 1536px;
          --gutter: max(4vw, calc(100vw - var(--screen)) / 2);
          --gutter-left: var(--gutter);
          --gutter-right: var(--gutter);
          --sidebar-width: 0px;
          --toc-width: 0px;
          --header-height: calc(
            var(--text-2) + 2 * var(--space-4) + 2 * var(--space-3)
          );
        }

        html,
        body {
          box-sizing: border-box;
          margin: 0;
          background-color: var(--color-background);
          padding: 0;
          width: 100%;
          min-height: 100vh;
          color: var(--base-11);
          color-scheme: var(--color-scheme);
          font-size: var(--text-2);
          font-family: var(--font-family);
        }

        body {
          display: flex;
          flex-direction: column;

          @media (min-width: 1024px) {
            &.has-sidebar .core {
              --gutter-left: var(--space-6);
              --sidebar-width: calc(var(--gutter) + 200px);

              display: grid;
              grid-template-columns: var(--sidebar-width) minmax(0, 1fr);
            }

            &.has-toc main {
              --gutter-right: var(--space-6);
              --toc-width: calc(var(--gutter) + 200px);

              display: grid;
              grid-template-columns: minmax(0, 1fr) var(--toc-width);
            }
          }

          .header {
            width: 100%;
            height: var(--header-height);
          }

          .core {
            .sidebar {
              position: sticky;
              top: 0;
              padding-left: var(--gutter);
            }

            main {
              .toc {
                position: sticky;
                top: 0;
                order: 1;
                padding-right: var(--gutter);
              }

              .blocks {
                display: flex;
                flex-direction: column;
                width: 100%;
              }
            }
          }
        }
      }
    </style>
  </body>
</html>
