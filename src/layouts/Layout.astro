---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import type { CollectionEntry } from 'astro:content'
import Banner from 'fulldev-ui/blocks/Banner.astro'
import Footer from 'fulldev-ui/blocks/Footer.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Head from 'fulldev-ui/components/Head.astro'
import Header from 'fulldev-ui/components/Header.astro'
import Prose from 'fulldev-ui/components/Prose.astro'
import Section from 'fulldev-ui/components/Section.astro'
import Sections from 'fulldev-ui/components/sections.astro'
import Sidebar from 'fulldev-ui/components/Sidebar.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

type Props = GlobalProps &
  HTMLAttributes<'html'> & {
    render?: CollectionEntry<'pages'>['render'] | undefined
    slug?: CollectionEntry<'pages'>['slug'] | undefined
    header?: ComponentProps<typeof Header> | undefined
    footer?: ComponentProps<typeof Footer> | undefined
    sections?: ComponentProps<typeof Sections>['sections']
    section?: ComponentProps<typeof Section> | undefined
    theme?: 'light' | 'dark' | 'system' | undefined
    banner?: any
    toc?: any
    sidebar?: any
    navigation?: any
    code?: {
      head?: string
      body?: string
    }
    title?: string
    description?: string
    image?: string
    seo?: {
      title?: string
      description?: string
      image?: string
    }
  }

const {
  render,
  slug,
  header,
  navigation,
  footer,
  sidebar,
  toc,
  sections,
  theme,
  section,
  banner,
  code,
  ...rest
} = Astro.props
---

<!doctype html>
<html
  class="layout"
  {...rest}
>
  <Head {...Astro.props} />
  <Element
    class:list="layout-body"
    as="body"
    {theme}
  >
    <Banner text={banner} />
    <Header
      open={navigation?.header}
      {...navigation}
      {...header}
    />
    <slot name="header" />
    <div class="layout-content">
      <Sidebar
        if={sidebar || navigation?.sidebar}
        {...navigation?.sidebar === true ? navigation : {}}
        logo={navigation?.header ? undefined : navigation?.logo}
        company={navigation?.header ? undefined : navigation?.company}
        {...sidebar}
      />
      <slot name="sidebar" />
      <main
        class="layout-main"
        data-pagefind-body
      >
        <Section
          level={1}
          {...section}
        />
        <slot name="section" />
        <Prose
          {render}
          {slug}
          toc={toc || navigation?.toc}
          {navigation}
        />
        <slot name="prose" />
        <Sections {sections} />
        <slot name="sections" />
        <slot />
      </main>
    </div>
    <Footer {...footer} />
    <slot name="footer" />
    <Fragment set:html={code?.body} />

    <style is:global>
      @layer fulldev {
        .layout {
          @apply text-base text-foreground;
          color-scheme: light;
          line-height: 1.5;
          font-family: 'Inter', sans-serif;

          &.dark {
            color-scheme: dark;
          }
        }

        .layout-body {
          @apply min-h-screen w-full bg-background text-foreground;
          font-family: 'Inter', sans-serif;
        }

        .layout-content {
          @apply relative flex h-full flex-grow;
        }

        .layout-main {
          --screen: 1280px;
          @apply flex w-full flex-1 shrink flex-col;
        }
      }
    </style>
  </Element>
</html>
