---
import type { HTMLAttributes } from 'astro/types'
import type { CollectionEntry } from 'astro:content'
import Footer from 'fulldev-ui/components/Footer.astro'
import Head from 'fulldev-ui/components/Head.astro'
import Header from 'fulldev-ui/components/Header.astro'
import Sidebar from 'fulldev-ui/components/Sidebar.astro'
import Toc from 'fulldev-ui/components/Toc.astro'

type Props = CollectionEntry<'pages'>['data'] & {
  class?: HTMLAttributes<'body'>['class']
  lang?: HTMLAttributes<'html'>['lang']
  render: CollectionEntry<'pages'>['render']
  theme?: 'light' | 'dark'
}

const {
  class: classList,
  lang = 'nl',
  render,
  logo,
  header,
  footer,
  sidebar,
  toc,
  code,
  theme,
} = Astro.props

const { headings } = render ? await render() : { headings: [] }

const h2Headings = headings.filter((heading: any) => heading.depth === 2)
---

<!doctype html>
<html lang={lang}>
  <Head {...Astro.props} />

  <body
    class:list={[
      classList,
      {
        'has-sidebar': sidebar,
        'has-toc': toc,
        'theme-dark': theme === 'dark',
        'theme-light': theme === 'light',
      },
    ]}
  >
    <slot name="top">
      <Header {...header} />
    </slot>
    <div class="core">
      <slot name="left">
        <Sidebar {sidebar} />
      </slot>
      <main>
        <slot />
      </main>
      <slot name="right">
        <Toc
          toc={toc}
          headings={h2Headings}
        />
      </slot>
    </div>
    <slot name="bottom">
      <!-- <Footer {...footer} /> -->
    </slot>
    <style lang="scss" is:global>
      @layer fulldev {
        * {
          scroll-behavior: smooth;
        }

        :root {
          --header-height: calc(
            var(--text-2) + 2 * var(--space-4) + 2 * var(--space-3)
          );
        }

        html,
        body {
          box-sizing: border-box;
          margin: 0;
          background-color: var(--color-background);
          padding: 0;
          width: 100%;
          min-height: 100vh;
          color: var(--base-11);
          color-scheme: var(--color-scheme);
          font-size: var(--text-2);
          font-family: var(--font-family);
        }

        body {
          --screen: 100vw;

          display: flex;
          flex-direction: column;

          .core {
            --screen: 1280px;

            display: grid;
            grid-template-columns: 1fr;
            overflow-x: hidden;

            @media (min-width: 1024px) {
              grid-template-columns:
                [body-start]
                minmax(0, auto)
                [main-start]
                minmax(0, 1fr)
                [main-end]
                minmax(0, auto)
                [body-end];

              main {
                display: flex;
                grid-column: main-start / main-end;
                flex-direction: column;
              }
            }
          }
        }

        // body {
        //   display: flex;
        //   flex-direction: column;

        //   @media (min-width: 1024px) {
        //     &.has-sidebar .core {
        //       --gutter-left: var(--space-6);
        //       --sidebar-width: calc(var(--gutter) + 200px);

        //       display: grid;
        //       grid-template-columns: var(--sidebar-width) minmax(0, 1fr);
        //     }

        //     &.has-toc main {
        //       --gutter-right: var(--space-6);
        //       --toc-width: calc(var(--gutter) + 200px);

        //       display: grid;
        //       grid-template-columns: minmax(0, 1fr) var(--toc-width);
        //     }
        //   }

        //   .header {
        //     width: 100%;
        //     height: var(--header-height);
        //   }

        //   .core {
        //     .sidebar {
        //       position: sticky;
        //       top: 0;
        //       padding-left: var(--gutter);
        //     }

        //     main {
        //       .toc {
        //         position: sticky;
        //         top: 0;
        //         order: 1;
        //         padding-right: var(--gutter);
        //       }

        //       .blocks {
        //         display: flex;
        //         flex-direction: column;
        //         width: 100%;
        //       }
        //     }
        //   }
        // }
      }
    </style>
  </body>
</html>
