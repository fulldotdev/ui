---
import type { HTMLAttributes } from 'astro/types'
import type { CollectionEntry, ContentCollectionKey } from 'astro:content'
import { getEntry } from 'astro:content'
import Footer from 'fulldev-ui/blocks/Footer.astro'
import Block from 'fulldev-ui/components/Block.astro'
import Container from 'fulldev-ui/components/Container.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Head from 'fulldev-ui/components/Head.astro'
import Sidebar from 'fulldev-ui/components/Sidebar.astro'
import Subheader from 'fulldev-ui/components/Subheader.astro'
import { mergeDeep } from 'remeda'

type Props = HTMLAttributes<'body'> & CollectionEntry<ContentCollectionKey>

const layout = await getEntry('layouts', 'base')
const merged = mergeDeep(layout || {}, Astro.props)

const {
  collection,
  slug,
  id,
  render,
  body,
  data: {
    banner,
    header,
    subheader,
    sidebar,
    footer,
    head,
    navigation,
    title,
    description,
    image,
  },
  ...rest
} = merged
---

<!doctype html>
<Element
  class:list="layout"
  as="html"
  {...rest}
>
  <Head
    {title}
    {description}
    {image}
    {...head}
  />
  <Element
    class:list="layout-body"
    as="body"
  >
    <Block
      _block="Banner1"
      {...banner}
    />
    <Block
      _block="Header1"
      {...navigation?.header && navigation}
      {...header}
    />
    <Subheader {...subheader} />
    <Container class:list={['layout-container', { 'has-sidebar': sidebar }]}>
      <Sidebar
        {...navigation?.sidebar && navigation}
        {...sidebar}
      />
      <main class="layout-main">
        <slot />
      </main>
    </Container>
    <Footer {...footer} />
    <style is:global>
      @layer fulldev {
        .layout {
          @apply w-full font-sans text-base leading-relaxed text-foreground;
          color-scheme: light;
        }

        .dark {
          color-scheme: dark;
        }

        .layout-body {
          @apply flex min-h-screen w-full flex-col bg-background font-sans text-foreground;
        }

        .layout-container {
          @apply flex w-full grow !px-0;
        }

        .layout-main {
          @apply flex w-full max-w-full flex-1 shrink flex-col;

          /* full width minus sidebar width */
          @media (min-width: 1024px) {
            max-width: calc(100% - var(--sidebar-width, 0px));
          }
        }
      }
    </style>
  </Element>
</Element>
