---
import type { ComponentProps } from 'astro/types'
import type { CollectionEntry } from 'astro:content'
import Footer from 'fulldev-ui/blocks/Footer.astro'
import Header from 'fulldev-ui/blocks/Header.astro'
import Intro1 from 'fulldev-ui/blocks/Intro1.astro'
import Jobs1 from 'fulldev-ui/blocks/Jobs1.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Sidebar from 'fulldev-ui/components/Sidebar.astro'
import type { PageSchema } from 'fulldev-ui/schemas/page.ts'
import Container from 'fulldev-ui/structures/Container.astro'
import Layout from 'fulldev-ui/structures/Layout.astro'
import Prose from 'fulldev-ui/structures/Prose.astro'

type Props = ComponentProps<typeof Layout> &
  PageSchema & {
    slug: CollectionEntry<'pages'>['slug']
    render: CollectionEntry<'pages'>['render']
  }

const { slug, header, sidebar, render, title, description, footer } =
  Astro.props

const { Content } = await render()

// const children = (
//   await getCollection('pages', ({ data }) =>
//     data.parents?.some((p) => p.slug.includes(slug))
//   )
// )?.map(({ collection, slug }) => ({ collection, slug }))
---

<Layout
  class:list="jobs"
  {...Astro.props}
>
  <Header
    {...sidebar}
    {...header}
  />
  <Container class:list="jobs-container">
    <Sidebar {...sidebar} />
    <Element
      class:list="jobs-main"
      as="main"
    >
      <Intro1
        heading={title}
        paragraph={description}
      />
      <!-- <Jobs1 pages={children} /> -->
      <Prose>
        <Content />
      </Prose>
    </Element>
  </Container>
</Layout>
<Footer {...footer} />

<style is:global>
  @layer fulldev {
    .jobs {
      .jobs-container {
        @apply flex !pr-0;
      }

      .jobs-main {
        @apply flex w-full flex-col;
      }
    }
  }
</style>
