---
import type { CollectionEntry } from 'astro:content'
import { getEntry, render } from 'astro:content'
import Block from 'fulldev-ui/components/Block.astro'
import Container from 'fulldev-ui/components/Container.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Image from 'fulldev-ui/components/Image.astro'
import Layout from 'fulldev-ui/components/Layout.astro'
import Prose from 'fulldev-ui/components/Prose.astro'
import Section from 'fulldev-ui/components/Section.astro'
import Sidebar from 'fulldev-ui/components/Sidebar.astro'
import Toc from 'fulldev-ui/components/Toc.astro'
import Footer from 'fulldev-ui/globals/Footer.astro'
import Header from 'fulldev-ui/globals/Header.astro'

interface Props extends CollectionEntry<'pages'> {}

const { title, description, image, blocks, ...rest } = Astro.props.data
const { Content, headings } = await render(Astro.props)
const header = (await getEntry('globals', 'header'))?.data
const footer = (await getEntry('globals', 'footer'))?.data
---

<Layout
  class:list="page"
  {...rest}
>
  <Header {...header} />
  <Element as="main">
    {
      Astro.props?.body?.trim() && (
        <Section>
          <Container>
            <Prose size="md">
              <Element as="h1">{title}</Element>
              <Element as="p">{description}</Element>
              <Image {...image} />
              <Content />
            </Prose>
            <Sidebar>
              <Toc
                size="sm"
                heading={title}
                {headings}
              />
            </Sidebar>
          </Container>
        </Section>
      )
    }
    {blocks?.map((block) => <Block {...block} />)}
  </Element>
  <Footer {...footer} />
</Layout>

<style>
  .prose {
    margin-right: auto;
    margin-left: auto;
  }
</style>
