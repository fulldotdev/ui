---
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
import Container from 'fulldev-ui/components/Container.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Paragraph from 'fulldev-ui/components/Paragraph.astro'
import Prose from 'fulldev-ui/components/Prose.astro'
import Toc from 'fulldev-ui/components/Toc.astro'
import Layout from 'fulldev-ui/layouts/Layout.astro'
import { mergeDeep } from 'remeda'

type Props = CollectionEntry<'docs'>

const layout = await getEntry('layouts', 'docs')
const merged = mergeDeep(layout || {}, Astro.props)

const {
  render,
  data: { title, description },
} = merged

const { Content } = await render()
---

<Layout
  class:list="doc-layout"
  {...merged}
>
  <Container class:list="doc-layout-container">
    <Toc {render} />
    <Prose>
      <Heading
        as="h1"
        size="4xl"
        text={title}
      />
      <Paragraph
        muted
        size="lg"
        text={description}
      />
      <Content />
    </Prose>
  </Container>
</Layout>

<style is:global>
  @layer fulldev {
    .doc-layout {
      .doc-layout-container {
        @apply relative flex w-full grow items-start justify-evenly gap-x-gutter;
      }

      .toc {
        @apply order-last;
      }
    }
  }
</style>
