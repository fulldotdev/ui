---
import type { ComponentProps } from 'astro/types'
import type { CollectionEntry } from 'astro:content'
import { getEntries } from 'astro:content'
import Content3 from 'fulldev-ui/blocks/Content3.astro'
import Footer from 'fulldev-ui/blocks/Footer.astro'
import Header from 'fulldev-ui/blocks/Header.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Layout from 'fulldev-ui/components/Layout.astro'
import type { PageSchema } from 'fulldev-ui/schemas/page.ts'
import { getHref } from 'fulldev-ui/utils/getHref.ts'

interface Props extends ComponentProps<typeof Layout>, PageSchema {
  render: CollectionEntry<'pages'>['render']
}

const {
  title,
  description,
  list,
  button,
  buttons,
  header,
  sidebar,
  render,
  parents,
  footer,
} = Astro.props

const parentEntries = parents && (await getEntries(parents))

const { Content } = await render()
---

<Layout
  class:list="job"
  {...Astro.props}
>
  <Header
    {...sidebar}
    {...header}
  />
  <Element as="main">
    <Content3
      badges={parentEntries?.map((parent) => ({
        text: parent.data.title,
        href: getHref(parent.slug),
      }))}
      heading={title}
      paragraph={description}
      {list}
      {button}
      {buttons}
    >
      <Content />
    </Content3>
  </Element>
  <Footer {...footer} />
</Layout>
