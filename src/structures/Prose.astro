---
import type { HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'

interface Props extends HTMLAttributes<'div'> {
  align?: 'start' | 'center' | 'end' | 'columns'
}

const { align = 'start', ...rest } = Astro.props
---

<Element
  class:list={`prose align-${align}`}
  {...rest}
>
  <slot />
</Element>

<style is:global>
  @layer fulldev {
    .prose {
      display: flex;
      flex-direction: column;
      width: 100%;
      max-width: var(--container-3xl);

      &.align-start {
        align-items: flex-start;
        align-self: flex-start;
        margin-right: auto;
        text-align: left;

        > *:not(> * > *) {
          text-align: left;
        }
      }

      &.align-center {
        align-items: center;
        align-self: center;
        margin-right: auto;
        margin-left: auto;
        text-align: center;

        > *:not(> * > *) {
          text-align: center;
        }
      }

      &.align-end {
        align-items: flex-end;
        align-self: flex-end;
        margin-left: auto;
        margin-left: auto;
        text-align: right;

        > *:not(> * > *) {
          text-align: right;
        }
      }

      &.align-columns {
        column-gap: var(--spacing-8);
        break-inside: avoid;
        max-width: none;

        @media (min-width: 1024px) {
          columns: 2;
        }
      }

      > *,
      .tagline + *,
      .proof + *,
      .channel + .channel {
        margin-top: var(--spacing-4);
      }

      > .group,
      > .button,
      > .buttons,
      > .channel {
        margin-top: var(--spacing-8);
      }

      > .form,
      > img,
      > p > img {
        margin-top: var(--spacing-12);
        margin-bottom: var(--spacing-12);
      }

      > h2 {
        margin-top: var(--spacing-10);
      }

      > h3 {
        margin-top: var(--spacing-8);
      }

      > h4,
      > h5,
      > h6 {
        margin-top: var(--spacing-6);
      }

      code:not(:is(.astro-code, h1, h2, h3, h4, h5, h6) code) {
        border-radius: var(--radius-sm);
        background-color: var(--color-muted);
        padding-top: var(--spacing-0-5);
        padding-right: var(--spacing-1-5);
        padding-bottom: var(--spacing-0-5);
        padding-left: var(--spacing-1-5);
        font-weight: var(--font-medium);
        font-size: var(--text-sm);
        font-family: var(--font-mono);
      }

      > aside {
        border: 1px solid var(--color-destructive);
        border-radius: var(--radius-md);
        padding: var(--spacing-4);
        color: var(--color-destructive);
      }

      blockquote > p + p {
        margin-top: var(--spacing-1);
      }

      > *:first-child {
        margin-top: var(--spacing-0);
      }
    }
  }
</style>
