---
import Card from '@/components/Card.astro'
import Container from '@/components/Container.astro'
import Heading from '@/components/Heading.astro'
import Image from '@/components/Image.astro'
import List from '@/components/List.astro'
import Matrix from '@/components/Matrix.astro'
import Paragraph from '@/components/Paragraph.astro'
import Prose from '@/components/Prose.astro'
import Section from '@/components/Section.astro'
import { getHref } from '@/lib/getHref'
import type { CollectionEntry } from 'astro:content'
import { getCollection, getEntries } from 'astro:content'

interface Props {
  id?: CollectionEntry<'pages'>['id']
  heading?: string | undefined
  paragraph?: string | undefined
  pages?: CollectionEntry<'pages'>[]
}

const { id, heading, paragraph, pages } = Astro.props

// Jobs that reference the current category, or any of `pages` select categories
const jobs = await getCollection('pages', (page) =>
  page.data.categories?.some((category) => category.id == id || pages?.some((p) => p.id == category.id))
)

const pageEntries = pages && (await getEntries(pages))
---

<Section class="job-category-1">
  <Container>
    <Prose>
      <Heading
        as="h1"
        size="3xl"
        text={heading}
      />
      <Paragraph text={paragraph} />
    </Prose>
  </Container>
  <Container>
    <Matrix class="gap-2">
      {
        pageEntries?.map(({ id, data: { title, image } }) => (
          <Card
            class="category-card"
            href={getHref(id)}
          >
            <Image {...image} />
            <Heading
              as="h3"
              size="md"
              text={title}
            />
          </Card>
        ))
      }
    </Matrix>
    <Matrix>
      {
        jobs?.map(({ id, data: { title, list } }) => (
          <Card
            class="job-card"
            href={getHref(id)}
          >
            <Heading
              as="h2"
              size="lg"
              text={title}
            />
            <List
              size="sm"
              items={list}
            />
          </Card>
        ))
      }
    </Matrix>
  </Container>
</Section>

<style>
  @layer fulldev {
    .section {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-12);
      padding-top: 0px;
    }

    .container:first-child {
      border-bottom: 1px solid var(--color-border);
      padding-top: var(--spacing-12);
      padding-bottom: var(--spacing-12);
    }

    .container:last-child {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-12);
    }

    .category-card {
      display: grid;
      grid-template-columns: repeat(3, minmax(0, 1fr));
      align-items: center;
      border-radius: var(--radius-sm);
      background-color: transparent;
      padding: 0px;

      .image {
        border-radius: var(--radius-sm);
        width: 100%;
        height: auto;
        object-fit: cover;
      }

      .heading {
        grid-column: span 2;
        padding: var(--spacing-4);
      }
    }

    .job-card {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-3);
    }
  }
</style>
