---
import type { ComponentProps, HTMLAttributes, HTMLTag } from 'astro/types'
import Badge from 'fulldev-ui/components/Badge.astro'
import Buttons from 'fulldev-ui/components/Buttons.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Image from 'fulldev-ui/components/Image.astro'
import Lead from 'fulldev-ui/components/Lead.astro'
import Paragraph from 'fulldev-ui/components/Paragraph.astro'
import Rating from 'fulldev-ui/components/Rating.astro'
import Tagline from 'fulldev-ui/components/Tagline.astro'

interface Props extends HTMLAttributes<'section'> {
  rating?: ComponentProps<typeof Rating> | undefined
  badge?: ComponentProps<typeof Badge> | undefined
  tagline?: ComponentProps<typeof Tagline>['text']
  heading?: ComponentProps<typeof Heading>['text']
  lead?: ComponentProps<typeof Lead>['text']
  paragraph?: ComponentProps<typeof Paragraph>['text']
  buttons?: ComponentProps<typeof Buttons>['buttons']
  image?: ComponentProps<typeof Image>['id']
  level?: ComponentProps<typeof Heading>['level']
  as?: HTMLTag
  size?: 'sm' | 'md' | 'lg' | undefined
  variant?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | undefined
}

const {
  as = 'section',
  size = 'lg',
  variant = 1,
  level = 1,
  rating,
  tagline,
  badge,
  heading,
  lead,
  paragraph,
  buttons,
  image,
  ...rest
} = Astro.props
---

<Element
  class:list="intro"
  {as}
  {size}
  {variant}
  {...rest}
>
  <Element class:list="intro-container">
    <Element class:list="intro-content">
      <Rating
        {size}
        {...rating}
      />
      <Tagline
        text={tagline}
        {size}
      />
      <Badge
        {size}
        {...badge}
      />
      <Heading
        text={heading}
        as="h1"
        level={3}
        {size}
      />
      <Lead
        text={lead}
        {size}
      />
      <Paragraph
        text={paragraph}
        {size}
      />
      <slot name="content" />
    </Element>

    <Image
      class:list="intro-image"
      {...image}
    />
    <slot />
  </Element>
</Element>

<style is:global>
  @layer fulldev {
    .intro {
      @apply relative w-full;

      .intro-container {
        @apply mx-auto flex h-full w-full flex-col;
      }

      .intro-content {
        @apply flex max-w-screen-md flex-col gap-6;
      }

      &.dark {
        @apply bg-background;
      }

      /* Background left */
      &.variant-1 {
        .intro-container {
          @apply max-w-container justify-center px-gutter py-16;
        }

        .intro-image {
          @apply absolute inset-0 h-full w-full object-cover opacity-30;
        }
      }
    }
  }
</style>
