---
import type { ComponentProps } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Card from 'fulldev-ui/components/Card.astro'
import Container from 'fulldev-ui/components/Container.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Grid from 'fulldev-ui/components/Grid.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Image from 'fulldev-ui/components/Image.astro'
import Price from 'fulldev-ui/components/Price.astro'

interface Props {
  title?: string | undefined
  button?: ComponentProps<typeof Button> | undefined
  products?: {
    href?: string | undefined
    title?: string | undefined
    images?: ComponentProps<typeof Image>[] | undefined
    price?: number | undefined
  }[]
}

const { title, button, products } = Astro.props
---

<Element class:list={`products products-1`}>
  <Container>
    <Element class="spread">
      <Heading
        as="h2"
        size="2xl"
        text={title}
      />
      <Button
        class="start"
        variant="secondary"
        size="sm"
        {...button}
      />
    </Element>
    <Grid size="md">
      {
        products?.map(({ href, title, images, price }) => (
          <Card {href}>
            <Image {...images?.[0]} />
            <Element class="spread">
              <Heading as="h3">{title}</Heading>
              <Price amount={price} />
            </Element>
          </Card>
        ))
      }
    </Grid>
    <Button
      class="end"
      variant="secondary"
      {...button}
    />
  </Container>
</Element>

<style>
  @layer fulldev {
    .container {
      display: flex;
      row-gap: var(--spacing-8);
      flex-direction: column;
      align-items: flex-start;
      padding-top: var(--spacing-16);
      padding-bottom: var(--spacing-16);
    }

    .spread {
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: var(--spacing-8);
      width: 100%;
    }

    .button.start {
      display: none;
    }

    .card {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-3);

      &:hover .image {
        opacity: 0.75;
      }

      .spread {
        font-weight: var(--font-weight-medium) !important;
        line-height: var(--text-base--line-height);
      }

      .heading {
        font-weight: var(--font-weight-medium) !important;
        font-size: var(--text-base) !important;
        line-height: var(--text-base--line-height) !important;
      }

      .price {
        line-height: var(--text-base--line-height);
      }
    }

    .image {
      transition: var(--transition);
      border-radius: var(--radius-lg);
      aspect-ratio: 1 / 1;
    }

    @media (min-width: 1024px) {
      .button.start {
        display: flex;
      }

      .button.end {
        display: none;
      }
    }
  }
</style>
