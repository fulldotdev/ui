---
import Heading from 'fulldev-ui/components/Heading.astro'
import Paragraph from 'fulldev-ui/components/Paragraph.astro'
import Proof from 'fulldev-ui/components/Proof.astro'
import Tagline from 'fulldev-ui/components/Tagline.astro'
import type { BlockSchema } from 'fulldev-ui/schemas/block'
import Card from 'fulldev-ui/structures/Card.astro'
import Container from 'fulldev-ui/structures/Container.astro'
import Masonry from 'fulldev-ui/structures/Masonry.astro'
import Section from 'fulldev-ui/structures/Section.astro'
import Writeup from 'fulldev-ui/structures/Writeup.astro'

interface Props extends BlockSchema {}

const { depth = 2, tagline, heading, paragraph, cards, ...rest } = Astro.props
---

<Section
  class:list="reviews-1"
  {...rest}
>
  <Container>
    <Writeup align="center">
      <Tagline
        size="sm"
        text={tagline}
      />
      <Heading
        size="3xl"
        text={heading}
        {depth}
      />
      <Paragraph text={paragraph} />
    </Writeup>
    <Masonry>
      {
        cards?.map(({ tagline, avatar, rating, heading, paragraph }) => (
          <Card class="reviews-1-card">
            <Proof
              text={tagline}
              {rating}
              {avatar}
            />
            <Heading
              depth={(depth + 1) as 3}
              as="h3"
              size="md"
              text={heading}
            />
            <Paragraph
              size="sm"
              text={paragraph}
            />
          </Card>
        ))
      }
    </Masonry>
  </Container>
</Section>

<style is:global>
  @layer fulldev {
    .reviews-1 {
      .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: var(--spacing-16);
      }

      .reviews-1-cards {
        display: grid;
        gap: var(--spacing-6);

        @media (min-width: 1024px) {
          grid-template-columns: repeat(3, minmax(0, 1fr));
        }
      }

      .reviews-1-card {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-3);
      }

      .icon {
        color: var(--color-primary);
      }
    }
  }
</style>
