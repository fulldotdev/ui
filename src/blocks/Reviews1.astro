---
import Abstract from '@/components/Abstract.astro'
import Box from '@/components/Box.astro'
import Card from '@/components/Card.astro'
import Container from '@/components/Container.astro'
import Masonry from '@/components/Masonry.astro'
import Rating from '@/components/Rating.astro'
import Section from '@/components/Section.astro'
import Writeup from '@/components/Writeup.astro'
import type { ReviewsSchema } from '@/schemas/blocks/reviews'
import { getCollection, getEntries } from 'astro:content'

interface Props extends ReviewsSchema {}

const { writeup, reviews } = Astro.props

const entries = reviews ? await getEntries(reviews) : await getCollection('reviews')
---

<Section class="reviews reviews-1">
  <Container class="flex flex-col items-center gap-12">
    <Writeup
      class="items-center text-center"
      markdown={writeup}
    >
      <slot />
    </Writeup>
    <Masonry length={entries?.length}>
      {
        entries?.map(({ data: { rating, title, description } }) => (
          <Card class="flex flex-col">
            <Abstract size="lg">
              <Rating score={rating} />
              <Box as="h3">{title}</Box>
              <Box as="p">{description}</Box>
            </Abstract>
          </Card>
        ))
      }
    </Masonry>
  </Container>
</Section>
