---
import type { ComponentProps } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Card from 'fulldev-ui/components/Card.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Grid from 'fulldev-ui/components/Grid.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Image from 'fulldev-ui/components/Image.astro'
import Prose from 'fulldev-ui/components/Prose.astro'

interface Props {
  size?: 'sm' | 'md' | 'lg' | undefined
  title?: string | undefined
  description?: string | undefined
  content?: string | undefined
  button?: ComponentProps<typeof Button> | undefined
  categories?: {
    href?: string | undefined
    title?: string | undefined
    image?: ComponentProps<typeof Image>
  }[]
}

const {
  size = 'sm',
  title,
  description,
  content,
  button,
  categories,
} = Astro.props
---

<Element class:list={`categories categories-1 size-${size}`}>
  <Element class="container">
    <Element class:list="spread">
      <Prose {size}>
        <Element as="h1">{title}</Element>
        <Element as="p">{description}</Element>
        <Fragment set:html={content} />
        <slot />
      </Prose>
      <Button
        class="start"
        variant="secondary"
        {size}
        {...button}
      />
    </Element>
    <Grid size="lg">
      {
        categories?.map(({ href, title, image }) => (
          <Card {href}>
            <Image {...image} />
            <Heading as="h4">{title}</Heading>
          </Card>
        ))
      }
    </Grid>
    <Button
      class="end"
      variant="secondary"
      {size}
      {...button}
    />
  </Element>
</Element>

<style>
  @layer fulldev {
    .container {
      display: flex;
      row-gap: var(--spacing-8);
      flex-direction: column;
      align-items: flex-start;
      margin-right: auto;
      margin-left: auto;
      padding-top: var(--spacing-16);
      padding-right: var(--gutter);
      padding-bottom: var(--spacing-16);
      padding-left: var(--gutter);
      width: 100%;
      max-width: var(--breakpoint-2xl);
    }

    .button.start {
      display: none;
    }

    .card {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-3);

      &:hover .image {
        opacity: 0.75;
      }
    }

    .image {
      transition: var(--transition);
      border-radius: var(--radius-lg);
    }

    @media (min-width: 1024px) {
      .spread {
        display: flex;
        align-items: center;
        width: 100%;
      }

      .button.start {
        display: flex;
      }

      .button.end {
        display: none;
      }
    }
  }
</style>
