---
import type { ComponentProps } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Column from 'fulldev-ui/components/Column.astro'
import Channel from 'fulldev-ui/components/experimental/Channel.astro'
import Form from 'fulldev-ui/components/experimental/Form.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Image from 'fulldev-ui/components/Image.astro'
import Input from 'fulldev-ui/components/Input.astro'
import Row from 'fulldev-ui/components/Row.astro'
import Section from 'fulldev-ui/components/Section.astro'
import Tagline from 'fulldev-ui/components/Tagline.astro'
import Text from 'fulldev-ui/components/Text.astro'
import Textarea from 'fulldev-ui/components/Textarea.astro'

interface Channel {
  type: 'tel' | 'email' | 'address'
  text: string
  heading?: string
  icon?: string
  href?: string
}

interface FormField {
  type: 'text' | 'email' | 'tel' | 'textarea'
  name: string
  label: string
  required?: boolean
}

interface Form {
  fields: FormField[]
  button: string
}

type Props = ComponentProps<typeof Section> & {
  heading: string
  form: Form
  text: string
  tagline: string
  googleMaps?: string
  buttons?: any[]
  socials?: { facebook?: string; instagram?: string }
  position?: string
  image?: string
  channels: Channel[]
  level?: number
}

const {
  heading,
  form,
  text,
  tagline,
  googleMaps,
  buttons,
  socials,
  position,
  image,
  channels,
  level = 2,
  ...rest
} = Astro.props
---

<Section
  class:list="contact"
  structure="split"
  {...rest}
>
  <Column>
    <Tagline text={tagline} />
    <Heading
      level={level}
      text={heading}
    />
    <Text text={text} />
    <Row>
      {buttons?.map((button: any) => <Button {...button} />)}
    </Row>

    <Column>
      {
        channels.map((channel: any) => (
          <Channel
            heading={channel.heading}
            text={channel.text}
            icon={channel.icon}
            href={channel.href}
          />
        ))
      }
    </Column>

    {
      socials && (
        <Row size="sm">
          {socials?.facebook && (
            <Button
              href={socials.facebook}
              variant="secondary"
              icon="brand-facebook"
            />
          )}
          {socials?.instagram && (
            <Button
              href={socials.instagram}
              variant="secondary"
              icon="brand-instagram"
            />
          )}
        </Row>
      )
    }

    <Form
      action="/thank-you"
      method="POST"
    >
      {
        form.fields.map((field: any) => {
          if (field.type === 'textarea') {
            return (
              <Textarea
                label={field.label}
                id={field.name}
                name={field.name}
                required={field.required}
              />
            )
          }
          return (
            <Input
              label={field.label}
              id={field.name}
              name={field.name}
              type={field.type}
              required={field.required}
            />
          )
        })
      }
      <Button
        as="button"
        type="submit"
        color="brand"
        text={form.button}
      />
    </Form>
  </Column>

  <Image
    {position}
    src={image}
  />
</Section>

<style is:global lang="scss">
  @layer fulldev {
    .contact {
      .channel + .channel {
        margin-top: var(--space-3) !important;
      }
    }
  }
</style>
