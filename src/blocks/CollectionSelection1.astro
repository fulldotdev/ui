---
import Abstract from '@/components/Abstract.astro'
import Box from '@/components/Box.astro'
import Button from '@/components/Button.astro'
import Container from '@/components/Container.astro'
import Grid from '@/components/Grid.astro'
import Image from '@/components/Image.astro'
import Section from '@/components/Section.astro'
import Writeup from '@/components/Writeup.astro'
import { getHref } from '@/lib/getHref'
import type { CollectionSelectionSchema } from '@/schemas/models/collectionSelection'
import { getEntries } from 'astro:content'

interface Props extends CollectionSelectionSchema {}

const { writeup, button, collections } = Astro.props

const entries = collections && (await getEntries(collections))
---

<Section class="collection-selection collection-selection-1">
  <Container class="flex flex-col gap-8">
    <Box class="flex w-full items-center justify-between gap-8">
      <Writeup
        size="sm"
        markdown={writeup}
      >
        <slot />
      </Writeup>
      <Button
        class="max-lg:hidden"
        variant="link"
        reverse
        {...button}
      />
    </Box>
    <Grid length={entries?.length}>
      {
        entries?.map(({ collection, id, data: { title, image } }) => (
          <Box
            class="group flex flex-col gap-4"
            href={getHref(collection, id)}
          >
            <Image
              class="aspect-square rounded-lg transition-opacity group-hover:opacity-75"
              {...image}
            />
            <Abstract>
              <Box as="h3">{title}</Box>
            </Abstract>
          </Box>
        ))
      }
    </Grid>
    <Button
      class="lg:hidden"
      variant="secondary"
      {...button}
    />
  </Container>
</Section>
