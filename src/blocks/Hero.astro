---
import type { ComponentProps, HTMLAttributes, HTMLTag } from 'astro/types'
import Badge from 'fulldev-ui/components/Badge.astro'
import Buttons from 'fulldev-ui/components/Buttons.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Image from 'fulldev-ui/components/Image.astro'
import Lead from 'fulldev-ui/components/Lead.astro'
import Paragraph from 'fulldev-ui/components/Paragraph.astro'
import Rating from 'fulldev-ui/components/Rating.astro'
import Tagline from 'fulldev-ui/components/Tagline.astro'

interface Props extends HTMLAttributes<'section'> {
  as?: HTMLTag
  image?: ComponentProps<typeof Image>['id']
  buttons?: ComponentProps<typeof Buttons>['buttons']
  heading?: ComponentProps<typeof Heading>['text']
  lead?: ComponentProps<typeof Lead>['text']
  rating?: ComponentProps<typeof Rating> | undefined
  tagline?: ComponentProps<typeof Tagline>['text']
  badge?: ComponentProps<typeof Badge> | undefined
  paragraph?: ComponentProps<typeof Paragraph>['text']
  level?: ComponentProps<typeof Heading>['level']
  size?: 'sm' | 'md' | 'lg' | undefined
  variant?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | undefined
}

const {
  as = 'section',
  size = 'lg',
  variant = 8,
  level = 1,
  rating,
  tagline,
  badge,
  heading,
  lead,
  paragraph,
  buttons,
  image,
  ...rest
} = Astro.props
---

<Element
  class:list="hero"
  {as}
  {size}
  {variant}
  {...rest}
>
  <Element class:list="hero-container">
    <Element class:list="hero-segment">
      <Element class:list="hero-content">
        <Rating
          {size}
          {...rating}
        />
        <Tagline
          text={tagline}
          {size}
        />
        <Badge
          {size}
          {...badge}
        />
        <Heading
          text={heading}
          level={1}
          {size}
        />
        <Lead
          text={lead}
          {size}
        />
        <Paragraph
          text={paragraph}
          {size}
        />
        <slot name="content" />
      </Element>
      <Buttons
        variant="primary"
        {size}
        {buttons}
      />
      <slot name="segment" />
    </Element>
    <Image {...image} />
    <slot />
  </Element>
</Element>

<style is:global>
  @layer fulldev {
    .hero {
      @apply relative w-full;

      .hero-container {
        @apply mx-auto flex h-full w-full flex-col;
      }

      .hero-segment {
        @apply z-10 flex flex-col items-start gap-8;
      }

      .hero-content {
        @apply flex max-w-screen-md flex-col gap-6;
      }

      /* Column left aligned */
      &.variant-1 {
        .hero-container {
          @apply max-w-container px-gutter py-8;
        }

        .hero-segment {
          @apply gap-8 py-16;
        }
      }

      /* Column centered */
      &.variant-2 {
        .hero-container {
          @apply max-w-container items-center px-gutter py-8;
        }

        .hero-segment {
          @apply items-center py-16;
        }

        .hero-content {
          @apply items-center text-center;
        }
      }

      /* Spread */
      &.variant-3 {
        .hero-container {
          @apply max-w-container items-center px-gutter py-8;
        }

        .hero-segment {
          @apply w-full flex-row flex-wrap items-end justify-between py-16;
        }
      }

      /* Split */
      &.variant-4 {
        .hero-container {
          @apply max-w-container px-gutter py-8 lg:grid lg:grid-cols-2 lg:items-center;
        }
      }

      /* Split fill */
      &.variant-5 {
        @apply min-h-hero;

        .hero-container {
          @apply max-w-container lg:grid lg:grid-cols-2 lg:items-center;
        }

        .hero-segment {
          @apply w-auto max-w-screen-md px-gutter pb-16 pt-24 lg:pb-24;
        }

        .image {
          @apply right-0 top-0 h-full object-cover lg:absolute lg:w-1/2;
        }
      }

      /* Background left */
      &.variant-6 {
        @apply min-h-hero;

        .hero-container {
          @apply max-w-container justify-center px-gutter py-16;
        }

        .image {
          @apply absolute inset-0 h-full w-full object-cover opacity-30;
        }
      }

      /* Background center */
      &.variant-7 {
        @apply min-h-hero;

        .hero-container {
          @apply max-w-container items-center justify-center px-gutter py-16;
        }

        .hero-segment,
        .hero-content {
          @apply items-center text-center;
        }

        .image {
          @apply absolute inset-0 h-full w-full object-cover opacity-30;
        }
      }

      /* Background spread */
      &.variant-8 {
        @apply min-h-hero;

        .hero-container {
          @apply max-w-container items-center justify-end px-gutter py-16;
        }

        .hero-segment {
          @apply w-full flex-row flex-wrap items-end justify-between;
        }

        .image {
          @apply absolute inset-0 h-full w-full object-cover opacity-30;
        }
      }
    }
  }
</style>
