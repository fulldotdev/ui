---
import type { HTMLAttributes, HTMLTag } from 'astro/types'
import Channel from 'fulldev-ui/components/Channel.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Logo from 'fulldev-ui/components/Logo.astro'
import Menu from 'fulldev-ui/components/Menu.astro'
import { default as Paragraph } from 'fulldev-ui/components/Paragraph.astro'
import Social from 'fulldev-ui/components/Social.astro'
import type { BlockSchema } from 'fulldev-ui/schemas/components/block'

interface Props extends HTMLAttributes<'footer'>, BlockSchema {
  as?: HTMLTag
}

const {
  as = 'footer',
  logo,
  heading,
  paragraph,
  socials,
  channels,
  menus,
  // hours,
  // html,
  ...rest
} = Astro.props
---

<Element
  class:list="footer"
  {as}
  {...rest}
>
  <Element class:list="footer-container">
    <Element class:list="footer-content">
      <Logo
        size="sm"
        {...logo}
      />
      <Paragraph
        size="sm"
        text={paragraph}
      />
      <Element class:list="footer-socials">
        {
          socials?.map((social) => (
            <Social
              variant="secondary"
              size="sm"
              href={social}
            />
          ))
        }
      </Element>
    </Element>
    <Element class:list="footer-channels">
      {channels?.map((channel) => <Channel {...channel} />)}
    </Element>
  </Element>
  <!-- <Fragment set:html={html} /> -->
  <!-- <Hours {hours} /> -->
  <!-- <Menu
    direction="row"
    groups={menu}
    {size}
  /> -->
  <!-- <Element class:list="hours column">
    <Heading
      text={hours?.heading}
      as="h5"
    />
    <Element>
      {
        Object.entries(hours?.days ?? {})?.map(([key, value]: any) => (
          <Element class:list="spread">
            <Paragraph text={key} />
            <Paragraph text={value} />
          </Element>
        ))
      }
    </Element>
  </Element> -->
</Element>

<style is:global>
  @layer fulldev {
    .footer {
      @apply relative mt-auto w-full border-t bg-background;

      &.dark {
        @apply bg-background;
      }

      .footer-container {
        @apply container flex flex-wrap justify-between gap-12 py-12;
      }

      .footer-content {
        @apply flex max-w-60 flex-col gap-4;
      }
    }
  }
</style>
