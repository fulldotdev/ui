---
import { getEntries } from 'astro:content'
import Card from 'fulldev-ui/components/Card.astro'
import Container from 'fulldev-ui/components/Container.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Image from 'fulldev-ui/components/Image.astro'
import Section from 'fulldev-ui/components/Section.astro'
import type { BlockSchema } from 'fulldev-ui/schemas/fields/block'
import { getHref } from 'fulldev-ui/utils/getHref'

interface Props extends BlockSchema {}

const { categories } = Astro.props

const entries = categories && (await getEntries(categories))
---

<Section class:list={`categories categories-2`}>
  <Container>
    {
      entries?.map((category) => (
        <Card href={getHref(category)}>
          <Image {...category.data.image} />
          <Element as="span">{category.data.title}</Element>
        </Card>
      ))
    }
  </Container>
</Section>

<style>
  .categories {
    padding-top: var(--spacing-6);
    padding-bottom: var(--spacing-6);
  }

  .container {
    display: flex;
    justify-content: flex-start;
    gap: var(--spacing-4);
  }

  .card {
    display: flex;
    flex-grow: 0;
    flex-shrink: 1;
    align-items: center;
    border-radius: var(--radius-md);
    background-color: var(--color-secondary);
    width: auto;
    height: var(--spacing-12);
    min-height: var(--spacing-12);
    color: var(--color-accent-foreground);
    font-weight: var(--font-weight-medium);
    font-size: var(--text-sm);

    &:hover {
      background-color: var(--color-accent-hover);
    }

    span {
      padding-right: var(--spacing-5);
      padding-left: var(--spacing-5);
    }

    .image {
      width: auto;
      height: 100%;
    }
  }
</style>
