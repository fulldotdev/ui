---
import Button from 'fulldev-ui/components/Button.astro'
import Card from 'fulldev-ui/components/Card.astro'
import Container from 'fulldev-ui/components/Container.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import List from 'fulldev-ui/components/List.astro'
import Paragraph from 'fulldev-ui/components/Paragraph.astro'
import Prose from 'fulldev-ui/components/Prose.astro'
import Section from 'fulldev-ui/components/Section.astro'
import Stack from 'fulldev-ui/components/Stack.astro'
import Tagline from 'fulldev-ui/components/Tagline.astro'
import type { BlockSchema } from 'fulldev-ui/schemas/block'

interface Props extends BlockSchema {}

const { heading, paragraph, button, pros, cons } = Astro.props
---

<Section class="compare-1">
  <Container>
    <Prose class="text-center">
      <Heading
        size="5xl"
        text={heading}
      />
      <Paragraph
        size="xl"
        text={paragraph}
      />
    </Prose>
    <Stack>
      {
        [cons || {}, pros || {}].map(
          ({ tagline, heading, paragraph, list }, i) => (
            <Card>
              <Prose>
                <Tagline text={tagline} />
                <Heading
                  size="3xl"
                  text={heading}
                />
                <Paragraph
                  muted={i === 0}
                  text={paragraph}
                />
                <List
                  icon={i === 0 ? 'x' : 'check'}
                  muted={i === 0}
                  size="sm"
                  items={list}
                />
              </Prose>
            </Card>
          )
        )
      }
    </Stack>
    <Button {...button} />
  </Container>
</Section>

<style>
  @layer fulldev {
    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: var(--spacing-16);
    }

    .stack {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      align-items: stretch;
      margin-right: auto;
      margin-left: auto;
    }

    .card {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      gap: var(--spacing-8);
      padding: var(--spacing-8);
      min-width: var(--container-sm);

      &:first-child {
        background-color: transparent;
      }
    }
  }
</style>
