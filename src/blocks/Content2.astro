---
import type { ComponentProps } from 'astro/types'
import Badge from 'fulldev-ui/components/Badge.astro'
import Button from 'fulldev-ui/components/Button.astro'
import Container from 'fulldev-ui/components/Container.astro'
import Group from 'fulldev-ui/components/Group.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Image from 'fulldev-ui/components/Image.astro'
import List from 'fulldev-ui/components/List.astro'
import Paragraph from 'fulldev-ui/components/Paragraph.astro'
import Prose from 'fulldev-ui/components/Prose.astro'
import Section from 'fulldev-ui/components/Section.astro'
import Tagline from 'fulldev-ui/components/Tagline.astro'
import Toc from 'fulldev-ui/components/Toc.astro'
import type { BlockSchema } from 'fulldev-ui/schemas/components/block'

interface Props extends ComponentProps<typeof Section>, BlockSchema {
  headings?: ComponentProps<typeof Toc>['headings']
}

const {
  tagline,
  badge,
  badges,
  heading,
  paragraph,
  list,
  button,
  buttons,
  image,
  headings,
  content,
  ...rest
} = Astro.props
---

<Section
  class:list="content-2"
  {...rest}
>
  <Container>
    <Prose>
      <Group>
        <Badge {...badge} />
        {badges?.map((badge) => <Badge {...badge} />)}
      </Group>
      <Tagline
        size="sm"
        text={tagline}
      />
      <Heading
        as="h1"
        size="4xl"
        text={heading}
      />
      <Paragraph
        muted
        size="lg"
        text={paragraph}
      />
      <List items={list} />
      <Group>
        <Button {...button} />
        {buttons?.map((button) => <Button {...button} />)}
      </Group>
      <Fragment set:html={content} />
      <slot />
    </Prose>
    <Image {...image} />
  </Container>
</Section>

<style is:global>
  @layer fulldev {
    .content-2 {
      .container {
        @apply grid items-start gap-x-gutter gap-y-16 lg:grid-cols-2;
      }

      .prose,
      .image {
        @apply lg:sticky lg:top-sticky-16;
      }

      .prose {
        @apply max-w-screen-sm;
      }

      .image {
        @apply rounded-md;
      }
    }
  }
</style>
