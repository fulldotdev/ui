---
import Buttons from 'fulldev-ui/components/Buttons.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Image from 'fulldev-ui/components/Image.astro'
import type { BlockSchema } from 'fulldev-ui/schemas/block'
import Container from 'fulldev-ui/structures/Container.astro'
import Panel from 'fulldev-ui/structures/Panel.astro'
import Prose from 'fulldev-ui/structures/Prose.astro'
import Section from 'fulldev-ui/structures/Section.astro'
import Split from 'fulldev-ui/structures/Split.astro'

interface Props extends BlockSchema {}

const {
  size = 'lg',
  align = 'center',
  content,
  title,
  description,
  buttons,
  image,
} = Astro.props
---

<Section class:list={`cta cta-6 size-${size} align-${align}`}>
  <Container>
    <Panel>
      <Split {align}>
        <Prose {size}>
          <Element as="h1">{title}</Element>
          <Element as="p">{description}</Element>
          <Fragment set:html={content} />
          <slot />
          <Buttons
            {size}
            {buttons}
          />
        </Prose>
        <Image {...image} />
      </Split>
    </Panel>
  </Container>
</Section>

<style>
  @layer fulldev {
    .panel {
      padding-top: var(--spacer);
      padding-right: var(--gutter);
      padding-bottom: var(--spacer);
      padding-left: var(--gutter);
    }

    .image {
      margin-bottom: calc(var(--spacer) * -1.2);
      border-radius: var(--radius-lg);
      width: 100vw;
      min-width: 100vw;

      @media (min-width: 1024px) {
        width: min(50vw, 700px);
        min-width: min(50vw, 700px);
        height: calc(100% + (2 * var(--spacer)));
        min-height: calc(100% + (2 * var(--spacer)));
        object-fit: cover;
        object-position: top left;
      }
    }
  }
</style>
