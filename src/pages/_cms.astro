---
import { Octokit } from "@octokit/rest"

const octokit = new Octokit({
  auth: import.meta.env.GITHUB_TOKEN,
})

const owner = import.meta.env.GITHUB_OWNER
const repo = import.meta.env.GITHUB_REPO
const branch = import.meta.env.GITHUB_BRANCH

// Update a file example
async function updateFile(path: string, content: string, message: string) {
  try {
    // Get current file to get its SHA
    const { data: currentFile } = await octokit.rest.repos.getContent({
      owner,
      repo,
      path,
      ref: branch,
    })

    // Update the file
    await octokit.rest.repos.createOrUpdateFileContents({
      owner,
      repo,
      path,
      message,
      branch,
      content: Buffer.from(content).toString("base64"),
      sha: Array.isArray(currentFile) ? undefined : currentFile.sha,
    })

    console.log(`Successfully updated ${path}`)
  } catch (error) {
    console.error(`Failed to update ${path}:`, error)
  }
}

// Example usage:
await updateFile(
  "src/content/pages/index.md",
  "new content",
  "Update homepage content"
)
---
