---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Input from 'fulldev-ui/components/Input.astro'
import Popover from 'fulldev-ui/components/Popover.astro'
import Select from 'fulldev-ui/components/Select.astro'
import Textarea from 'fulldev-ui/components/Textarea.astro'

interface Props extends HTMLAttributes<'form'> {
  button?: ComponentProps<typeof Button> | undefined
  fields?:
    | (ComponentProps<typeof Select> &
        ComponentProps<typeof Textarea> &
        ComponentProps<typeof Input> & {
          type: 'select' | 'textarea' | 'text' | 'number' | 'tel' | 'email' | 'password' | undefined
        })[]
    | undefined
}

const { method = 'POST', fields, button, ...rest } = Astro.props

const components = {
  select: Select,
  textarea: Textarea,
  text: Input,
  number: Input,
  tel: Input,
  email: Input,
  password: Input,
  file: Input,
}
---

<Element
  class:list="flex flex-col gap-4 w-full"
  as="form"
  {method}
  {...rest}
>
  <Popover>
    <div>content</div>
  </Popover>
  {
    fields?.map(({ type, ...field }) => {
      const Component = components[type || 'text']
      return (
        <Component
          {type}
          {...field}
        />
      )
    })
  }
  <slot />
  <Button
    size="lg"
    type="submit"
    {...button}
  />
</Element>
