---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Input from 'fulldev-ui/components/Input.astro'
import Select from 'fulldev-ui/components/Select.astro'
import Textarea from 'fulldev-ui/components/Textarea.astro'

interface Props extends HTMLAttributes<'form'> {
  button?: ComponentProps<typeof Button> | undefined
  fields?:
    | (ComponentProps<typeof Select> &
        ComponentProps<typeof Textarea> &
        ComponentProps<typeof Input> & {
          type:
            | 'select'
            | 'textarea'
            | 'text'
            | 'number'
            | 'tel'
            | 'email'
            | 'password'
            | undefined
        })[]
    | undefined
}

const { method = 'POST', fields, button, ...rest } = Astro.props

const components = {
  select: Select,
  textarea: Textarea,
  text: Input,
  number: Input,
  tel: Input,
  email: Input,
  password: Input,
}
---

<Element
  class:list="form"
  as="form"
  {method}
  {...rest}
>
  {
    fields?.map(({ type, ...field }) => {
      const Component = components[type || 'text']
      return <Component {...field} />
    })
  }
  <slot />
  <Button
    type="submit"
    {...button}
  />
</Element>

<style is:global>
  @layer fulldev {
    .form {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-4);
      width: 100%;
    }
  }
</style>
