---
import { getCollection, getEntries } from "astro:content"

import { type ReviewsSchema } from "@/schemas/blocks/reviews"
import { getHref } from "@/lib/get-href"
import { transformImage } from "@/lib/transform-image"
import Reviews1 from "@/components/blocks/reviews-1"

type Props = ReviewsSchema

const { variant, reviews, html, ...schema } = Astro.props

const reviewEntries = reviews
  ? await getEntries(reviews)
  : await getCollection("reviews")

const props = {
  ...schema,
  reviews: await Promise.all(
    reviewEntries.map(async (review) => ({
      href: getHref(review),
      ...review.data,
      image: await transformImage(review.data.image),
    }))
  ),
}
---

{
  variant === "1" && (
    <Reviews1 {...props}>
      <Fragment set:html={html} />
    </Reviews1>
  )
}
