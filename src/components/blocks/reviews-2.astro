---
import type { ComponentProps } from "astro/types"

import { cn } from "@/lib/utils"
import Avatar from "@/components/elements/avatar.astro"
import ItemContent from "@/components/elements/item-content.astro"
import ItemDescription from "@/components/elements/item-description.astro"
import ItemMedia from "@/components/elements/item-media.astro"
import ItemTitle from "@/components/elements/item-title.astro"
import Item from "@/components/elements/item.astro"
import LinkGroup from "@/components/elements/link-group.astro"
import Link from "@/components/elements/link.astro"
import Masonry from "@/components/elements/masonry.astro"
import Rating from "@/components/elements/rating.astro"
import SectionContainer from "@/components/elements/section-container.astro"
import SectionContent from "@/components/elements/section-content.astro"
import SectionSplit from "@/components/elements/section-split.astro"
import SectionSplit from "@/components/elements/section-split.astro"
import Section from "@/components/elements/section.astro"
import TileContent from "@/components/elements/tile-content.astro"
import TileDescription from "@/components/elements/tile-description.astro"
import TileTitle from "@/components/elements/tile-title.astro"
import Tile from "@/components/elements/tile.astro"
import Typography from "@/components/elements/typography.astro"

interface Props extends ComponentProps<typeof Section> {
  links?: ComponentProps<typeof Link>[]
  reviews?: {
    title?: string
    description?: string
    rating?: number
    avatar?: ComponentProps<typeof Avatar>
    tagline?: string
    href?: string
  }[]
}

const { class: classList, align, size, links, reviews, ...props } = Astro.props
---

<Section class={cn("", classList)} size={size} align={align} {...props}>
  <SectionContainer>
    <SectionSplit align={align}>
      <SectionContent>
        <Typography size={size}>
          <slot />
        </Typography>
        <LinkGroup align={align}>
          {
            links?.map((link, i) => (
              <Link
                variant={i === 0 ? "default" : "outline"}
                size={size}
                {...link}
              />
            ))
          }
        </LinkGroup>
      </SectionContent>
      <Masonry>
        {
          reviews?.map(
            ({ title, description, rating, avatar, tagline, href }) => (
              <Tile href={href} variant="outline">
                <TileContent>
                  <Item class="-m-4" size="sm">
                    <ItemMedia>
                      <Avatar class="size-10" {...avatar} />
                    </ItemMedia>
                    <ItemContent>
                      <ItemTitle>{title}</ItemTitle>
                      <ItemDescription>{tagline}</ItemDescription>
                    </ItemContent>
                  </Item>
                  <Rating rating={rating} />
                  <TileTitle>{title}</TileTitle>
                  <TileDescription>{description}</TileDescription>
                </TileContent>
              </Tile>
            )
          )
        }
      </Masonry>
    </SectionSplit>
  </SectionContainer>
</Section>
