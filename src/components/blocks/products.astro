---
import { getCollection, getEntries } from "astro:content"

import { type ProductsSchema } from "@/schemas/blocks/products"
import { getHref } from "@/lib/get-href"
import { transformImage } from "@/lib/transform-image"

type Props = ProductsSchema

const { variant, products, collection, html, ...schema } = Astro.props

const productEntries = collection
  ? await getCollection(
      "pages",
      (product) =>
        product.data.type === "product" &&
        product.data.collections?.some((c) => c.id === collection.id)
    )
  : products
    ? await getEntries(products)
    : await getCollection("pages", (page) => page.data.type === "product")

const props = {
  ...schema,
  products: await Promise.all(
    productEntries.map(async (product) => ({
      href: getHref(product),
      ...product.data,
      images:
        "images" in product.data &&
        product.data.images &&
        (await Promise.all(
          product.data.images.map(async (image) => transformImage(image))
        )),
    }))
  ),
}
---
