---
import type { ComponentProps } from "astro/types"

import { cn } from "@/lib/utils"
import { Background } from "@/components/ui/background"
import { Button } from "@/components/ui/button"
import {
  Section,
  SectionActions,
  SectionContainer,
  SectionContent,
  SectionPanel,
} from "@/components/ui/section"
import { Typography } from "@/components/ui/typography"

interface Props extends ComponentProps<typeof Section> {
  background?: ComponentProps<typeof Background>["variant"]
  variant?: ComponentProps<typeof SectionPanel>["variant"]
  buttons?: ComponentProps<typeof Button>[]
}

const {
  class: className,
  align,
  size,
  buttons,
  background,
  variant,
  ...props
} = Astro.props
---

<Section class={cn("", className)} size={size} align={align} {...props}>
  <SectionContainer>
    <SectionPanel variant={variant}>
      <Background
        class="mask-y-from-white mask-y-from-75% mask-y-to-transparent"
        variant={background}
      />
      <SectionContent align={align}>
        <Typography size={size} align={align}>
          <slot />
        </Typography>
        <SectionActions align={align}>
          {
            buttons?.map((button, i) => (
              <Button
                variant={i === 0 ? "default" : "outline"}
                size={size}
                {...button}
              />
            ))
          }
        </SectionActions>
      </SectionContent>
    </SectionPanel>
  </SectionContainer>
</Section>
