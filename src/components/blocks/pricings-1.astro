---
import type { ComponentProps } from "astro/types"

import { cn } from "@/lib/utils"
import { Button } from "@/components/ui/button"
import { Icon } from "@/components/ui/icon"
import { List, ListItem } from "@/components/ui/list"
import {
  Section,
  SectionActions,
  SectionContainer,
  SectionContent,
  SectionStack,
} from "@/components/ui/section"
import {
  Tile,
  TileContent,
  TileDescription,
  TileTitle,
} from "@/components/ui/tile"
import { Typography } from "@/components/ui/typography"

interface Props extends ComponentProps<typeof Section> {
  buttons?: ComponentProps<typeof Button>[]
  pricings?: {
    title?: string
    description?: string
    icon?: string
    list?: string[]
    button?: ComponentProps<typeof Button>
    price?: string
    unit?: string
  }[]
}

const {
  class: className,
  align,
  size,
  buttons,
  pricings,
  ...props
} = Astro.props
---

<Section class={cn("", className)} size={size} align={align} {...props}>
  <SectionContainer>
    <SectionStack align={align}>
      <SectionContent align={align}>
        <Typography size={size} align={align}>
          <slot />
        </Typography>
        <SectionActions align={align}>
          {
            buttons?.map((button, i) => (
              <Button
                variant={i === 0 ? "default" : "outline"}
                size={size}
                {...button}
              />
            ))
          }
        </SectionActions>
      </SectionContent>
      {
        pricings && pricings.length > 0 && (
          <div class="flex flex-col items-stretch gap-6 md:flex-row">
            {pricings?.map(
              ({ title, description, icon, button, list, price, unit }) => (
                <Tile
                  class="min-w-4xs basis-4xs flex max-w-md flex-col justify-start text-left"
                  variant="outline"
                >
                  <TileContent class="flex h-full flex-col">
                    {icon && (
                      <div class="mb-3">
                        <Icon name={icon} />
                      </div>
                    )}
                    {title && (
                      <TileTitle class="not-first:mt-3">{title}</TileTitle>
                    )}
                    {description && (
                      <TileDescription class="text-muted-foreground text-base not-first:mt-2">
                        {description}
                      </TileDescription>
                    )}
                    {(price || unit) && (
                      <div class="font-semibold not-first:mt-4">
                        {price && (
                          <span class="text-foreground text-3xl">{price}</span>
                        )}
                        {unit && (
                          <span class="text-muted-foreground ml-1.5 text-base">
                            {unit}
                          </span>
                        )}
                      </div>
                    )}
                    {list && list.length > 0 && (
                      <List class="not-first:mt-4">
                        {list?.map((item) => (
                          <ListItem>{item}</ListItem>
                        ))}
                      </List>
                    )}
                    <div class="mt-auto pt-4">
                      <Button class="w-full" size={size} {...button} />
                    </div>
                  </TileContent>
                </Tile>
              )
            )}
          </div>
        )
      }
    </SectionStack>
  </SectionContainer>
</Section>
