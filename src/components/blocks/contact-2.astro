---
import type { ComponentProps } from "astro/types"

import { cn } from "@/lib/utils"
import Form from "@/components/ui/form.astro"
import Icon from "@/components/ui/icon.astro"
import ItemContent from "@/components/ui/item-content.astro"
import ItemDescription from "@/components/ui/item-description.astro"
import ItemGroup from "@/components/ui/item-group.astro"
import ItemMedia from "@/components/ui/item-media.astro"
import ItemTitle from "@/components/ui/item-title.astro"
import Item from "@/components/ui/item.astro"
import Link from "@/components/ui/link.astro"
import SectionContainer from "@/components/ui/section-container.astro"
import SectionContent from "@/components/ui/section-content.astro"
import SectionSplit from "@/components/ui/section-split.astro"
import Section from "@/components/ui/section.astro"
import Typography from "@/components/ui/typography.astro"

interface Props extends ComponentProps<typeof Section> {
  links?: ComponentProps<typeof Link>[]
  channels?: {
    variant?: ComponentProps<typeof Item>["variant"]
    icon?: ComponentProps<typeof Icon>["name"]
    href?: ComponentProps<typeof Link>["href"]
    title?: string
    description?: string
  }[]
  form?: any
}

const {
  class: className,
  align,
  size,
  links,
  channels,
  form,
  ...props
} = Astro.props
---

<Section class={cn("", className)} size={size} align={align} {...props}>
  <SectionContainer>
    <SectionSplit align={align}>
      <SectionContent>
        <Typography size={size}>
          <slot />
        </Typography>
        <ItemGroup class="min-w-2xs gap-2">
          {
            channels?.map(
              ({ title, description, href, icon, variant = "muted" }) => (
                <Item variant={variant} href={href}>
                  <ItemMedia variant="icon">
                    <Icon name={icon} />
                  </ItemMedia>
                  <ItemContent>
                    <ItemTitle>{title}</ItemTitle>
                    <ItemDescription>{description}</ItemDescription>
                  </ItemContent>
                </Item>
              )
            )
          }
        </ItemGroup>
      </SectionContent>
      <Form {...form} />
    </SectionSplit>
  </SectionContainer>
</Section>
