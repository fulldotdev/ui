---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import type { CollectionEntry } from 'astro:content'
import Button from 'fulldev-ui/components/Button.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

interface Props extends GlobalProps, HTMLAttributes<'div'> {
  heading?: ComponentProps<typeof Heading>['text']
  render?: CollectionEntry<'pages'>['render'] | undefined
}

const { size = 'sm', heading, render, ...rest } = Astro.props

const headings = render ? (await render())?.headings : []
const filteredHeadings = headings?.filter(
  (heading: any) => heading.depth >= 2 && heading.depth <= 4
)
---

<Element
  if={filteredHeadings?.length > 1}
  class:list="toc"
  {size}
  {...rest}
>
  <Heading
    level={6}
    text={heading}
  />
  {
    filteredHeadings?.map((button: any) => (
      <Button
        class:list={`depth-${button.depth}`}
        href={`#${button.slug}`}
        variant="link"
        text={button.text}
      />
    ))
  }
</Element>

<style lang="scss" is:global>
  @layer fulldev {
    .toc {
      display: none;

      @media (min-width: 1024px) {
        display: flex;
        position: sticky;
        top: calc(var(--header-height, 0px) + var(--space-6));
        bottom: 0;
        flex-shrink: 0;
        flex-direction: column;
        justify-content: flex-start;
        gap: var(--space-4);
        z-index: 10;
        min-width: calc(var(--space-7) * 3);

        .depth-3 {
          padding-left: var(--space-4);
        }

        .depth-4 {
          padding-left: var(--space-5);
        }
      }
    }
  }
</style>
