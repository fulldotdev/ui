<!-- ---
import type { MarkdownHeading } from 'astro'
import type { HTMLAttributes } from 'astro/types'
import Box from 'fulldev-ui/components/Box.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Links from './Links.astro'

interface Props extends HTMLAttributes<'div'> {
  size?: 'sm' | 'md' | 'lg' | undefined
  heading?: string | undefined
  headings?: MarkdownHeading[] | undefined
}

const { size = 'md', heading, headings, ...rest } = Astro.props

const filteredHeadings = headings?.filter((heading: any) => heading.depth <= 4)

const links = filteredHeadings?.map((button: any) => ({
  text: button.text,
  href: `#${button?.slug}`,
  class: `depth-${button?.depth}`,
}))
---

<Box
  class:list="toc"
  {...rest}
>
  {
    (links?.length || 0) > 0 && (
      <Heading
        as="h6"
        text={'On this page'}
        size="sm"
      />
    )
  }
  <Links
    {size}
    {links}
  />
</Box>

<style is:global>
  @layer fulldev {
    .toc {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-2);

      .link:first-child {
        color: var(--color-foreground);
        font-weight: var(--font-weight-bold);
      }

      .link.depth-3 {
        padding-left: var(--spacing-3);
      }

      .link.depth-4 {
        padding-left: var(--spacing-6);
      }
    }
  }
</style> -->
