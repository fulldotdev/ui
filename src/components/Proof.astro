---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Avatar from 'fulldev-ui/components/Avatar.astro'
import Avatars from 'fulldev-ui/components/Avatars.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Rating from 'fulldev-ui/components/Rating.astro'
import Abstract from 'fulldev-ui/structures/Abstract.astro'

interface Props extends HTMLAttributes<'div'> {
  avatar?: ComponentProps<typeof Avatar> | undefined
  avatars?: ComponentProps<typeof Avatars>['avatars']
  rating?: number | undefined
  text?: string | undefined
  size?: 'sm' | 'md' | 'lg' | undefined
}

const { avatar, avatars, rating, text, ...rest } = Astro.props

// TODO implement size
---

<Element
  class:list="proof"
  {...rest}
>
  <Avatar {...avatar} />
  <Avatars {avatars} />
  <Abstract>
    <Rating
      score={rating}
      size="sm"
    />
    <Fragment set:html={text} />
  </Abstract>
</Element>

<style is:global>
  @layer fulldev {
    .proof {
      display: flex;
      align-items: center;
      gap: var(--spacing-2);
      font-size: var(--text-sm);
      line-height: var(--text-sm--line-height);
    }
  }
</style>
