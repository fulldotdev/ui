---
import type { ComponentProps, HTMLAttributes, HTMLTag } from 'astro/types'
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

interface Props extends GlobalProps, HTMLAttributes<'a'> {
  as?: HTMLTag
  href?: string | null | undefined
  slug?: CollectionEntry<'pages'>['slug'] | undefined
  icon?: ComponentProps<typeof Icon>['name']
  variant?: 'primary' | 'muted' | undefined
  text?: string | undefined
  current?: boolean | undefined
}

const {
  slug,
  href = slug === 'index' ? '/' : slug ? `/${slug}/` : undefined,
  text = slug ? (await getEntry('pages', slug)).data.title : undefined,
  target = href?.startsWith('http') ? '_blank' : undefined,
  current = Astro.url.pathname === href,
  as = 'a',
  variant = 'primary',
  icon,
  ...rest
} = Astro.props
---

<Element
  class:list="link"
  {href}
  {as}
  {target}
  {variant}
  {current}
  {...rest}
>
  <Fragment set:html={text} />
  <slot />
  <Icon name={icon} />
</Element>

<style is:global>
  @layer fulldev {
    .link,
    .prose-content > *:not(.prose-footer) > a {
      @apply ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2;

      &.variant-primary,
      &:is(.prose-content > *:not(.prose-footer) > a) {
        @apply text-primary underline underline-offset-4;
      }

      &.variant-muted {
        @apply text-muted-foreground hover:text-foreground;

        &.current {
          @apply text-foreground;
        }
      }

      &.size-sm {
        @apply text-sm;
      }

      &.size-lg {
        @apply text-lg;
      }

      .icon {
        @apply mb-0.5;
      }
    }
  }
</style>
