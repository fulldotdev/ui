---
import type { HTMLAttributes, HTMLTag } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'
import type { LinkSchema } from 'fulldev-ui/schemas/components/link'

interface Props extends Omit<HTMLAttributes<'a'>, 'href'>, LinkSchema {
  as?: HTMLTag
  current?: boolean | undefined
}

const {
  as = 'a',
  variant = 'primary',
  size = 'md',
  text,
  icon,
  ...rest
} = Astro.props
---

<Element
  class:list="link"
  {as}
  {variant}
  {size}
  {...rest}
>
  <Fragment set:html={text} />
  <slot />
  <Icon name={icon} />
</Element>

<style is:global>
  @layer fulldev {
    .link,
    .prose-content > *:not(.prose-footer) > a {
      @apply ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2;

      &.variant-primary,
      &:is(.prose-content > *:not(.prose-footer) > a) {
        @apply text-primary underline underline-offset-4;
      }

      &.variant-underline {
        @apply underline underline-offset-4;
      }

      &.variant-muted {
        @apply text-muted-foreground hover:text-foreground;

        &.current {
          @apply text-foreground;
        }
      }

      &.size-sm {
        @apply text-sm;
      }

      &.size-lg {
        @apply text-lg;
      }

      .icon {
        @apply mb-0.5;
      }
    }
  }
</style>
