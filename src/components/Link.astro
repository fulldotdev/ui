---
import type { HTMLAttributes } from 'astro/types'
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
import Element from 'fulldev-ui/components/Element.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

interface Props extends GlobalProps, HTMLAttributes<'a'> {
  slug?: CollectionEntry<'pages'>['slug'] | undefined
  text?: string | undefined
}

const { slug, href, text, ...rest } = Astro.props

const entry = slug && (await getEntry('pages', slug))
---

<Element
  class:list="link"
  href={slug ? `/${slug}/` : href}
  as="a"
  {...rest}
>
  <slot />
  <Fragment set:html={entry?.data?.title ?? text} />
</Element>

<style is:global lang="scss">
  @layer fulldev {
    .link {
      display: inline-flex;
      flex-wrap: wrap;
      align-items: center;
      gap: var(--space-2);
      cursor: pointer;
      border: none;
      background: none;
      color: var(--color-11);
      font-size: var(--text-3);
      text-decoration-color: var(--border); // FIXME, werkt niet
      text-decoration: none;
      white-space: nowrap;

      &:is(p > &) {
        text-decoration: underline;
      }

      &:hover {
        color: var(--color-12);
      }
    }
  }
</style>
