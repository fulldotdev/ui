---
import type { HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'

interface Props extends HTMLAttributes<'a'> {
  variant?: 'primary' | 'underline' | 'muted' | undefined
  size?: 'sm' | 'md' | 'lg' | undefined
  text?: string | undefined
  icon?: string | undefined
  href?: string | undefined
}

const {
  href,
  variant = 'muted',
  size = 'md',
  text,
  icon,
  target = href?.startsWith('http') ? '_blank' : undefined,
  ...rest
} = Astro.props
---

<Element
  class:list={[
    `link variant-${variant} size-${size}`,
    { current: `/${Astro.params.page}/` === href },
  ]}
  as="a"
  {href}
  {target}
  {...rest}
>
  <Fragment set:html={text} />
  <slot />
  <Icon name={icon} />
</Element>

<style>
  @layer fulldev {
    .link,
    .prose-content > *:not(.prose-footer) > a {
      transition: var(--transition);
      cursor: pointer;

      &:focus-visible {
        outline: none;
        box-shadow: 0 0 0 2px var(--color-ring);
      }

      &.variant-primary,
      &:is(.prose-content > *:not(.prose-footer) > a) {
        color: var(--color-primary);
        text-decoration: underline;
        text-underline-offset: var(--spacing-1);
      }

      &.variant-underline {
        text-decoration: underline;
        text-underline-offset: var(--spacing-1);
      }

      &.variant-muted {
        color: var(--color-muted-foreground);

        &:hover {
          color: var(--color-foreground);
        }

        &.current {
          color: var(--color-foreground);
        }
      }

      &.size-sm {
        font-size: var(--text-sm);
      }

      &.size-md {
        font-size: var(--text-base);
      }

      &.size-lg {
        font-size: var(--text-lg);
      }

      .icon {
        margin-bottom: var(--spacing-0-5);
      }
    }
  }
</style>
