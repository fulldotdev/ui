---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Column from 'fulldev-ui/components/Column.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Link from 'fulldev-ui/components/Link.astro'
import Root from 'fulldev-ui/components/Root.astro'
import Text from 'fulldev-ui/components/Text.astro'
import Logo from 'fulldev-ui/components/experimental/Logo.astro'

type Props<As extends HTMLTag = 'footer'> = Polymorphic<{ as: As }> & {
  structure?: 'spread' | 'row' | 'split' | 'column' | 'stack'
  variant?: 'base' | 'ghost' | 'subtle' | 'soft' | 'surface' | 'outline'
  frame?: 'fill' | 'panel' | 'contain' | 'none'
  align?: 'start' | 'center' | 'end'
  size?: 'sm' | 'md' | 'lg'
  theme?: 'light' | 'dark'
  color?: 'base' | 'brand'
  space?: 'none' | 'auto'
  logo?: string
  heading?: string
  title?: string
  description?: string
  text?: string
  html?: string
  columns?: {
    heading: string
    links: ComponentProps<typeof Link<'a'>>[]
  }[]
}

const {
  as = 'footer',
  space = 'auto',
  variant = 'subtle',
  frame = 'fill',
  structure = 'grid',
  size = 'sm',
  logo,
  heading,
  columns,
  text,
  title,
  description,
  html,
  ...rest
} = Astro.props
---

<Root
  class:list="footer"
  {structure}
  {as}
  {variant}
  {frame}
  {space}
  {size}
  {...rest}
>
  <Column>
    <Column
      style={{ textDecoration: 'none' }}
      as="a"
      href="/"
    >
      <Logo src={logo} />
      <Heading
        level={4}
        color="base"
        html={heading || title}
      />
    </Column>
    <Text
      color="base"
      html={html || text || description}
    />
  </Column>

  {
    columns?.map(({ heading, links }) => (
      <Column>
        <Heading
          html={heading}
          level={4}
        />
        {links.map((link) => (
          <Link {...link} />
        ))}
      </Column>
    ))
  }
</Root>

<style is:global lang="scss">
  @layer fulldev {
    .footer {
      --inset-top: var(--space-7);
      --inset-left: var(--gutter-left);
      --inset-right: var(--gutter-right);
      --inset-bottom: var(--space-7);

      margin-top: auto;
      width: 100%;

      &.frame-none {
        border-top: 1px solid var(--base-a6);
        padding: var(--space-7) var(--gutter);
      }

      &.frame-fill {
        border-top: 1px solid var(--base-a6);
        background-color: var(--color-2);
        padding: var(--space-7) var(--gutter);
      }

      &.frame-panel {
        margin: var(--space-7) var(--gutter);
        border: 1px solid var(--base-a6);
        border-radius: var(--radius-2);
        background-color: var(--color-2);
        padding: var(--space-6) min(var(--gutter), var(--space-7));
        max-width: calc(100vw - 2 * var(--gutter));
        overflow: hidden;

        @media (min-width: 1024px) {
          padding-top: var(--space-7);
          padding-bottom: var(--space-7);
        }
      }

      &.align-start {
        align-items: flex-start;
        text-align: left;
      }

      &.align-center {
        align-items: center;
      }

      &.align-end {
        align-items: flex-end;
      }
    }
  }
</style>
