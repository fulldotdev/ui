---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Column from 'fulldev-ui/components/Column.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Link from 'fulldev-ui/components/Link.astro'
import Root from 'fulldev-ui/components/Root.astro'
import Text from 'fulldev-ui/components/Text.astro'
import Logo from 'fulldev-ui/components/experimental/Logo.astro'

type Props<As extends HTMLTag = 'footer'> = Polymorphic<{ as: As }> & {
  structure?: 'spread' | 'row' | 'split' | 'column' | 'stack' | undefined
  align?: 'start' | 'center' | 'end' | undefined
  size?: 'sm' | 'md' | 'lg' | undefined
  theme?: 'light' | 'dark' | undefined
  color?: 'base' | 'brand' | undefined
  space?: 'none' | 'auto' | undefined
  panel?: boolean | undefined
  logo?: string | undefined
  heading?: string | undefined
  title?: string | undefined
  description?: string | undefined
  text?: string | undefined
  html?: string | undefined
  columns?: {
    heading: string | undefined
    links: ComponentProps<typeof Link<'a'>>[] | undefined
  }[]
}

const {
  as = 'footer',
  space = 'auto',
  panel,
  structure = 'grid',
  size = 'sm',
  logo,
  heading,
  columns,
  text,
  title,
  description,
  html,
  ...rest
} = Astro.props
---

<Root
  class:list="footer"
  {structure}
  {as}
  {panel}
  {space}
  {size}
  {...rest}
>
  <Column>
    <Column
      style={{ textDecoration: 'none' }}
      as="a"
      href="/"
    >
      <Logo logo={logo} />
      <Heading
        level={4}
        color="base"
        html={heading || title}
      />
    </Column>
    <Text
      color="base"
      html={html || text || description}
    />
  </Column>

  {
    columns?.map(({ heading, links }) => (
      <Column>
        <Heading
          html={heading}
          level={4}
        />
        {links?.map((link) => (
          <Link {...link} />
        ))}
      </Column>
    ))
  }
</Root>

<style is:global lang="scss">
  @layer fulldev {
    .footer {
      --inset-x: var(--gutter);
      --inset-y: var(--spacer);

      position: relative;
      margin-top: auto;
      padding: var(--inset-y) var(--inset-x);
      width: 100%;
      overflow: auto;

      &.panel {
        --inset-x: min(var(--gutter), var(--spacer));

        margin: var(--spacer) var(--gutter);
        border: 1px solid var(--base-a6);
        border-radius: var(--radius-2);
        overflow: hidden;
      }

      &.align-start {
        align-items: flex-start;
        text-align: left;
      }

      &.align-center {
        align-items: center;
      }

      &.align-end {
        align-items: flex-end;
      }
    }
  }
</style>
