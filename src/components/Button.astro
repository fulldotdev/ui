---
import type { HTMLAttributes } from 'astro/types'
import { type VariantProps } from 'class-variance-authority'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'
import { buttonVariants } from 'fulldev-ui/shadcn/components/button'

interface Props
  extends Omit<HTMLAttributes<'a'>, 'type'>,
    Omit<HTMLAttributes<'button'>, 'type'>,
    VariantProps<typeof buttonVariants> {
  type?: HTMLAttributes<'a'>['type'] | HTMLAttributes<'button'>['type'] | undefined
  href?: string | undefined
  text?: string | undefined
  icon?: string | undefined
}

const slot = await Astro.slots.render('default')
const hasSlot = slot?.trim().length > 0

const {
  href,
  text,
  target = href?.startsWith('http') ? '_blank' : undefined,
  size = !(hasSlot || text) ? 'icon' : undefined,
  variant,
  icon,
  ...rest
} = Astro.props
---

<Element
  class:list={['button cursor-pointer', buttonVariants({ variant, size })]}
  as={href ? 'a' : 'button'}
  {href}
  {target}
  {...rest}
>
  <Icon
    class={!(hasSlot || text) ? 'absolute' : undefined}
    name={icon}
  />
  <Fragment set:html={text} />
  <Fragment set:html={slot} />
</Element>
