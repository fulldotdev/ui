---
import type { HTMLTag, Polymorphic } from 'astro/types'
import Avatar from 'fulldev-ui/components/Avatar.astro'
import Icon from 'fulldev-ui/components/Icon.astro'
import Root from 'fulldev-ui/components/Root.astro'

type Props<As extends HTMLTag = 'a'> = Polymorphic<{ as: As }> & {
  variant?: 'primary' | 'secondary' | 'tertiary'
  radius?: 'none' | 'auto' | 'full'
  size?: 'sm' | 'md' | 'lg'
  color?: 'base' | 'brand'
  contrast?: boolean
  avatar?: string
  icon?: string
  html?: string
  text?: string
}

const {
  as = 'a',
  variant = 'primary',
  radius = 'auto',
  avatar,
  icon,
  html,
  text,
  ...rest
} = Astro.props
---

<Root
  class:list="button"
  {as}
  {variant}
  {radius}
  {...rest}
>
  <slot>
    <Avatar src={avatar} />
    <Icon name={icon} />
    <Fragment set:html={html} />
    <Fragment set:text={text} />
  </slot>
</Root>

<style is:global lang="scss">
  @layer fulldev {
    .button {
      display: inline-flex;
      flex-shrink: 0;
      justify-content: center;
      align-items: center;
      vertical-align: top;
      gap: var(--space-2);
      appearance: none;
      transition: background-color var(--transition);
      cursor: pointer;
      outline: none;
      box-shadow: none;
      border: none;
      background: none;
      padding: 0 var(--space-4);
      height: calc(var(--text-2) + 2 * var(--space-4));
      color: var(--text);
      font-weight: 500;
      font-size: var(--text-2);
      line-height: 1;
      text-align: center;
      text-decoration: none;
      white-space: nowrap;

      .avatar {
        margin-right: calc(-1 * (var(--space-4)));
        margin-left: var(--space-1);
        padding: calc(var(--space-1) / 3);
        width: calc(var(--text-2) + 2 * var(--space-4)) !important;
        height: calc(var(--text-2) + 2 * var(--space-4)) !important;
      }

      &:focus-visible {
        outline: 2px solid var(--focus) !important;
        outline-offset: 2px;
      }

      &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        pointer-events: none;
      }

      &.radius-none {
        border-radius: 0;
      }

      &.radius-auto {
        border-radius: var(--radius-1);
      }

      &.radius-full {
        border-radius: 9999px;
      }

      &.variant-primary {
        background-color: var(--color-9);
        color: var(--color-contrast);

        &:hover,
        &:active {
          background-color: var(--color-10);
        }
      }

      &.variant-secondary {
        box-shadow: 0 var(--space-1) var(--space-3) 0 rgba(0, 0, 0, 0.05);
        background-color: var(--color-3);
        color: var(--color-11);

        &:hover {
          background-color: var(--color-4);
        }

        &:active {
          background-color: var(--color-5);
        }
      }

      &.variant-tertiary {
        box-shadow: 0 var(--space-1) var(--space-3) 0 rgba(0, 0, 0, 0.05);
        background-color: transparent;
        color: var(--color-11);

        &:hover {
          background-color: var(--color-3);
        }

        &:active {
          background-color: var(--color-4);
        }
      }
    }
  }
</style>
