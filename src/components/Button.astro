---
import Box from '@/components/Box.astro'
import Icon from '@/components/Icon.astro'
import type { ButtonVariants } from '@/components/ui/button'
import { buttonVariants } from '@/components/ui/button'
import type { ButtonSchema } from '@/schemas/fields/button'
import type { HTMLAttributes } from 'astro/types'

interface Props
  extends HTMLAttributes<'button'>,
    Omit<HTMLAttributes<'a'>, 'type' | 'href'>,
    Omit<ButtonVariants, 'size'>,
    ButtonSchema {
  reverse?: boolean
}

const slot = await Astro.slots.render('default')
const hasSlot = slot?.trim().length > 0

const { href, text, size, variant, icon, reverse, class: className, ...rest } = Astro.props
---

<Box
  class:list={['button text-foreground', buttonVariants({ variant, size }), className]}
  as={href ? 'a' : 'button'}
  {href}
  {...rest}
>
  {
    !reverse && (
      <Icon
        class={!(hasSlot || text) ? 'absolute' : undefined}
        name={icon}
      />
    )
  }
  <Fragment set:html={text} />
  <Fragment set:html={slot} />
  {
    reverse && (
      <Icon
        class={!(hasSlot || text) ? 'absolute' : undefined}
        name={icon}
      />
    )
  }
</Box>
