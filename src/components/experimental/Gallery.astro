---
import Image from 'fulldev-ui/components/Image.astro'
import Root from '../Root.astro'

const { images, direction = 'horizontal' } = Astro.props
---

<script define:vars={{ direction }}>
  const carousel = document.querySelector('.gallery .large-carousel')
  const smallImages = document.querySelectorAll('.gallery .small-image')

  carousel &&
    smallImages?.forEach((image, i) => {
      image.addEventListener('click', () => {
        const largeImages = carousel.querySelectorAll('.large-image')
        if (largeImages[i]) {
          largeImages[i].scrollIntoView({
            behavior: 'smooth',
            block: 'nearest',
            inline: 'start',
          })
        }
      })
    })
</script>

<Root
  class:list={[
    'full',
    'gallery',
    {
      [`direction-${direction}`]: direction,
    },
  ]}
>
  <div class="large-container">
    <div class="large-carousel">
      {
        images?.map((image: any) => (
          <Image
            class="large-image"
            src={image}
          />
        ))
      }
    </div>
  </div>
  <div class="small-carousel">
    {
      images?.length > 1 &&
        images.map((image: any) => (
          <Image
            class="small-image"
            src={image}
          />
        ))
    }
  </div>
</Root>

<style is:global lang="scss">
  .gallery {
    display: flex;
    position: relative;
    column-gap: var(--space-4);
    row-gap: var(--space-1);
    flex-direction: column;

    &.direction-vertical {
      @media (min-width: 1024px) {
        flex-direction: row-reverse;
        align-items: flex-start;
      }
    }

    .large-container {
      display: flex;
      justify-content: space-between;
      align-items: center;

      .direction-vertical & {
        @media (min-width: 1024px) {
          right: auto;
          bottom: var(--space-3);
          left: 50%;
          transform: translateX(-50%);
        }
      }
    }

    .small-carousel,
    .large-carousel {
      --column-width: 100%;
      display: flex;
      position: relative;
      align-items: flex-start;
      gap: var(--space-4);

      box-sizing: border-box;
      padding-bottom: var(--space-4);
      width: 100%;
      overflow: auto;
      scroll-behavior: smooth;
      scroll-snap-type: x mandatory;

      .direction-vertical & {
        @media (min-width: 1024px) {
          flex-direction: column;
          height: 600px;
          overflow-x: hidden;
          overflow-y: auto;
          scroll-snap-type: y mandatory;
        }
      }

      > .root {
        flex-grow: 0;
        flex-shrink: 0;
        width: var(--column-width);
        scroll-snap-align: center;
      }

      &.position-inset {
        margin-right: calc(var(--inner-x) * -1);
        margin-left: calc(var(--inner-x) * -1);
        padding-right: var(--inner-x);
        padding-left: var(--inner-x);
        width: calc(100% + var(--inner-x) * 2);
      }
    }

    .small-carousel {
      --column-width: var(--space-7);

      .direction-vertical & {
        --column-width: var(--space-7);
        flex-direction: row;
        width: 100%;
        height: auto;
        overflow-x: auto;
        overflow-y: hidden;

        @media (min-width: 1024px) {
          --column-width: 100%;
          flex-direction: column;
          width: 40%;
          height: 600px;
          overflow-x: hidden;
          overflow-y: auto;
        }
      }
    }

    .small-image:hover {
      opacity: 0.8;
      cursor: pointer;
    }
  }

  .direction-vertical {
    .small-carousel {
      flex-direction: row;
      min-width: 100%;
      height: auto;
      max-height: none;
      overflow-x: auto;
      overflow-y: hidden;

      .small-image {
        margin-bottom: 0;
        width: var(--space-7);
        height: auto;
      }

      @media (min-width: 1024px) {
        flex-direction: column;
        min-width: 20%;
        max-height: 600px;
        overflow-x: hidden;
        overflow-y: auto;

        .small-image {
          margin-bottom: var(--space-4);
          width: 100%;
          height: auto;
        }
      }
    }
  }
</style>
