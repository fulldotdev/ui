---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Column from 'fulldev-ui/components/Column.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Link from 'fulldev-ui/components/Link.astro'
import Root from 'fulldev-ui/components/Root.astro'
import Text from 'fulldev-ui/components/Text.astro'
import Channel from 'fulldev-ui/components/experimental/Channel.astro'
import Logo from 'fulldev-ui/components/experimental/Logo.astro'

type Props<As extends HTMLTag = 'footer'> = Polymorphic<{ as: As }> & {
  structure?: 'spread' | 'row' | 'split' | 'column' | undefined
  variant?:
    | 'base'
    | 'ghost'
    | 'subtle'
    | 'soft'
    | 'surface'
    | 'outline'
    | undefined
  frame?: 'fill' | 'panel' | 'contain' | undefined
  align?: 'start' | 'center' | 'end' | undefined
  size?: 'sm' | 'md' | 'lg' | undefined
  theme?: 'light' | 'dark' | undefined
  color?: 'base' | 'brand' | undefined
  space?: 'none' | 'auto' | undefined
  logo?: string | undefined
  heading?: string | undefined
  title?: string | undefined
  description?: string | undefined
  text?: string | undefined
  html?: string | undefined
  channels?: {
    phone?: {
      heading?: string | undefined
      text?: string | undefined
    }
    email?: {
      heading?: string | undefined
      text?: string | undefined
    }
    address?: {
      heading?: string | undefined
      text?: string | undefined
    }
  }
  columns?: [
    {
      heading: string | undefined
      links: ComponentProps<typeof Link<'a'>>[] | undefined
    },
  ]
}

const {
  as = 'footer',
  space = 'auto',
  variant = 'subtle',
  frame = 'fill',
  structure = 'split',
  size = 'sm',
  logo,
  heading,
  columns,
  text,
  title,
  description,
  html,
  channels,
  ...rest
} = Astro.props
---

<Root
  class:list="footer"
  {structure}
  {as}
  {variant}
  {frame}
  {space}
  {size}
  {...rest}
>
  <Column style={{ maxWidth: '300px' }}>
    <Column
      style={{ textDecoration: 'none' }}
      as="a"
      href="/"
    >
      <Logo logo={logo} />
      <Heading
        level={4}
        color="base"
        html={heading || title}
      />
    </Column>
    <Text
      color="base"
      html={html || text || description}
    />
  </Column>

  <Column>
    {
      channels?.phone && (
        <Channel
          icon="phone"
          heading="Phone"
          text={channels.phone.text}
          href={`tel:${channels.phone.text}`}
        />
      )
    }
    {
      channels?.email && (
        <Channel
          icon="mail"
          heading="Email"
          text={channels.email.text}
          href={`mailto:${channels.email.text}`}
        />
      )
    }
    {
      channels?.address && (
        <Channel
          icon="pin"
          heading="Address"
          text={channels.address.text}
          target="_blank"
          href={`https://maps.google.com/?q=${channels.address.text}`}
        />
      )
    }
  </Column>

  {
    columns?.map(({ heading, links }) => (
      <Column>
        <Heading
          html={heading}
          level={4}
        />
        {links?.map((link) => (
          <Link {...link} />
        ))}
      </Column>
    ))
  }
</Root>

<style is:global lang="scss">
  @layer fulldev {
    .footer {
      --inset-top: var(--space-7);
      --inset-left: var(--gutter-left);
      --inset-right: var(--gutter-right);
      --inset-bottom: var(--space-7);

      margin-top: auto;
      width: 100%;

      &.frame-none {
        border-top: 1px solid var(--base-a6);
        padding: var(--space-7) var(--gutter);
      }

      &.frame-fill {
        border-top: 1px solid var(--base-a6);
        background-color: var(--color-2);
        padding: var(--space-7) var(--gutter);
      }

      &.frame-panel {
        margin: var(--space-7) var(--gutter);
        border: 1px solid var(--base-a6);
        border-radius: var(--radius-2);
        background-color: var(--color-2);
        padding: var(--space-6) min(var(--gutter), var(--space-7));
        max-width: calc(100vw - 2 * var(--gutter));
        overflow: hidden;

        @media (min-width: 1024px) {
          padding-top: var(--space-7);
          padding-bottom: var(--space-7);
        }
      }

      &.align-start {
        align-items: flex-start;
        text-align: left;
      }

      &.align-center {
        align-items: center;
      }

      &.align-end {
        align-items: flex-end;
      }
    }
  }
</style>
