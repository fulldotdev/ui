---
import Button from 'fulldev-ui/components/Button.astro'

const { componentProps } = Astro.props

const randomId = Math.random().toString(36).substring(2, 15)
const id = componentProps.title?.toLowerCase().replace(/ /g, '-') ?? randomId

const isComponent =
  Astro.url.pathname.includes('components/') ||
  Astro.url.pathname.includes('frameworks') ||
  Astro.url.pathname.includes('base/') ||
  Astro.url.pathname.includes('typography/') ||
  Astro.url.pathname.includes('segment/')
---

{
  isComponent ? (
    <div class="component window">
      <div class="example-container">
        <slot name="example" />
      </div>
      <div class="code-container">
        <slot name="code" />
      </div>
    </div>
  ) : (
    <div class="block window">
      <div class="button-header">
        <Button
          as="label"
          for={id}
          variant="secondary"
        >
          Preview / Code
        </Button>
      </div>
      <input
        type="checkbox"
        id={id}
        name={id}
        class="window-toggle"
      />
      <div class="example-container">
        <slot name="example" />
      </div>
      <div class="code-container">
        <slot name="code" />
      </div>
    </div>
  )
}

<style lang="scss" is:global>
  @layer fulldev {
    .window {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      width: 100%;

      .code-container {
        width: 100%;

        .astro-code {
          margin: 0;
          background-color: var(--base-2) !important;
          padding: var(--space-5);
        }
      }

      &.component {
        border: 1px solid var(--base-6);
        border-radius: var(--radius-2);
        overflow: hidden;

        .example-container {
          display: flex;
          flex-direction: column;
          align-items: start;
          gap: var(--space-4);
          padding: var(--space-5);
        }

        .code-container {
          border: none;
          border-top: 1px solid var(--base-6);
          border-radius: 0px;

          .astro-code {
            border: none;
            border-radius: 0px;
          }
        }
      }

      &.block {
        gap: var(--space-2);
        padding-top: var(--space-7);
        padding-bottom: var(--space-7);

        .button-header {
          padding: 0 var(--gutter);
        }

        .code-container {
          display: none;
          padding: 0 var(--gutter);
          max-width: calc(100% - (2 * var(--gutter)));
        }

        .window-toggle {
          display: none;
          visibility: hidden;
          opacity: 0;
        }

        .window-toggle:checked {
          & ~ .example-container {
            display: none;
          }
          & ~ .code-container {
            display: block;
          }
        }

        .example-container {
          border-top: 1px solid var(--base-6);
          width: 100%;
        }
      }
    }
  }

  // .window {
  //   width: 100%;

  //   &.component {
  //     border: 1px solid var(--base-6);
  //     border-radius: var(--radius-2);
  //     overflow: hidden;

  //     .example-container {
  //       display: flex;
  //       flex-direction: column;
  //       align-items: start;
  //       gap: var(--space-4);
  //       padding: var(--space-5);
  //     }

  //     .astro-code {
  //       border: none;
  //       border-top: 1px solid var(--base-6);
  //       border-radius: 0px;
  //     }
  //   }

  //   &:not(.component) {
  //     padding-top: var(--space-7);
  //     padding-bottom: var(--space-7);

  //     .live-code-layout {
  //       display: flex;
  //       flex-direction: column;
  //       margin-top: var(--space-4);
  //       width: 100%;
  //       overflow: hidden;

  //       .example-container {
  //         border-top: 1px solid var(--base-6);
  //       }
  //     }
  //   }
  // }
</style>
