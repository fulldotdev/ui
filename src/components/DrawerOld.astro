---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Logo from 'fulldev-ui/components/Logo.astro'
import Menu from 'fulldev-ui/components/Menu.astro'
import links from 'fulldev-ui/schemas/components/links'
import type { GlobalProps } from 'fulldev-ui/types/global-props'
import Buttons from './Buttons.astro'
import Heading from './Heading.astro'
import Links from './Links.astro'

interface Props extends GlobalProps, HTMLAttributes<'aside'> {
  variant?: ComponentProps<typeof Button>['variant']
  text?: ComponentProps<typeof Button>['text']
  icon?: ComponentProps<typeof Button>['icon']
  heading?: ComponentProps<typeof Heading>['text']
  logo?: ComponentProps<typeof Logo> | undefined
  company?: ComponentProps<typeof Logo>['company']
  menu?: ComponentProps<typeof Menu>['groups']
  buttons?: ComponentProps<typeof Buttons>['buttons']
  links?: ComponentProps<typeof Links>['links']
  size?: 'sm' | 'md' | 'lg' | undefined
}

const {
  id = 'drawer',
  size = 'sm',
  icon = 'menu-2',
  color,
  variant,
  text,
  buttons,
  links,
  heading,
  logo,
  company,
  menu,
  if: ifProp,
  ...rest
} = Astro.props
---

<Button
  variant="secondary"
  class:list={['drawer-button', `${id}-button`]}
  onclick={`document.getElementById('${id}').showModal()`}
  {variant}
  {text}
  {icon}
  {color}
  {size}
/>

<Element
  onclick={`event.target === this && this.close()`}
  class:list="drawer"
  as="dialog"
  {id}
  {text}
  {size}
  {icon}
  {...rest}
>
  <Element class:list="drawer-body">
    <button autofocus></button>
    <Element
      class:list="drawer-header"
      as="header"
    >
      <Logo
        {size}
        {company}
        {...logo}
      />
      <Heading
        level={4}
        text={heading}
      />
      <Button
        variant="secondary"
        icon="x"
        onclick={`document.getElementById('${id}').close()`}
      />
      <slot name="header" />
    </Element>
    <Element class:list="drawer-content">
      <Links
        direction="column"
        {links}
      />
      <Menu groups={menu} />
      <slot />
    </Element>
    <Element
      class:list="drawer-footer"
      as="footer"
    >
      <slot name="footer" />
    </Element>
  </Element>
</Element>

<style is:global>
  @layer fulldev {
    body:has(dialog[open]) {
      @apply max-md:overflow-hidden;
    }

    .drawer {
      @apply inset-0 m-0 h-full max-h-full w-full max-w-full p-0 md:max-w-md;

      &::backdrop {
        @apply cursor-pointer bg-background/50;
      }

      .drawer-body {
        @apply flex h-full shrink flex-col overflow-auto bg-background;

        .drawer-content {
          @apply flex flex-col gap-6 px-gutter py-12;
        }

        .drawer-header,
        .drawer-footer {
          @apply sticky z-10 flex shrink-0 bg-background;
        }

        .drawer-header {
          @apply top-0 h-14 items-center px-gutter;

          .button {
            @apply ml-auto;
          }
        }

        .drawer-footer {
          @apply bottom-0 mt-auto flex-col px-gutter py-8;
        }
      }
    }
  }
</style>
