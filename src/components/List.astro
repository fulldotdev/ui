---
import type { HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import type { ListSchema } from 'fulldev-ui/schemas/list.ts'

interface Props extends HTMLAttributes<'ul'>, HTMLAttributes<'ol'>, ListSchema {
  as?: 'ul' | 'ol' | undefined
}

const { as = 'ul', items, ...rest } = Astro.props
---

<Element
  class:list="list"
  {as}
  {...rest}
>
  {
    items?.map((item) => (
      <Element
        as="li"
        set:html={item}
      />
    ))
  }
  <slot />
</Element>

<style is:global>
  @layer fulldev {
    .list,
    .prose :is(ul, ol) {
      @apply ml-6;

      &:is(ul) {
        @apply list-disc;
      }

      ul {
        @apply ml-6 mt-2 list-disc;
      }

      &:is(ol) {
        @apply list-decimal;
      }

      ol {
        @apply ml-6 mt-2 list-decimal;
      }

      li {
        @apply mt-2 first:mt-0;
      }

      &.size-sm,
      &:where(.size-sm &) {
        @apply text-sm;
      }

      &.size-lg,
      &:where(.size-lg &) {
        @apply text-lg;
      }
    }
  }
</style>
