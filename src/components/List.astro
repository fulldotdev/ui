---
import type { HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'

interface Props extends HTMLAttributes<'ul' | 'ol'> {
  as?: 'ul' | 'ol' | undefined
  size?: 'sm' | 'md' | 'lg' | undefined
  muted?: boolean | undefined
  items?: string[] | undefined
  icon?: string | undefined
}

const {
  as = 'ul',
  size = 'md',
  muted = false,
  items,
  icon,
  ...rest
} = Astro.props
---

<Element
  class:list={[`list size-${size}`, { muted }]}
  {as}
  {...rest}
>
  {
    items?.map((item) => (
      <Element as="li">
        <Icon name={icon} />
        <Element as="span">
          <Fragment set:html={item} />
        </Element>
      </Element>
    ))
  }
  <slot />
</Element>

<style is:global>
  @layer fulldev {
    .list {
      display: flex;
      flex-direction: column;
      padding-left: var(--spacing-5);

      &:is(ul) {
        list-style-type: disc;
      }

      &:is(ol) {
        list-style-type: decimal;
      }

      &.size-sm {
        gap: var(--spacing-1-5);
        font-size: var(--text-sm);
        line-height: var(--text-sm--line-height);

        .icon {
          margin-top: var(--spacing-0);
        }
      }

      &.size-md {
        gap: var(--spacing-2);
        font-size: var(--text-base);
        line-height: var(--text-base--line-height);

        .icon {
          margin-top: var(--spacing-0-5);
        }
      }

      &.size-lg {
        gap: var(--spacing-2);
        font-size: var(--text-lg);
        line-height: var(--text-lg--line-height);

        .icon {
          margin-top: var(--spacing-1);
        }
      }

      &.muted {
        color: var(--color-muted-foreground);
      }

      &:has(.icon) {
        margin-left: var(--spacing-0);
        list-style-type: none;

        li {
          display: flex;
          gap: var(--spacing-2);
        }
      }
    }

    .icon {
      margin-top: var(--spacing-0-5);
      margin-left: calc(var(--spacing-5) * -1);
      color: inherit;
    }
  }
</style>
