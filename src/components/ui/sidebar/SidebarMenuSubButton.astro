---
import type { HTMLAttributes } from "astro/types"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const variants = cva(
  "flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline-hidden transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-2 focus-visible:outline-ring focus-visible:outline-offset-2 disabled:pointer-events-none disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0",
  {
    variants: {
      size: {
        sm: "text-xs",
        md: "text-sm",
      },
      active: {
        true: "bg-accent text-accent-foreground",
        false: "",
      },
    },
    defaultVariants: {
      size: "md",
      active: false,
    },
  }
)

type Props = VariantProps<typeof variants> &
  HTMLAttributes<"button"> &
  HTMLAttributes<"a"> & {
    href?: string
  }

const { class: className, size, active, href, ...props } = Astro.props

const Comp = href ? "a" : "button"
const slot = await Astro.slots.render("default")
---

{
  slot && (
    <Comp
      data-slot="sidebar-menu-sub-button"
      class={cn(variants({ size, active }), className)}
      href={href}
      {...props}
    >
      <Fragment set:html={slot} />
    </Comp>
  )
}
