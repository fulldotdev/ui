---
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const variants = cva(
  "flex shrink-0 items-center justify-center gap-2 group-has-[[data-slot=item-description]]/item:self-start [&_svg]:pointer-events-none group-has-[[data-slot=item-description]]/item:translate-y-0.5",
  {
    variants: {
      variant: {
        default: "bg-transparent",
        icon: "size-8 border rounded-sm bg-muted [&_svg:not([class*='size-'])]:size-4",
        image:
          "size-10 rounded-sm overflow-hidden [&_img]:size-full [&_img]:object-cover",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

interface Props {
  class?: string
  variant?: VariantProps<typeof variants>["variant"]
}

const { class: className, variant, ...props } = Astro.props

const slot = await Astro.slots.render("default")
const hasSlot = slot?.trim().length > 0
---

{
  hasSlot && (
    <div class={cn(variants({ variant }), className)} {...props}>
      <Fragment set:html={slot} />
    </div>
  )
}
