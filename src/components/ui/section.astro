---
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const variants = cva("flex relative w-full", {
  variants: {
    size: {
      sm: "py-12",
      default: "py-16",
      lg: "py-24",
    },
    align: {
      start: "items-start",
      center: "items-center",
      end: "items-end",
    },
    variant: {
      default: "bg-transparent",
      outline: "border-border not-first:border-t not-last:border-b",
      muted: "bg-muted/50",
    },
  },
  defaultVariants: {
    size: "default",
    align: "start",
    variant: "default",
  },
})

interface Props extends VariantProps<typeof variants> {
  class?: string
}

const { class: className, size, align, variant, ...props } = Astro.props

const slot = await Astro.slots.render("default")
const hasSlot = slot.trim().length > 0
---

{
  hasSlot && (
    <section
      class={cn(variants({ size, align, variant }), className)}
      {...props}
    >
      <Fragment set:html={slot} />
    </section>
  )
}
