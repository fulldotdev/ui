---
import type { HTMLAttributes } from "astro/types"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const variants = cva(
  [
    "w-full",
    "[&_p]:leading-[1.8] [&_p]:not-first:mt-4",
    "[&_ul]:list-inside [&_ul]:list-disc [&_ul]:space-y-2 [&_ul]:not-first:mt-4",
    "[&_ol]:list-inside [&_ol]:list-decimal [&_ol]:space-y-2 [&_ol]:not-first:mt-4",
    "[&_li_p]:inline",
    "[&_a]:text-primary [&_a]:hover:underline",
    "[&_:is(h1,h2,h3,h4,h5,h6)]:scroll-mt-20 [&_:is(h1,h2,h3,h4,h5,h6)]:not-first:mt-12 [&_:is(h1,h2,h3,h4,h5,h6)]:text-pretty [&_:is(h1,h2,h3,h4,h5,h6)]:font-semibold [&_:is(h1,h2,h3,h4,h5,h6)]:leading-[1.1]",
    "[&_img]:rounded-lg [&_img]:not-first:mt-12",
    "[&_p:first-child:has(~:is(h1,h2,h3,h4,h5,h6))]:font-medium [&_p:first-child:has(~:is(h1,h2,h3,h4,h5,h6))]:text-sm [&_p:first-child:has(~:is(h1,h2,h3,h4,h5,h6))]:text-accent-foreground [&_p:first-child+:is(h1,h2,h3,h4,h5,h6)]:mt-4",
  ],
  {
    variants: {
      size: {
        sm: "text-base [&_h1]:text-3xl [&_h2]:text-2xl [&_h3]:text-xl [&_h4]:text-lg [&_h5]:text-base [&_h6]:text-sm max-w-xl",
        default:
          "text-base [&_h1]:text-4xl [&_h2]:text-3xl [&_h3]:text-2xl [&_h4]:text-xl [&_h5]:text-lg [&_h6]:text-base max-w-2xl",
        lg: "text-lg lg:[&_h1]:text-5xl [&_h1]:text-4xl [&_h2]:text-4xl [&_h3]:text-3xl [&_h4]:text-2xl [&_h5]:text-xl [&_h6]:text-lg max-w-3xl",
      },
      align: {
        start: "text-start",
        center: "text-center",
        end: "text-end",
      },
    },
    defaultVariants: {
      size: "default",
    },
  }
)

interface Props extends HTMLAttributes<"div">, VariantProps<typeof variants> {
  title?: string
  description?: string
}

const { class: className, size, title, description, ...props } = Astro.props

const slot = await Astro.slots.render("default")
---

{
  (slot || title || description) && (
    <div class={cn(variants({ size }), className)} {...props}>
      {title && <h1>{title}</h1>}
      {description && <p>{description}</p>}
      <Fragment set:html={slot} />
    </div>
  )
}
