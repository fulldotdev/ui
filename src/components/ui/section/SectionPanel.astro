---
import type { HTMLAttributes } from "astro/types"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const variants = cva(
  "relative overflow-hidden rounded-2xl px-4 py-16 md:px-8 lg:px-12",
  {
    variants: {
      variant: {
        default: "bg-transparent",
        outline: "border-border border",
        muted: "bg-muted/50",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

interface Props extends HTMLAttributes<"div">, VariantProps<typeof variants> {}

const { class: className, variant, ...props } = Astro.props

const slot = await Astro.slots.render("default")
---

{
  slot && (
    <div class={cn(variants({ variant }), className)} {...props}>
      <Fragment set:html={slot} />
    </div>
  )
}
