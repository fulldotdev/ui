---
import type { HTMLAttributes } from "astro/types"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const variants = cva("grid w-full", {
  variants: {
    size: {
      sm: "grid-cols-[repeat(auto-fit,minmax(200px,1fr))]",
      default: "grid-cols-[repeat(auto-fit,minmax(260px,1fr))]",
      lg: "grid-cols-[repeat(auto-fit,minmax(400px,1fr))]",
    },
  },
  defaultVariants: {
    size: "default",
  },
})

interface Props extends HTMLAttributes<"div">, VariantProps<typeof variants> {}

const { size, class: className, ...props } = Astro.props
const slot = await Astro.slots.render("default")
const hasSlot = slot?.trim().length > 0
---

{
  hasSlot && (
    <div class={cn(variants({ size }), className)} {...props}>
      <Fragment set:html={slot} />
    </div>
  )
}
