---
import type { HTMLAttributes } from "astro/types"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const variants = cva(
  "group/tile flex border border-transparent flex-col rounded-lg transition-colors [a]:hover:bg-accent/50 [a]:transition-colors duration-100 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]",
  {
    variants: {
      variant: {
        default: "bg-transparent",
        outline: "border-border",
        muted: "bg-muted/50",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

type Props = VariantProps<typeof variants> &
  HTMLAttributes<"div"> &
  HTMLAttributes<"a">

const { class: className, variant, href, ...props } = Astro.props

const slot = await Astro.slots.render("default")

const Comp = href ? "a" : "div"
---

{
  slot && (
    <Comp class={cn(variants({ variant }), className)} href={href} {...props}>
      <Fragment set:html={slot} />
    </Comp>
  )
}
