---
import type { HTMLAttributes } from "astro/types"

import { cn } from "@/lib/utils"

interface Props extends HTMLAttributes<"label"> {}

const { class: className, ...props } = Astro.props

const slot = await Astro.slots.render("default")
---

{
  slot && (
    <label
      data-slot="field-label"
      class={cn(
        "group/field-label peer/field-label flex w-fit gap-2 text-sm leading-snug font-medium select-none",
        "group-data-[disabled=true]/field:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50",
        "has-[>[data-slot=field]]:w-full has-[>[data-slot=field]]:flex-col has-[>[data-slot=field]]:rounded-md has-[>[data-slot=field]]:border [&>*]:data-[slot=field]:p-4",
        "has-data-[state=checked]:bg-primary/5 has-data-[state=checked]:border-primary dark:has-data-[state=checked]:bg-primary/10",
        className
      )}
      {...props}
    >
      <Fragment set:html={slot} />
    </label>
  )
}
