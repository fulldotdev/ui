---
import Badge from '@/components/Badge.astro'
import Box from '@/components/Box.astro'
import type { HTMLAttributes } from 'astro/types'

interface Props extends HTMLAttributes<'div'> {
  size?: 'sm' | 'md' | 'lg' | undefined
  amount?: number | null | undefined
  compare?: number | null | undefined
}

const formatPrice = (number: number | null | undefined): string => {
  return `â‚¬${number?.toFixed(2).replace('.', ',').replace(',00', '')}`
}

const { size = 'md', amount, compare, class: className, ...rest } = Astro.props
---

<Box
  class:list={['price', className]}
  {...rest}
>
  {
    compare ? (
      <Box class="flex items-center gap-2.5 text-foreground">
        {formatPrice(amount)}
        <Box
          as="span"
          class="text-muted-foreground line-through"
        >
          {formatPrice(compare)}
        </Box>
        <Badge text={`-${Math.round(((compare - (amount || 0)) / compare) * 100)}%`} />
      </Box>
    ) : (
      formatPrice(amount)
    )
  }
</Box>
