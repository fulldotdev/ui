---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Buttons from 'fulldev-ui/components/Buttons.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Logo from 'fulldev-ui/components/experimental/Logo.astro'
import Search from 'fulldev-ui/components/Search.astro'
import ThemeSelect from 'fulldev-ui/components/ThemeSelect.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'
import Drawer from './Drawer.astro'
import type Menu from './Menu.astro'

interface Props extends GlobalProps, HTMLAttributes<'header'> {
  logo?: ComponentProps<typeof Logo>
  company?: ComponentProps<typeof Logo>['company']
  buttons?: ComponentProps<typeof Buttons>['buttons']
  menu?: ComponentProps<typeof Menu>['groups']
  panel?: boolean | undefined
  search?: boolean | undefined
  open?: boolean | undefined
  themeselect?: boolean | undefined
  cart?: string | undefined
}

const {
  size = 'sm',
  open = true,
  logo,
  company,
  buttons,
  search,
  panel,
  menu,
  themeselect,
  cart,
  ...rest
} = Astro.props
---

<Element
  class:list={['header']}
  as="header"
  {panel}
  {size}
  {open}
  {...rest}
>
  <Logo
    {company}
    {...typeof logo === 'string' ? { src: logo } : logo}
  />
  <Buttons
    {buttons}
    variant="link"
  />
  {search && <Search />}
  {themeselect && <ThemeSelect />}
  <Drawer
    icon="menu-2"
    id="menu"
    {menu}
    {logo}
    {company}
  />
  <Drawer
    icon="shopping-cart"
    class="cart-button"
    color="brand"
    id="cart"
    heading={cart}
  />
</Element>

<style lang="scss" is:global>
  @layer fulldev {
    .header {
      display: flex;
      position: sticky;
      top: 0;
      left: 0;
      justify-content: flex-end;
      align-items: center;
      gap: var(--space-4);
      z-index: 20;
      border-bottom-width: 1px;
      border-style: solid;
      border-color: var(--base-a6);
      background-color: var(--base-2);
      padding: 0 var(--gutter);
      width: 100%;
      height: var(--header-height);
      overflow: hidden;

      &,
      & ~ * {
        --header-height: 56px;
      }

      &.panel {
        margin: var(--space-4) var(--gutter);
        border-width: 1px solid;
        border-radius: var(--radius-2);
        padding: var(--sapce-4) min(var(--gutter), var(--space-4));
        width: auto;
      }

      .logo {
        margin-right: auto;
      }

      @media (min-width: 1024px) {
        &:not(.open) {
          display: none;

          & ~ * {
            --header-height: 0px;
          }
        }
      }

      .buttons {
        display: none;

        @media (min-width: 1024px) {
          display: flex;
          gap: var(--space-2);

          .button.variant-link + .button {
            margin-left: var(--space-3);
          }
        }
      }

      .menu-button {
        @media (min-width: 1024px) {
          display: none;
        }
      }
    }
  }
</style>
