---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Buttons from 'fulldev-ui/components/Buttons.astro'
import Cart from 'fulldev-ui/components/Cart.astro'
import Drawer from 'fulldev-ui/components/Drawer.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Links from 'fulldev-ui/components/Links.astro'
import Logo from 'fulldev-ui/components/Logo.astro'
import Menu from 'fulldev-ui/components/Menu.astro'
import Socials from 'fulldev-ui/components/Socials.astro'
import Themer from 'fulldev-ui/components/Themer.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

interface Props extends GlobalProps, HTMLAttributes<'header'> {
  logo?: ComponentProps<typeof Logo>
  company?: ComponentProps<typeof Logo>['company']
  buttons?: ComponentProps<typeof Buttons>['buttons']
  links?: ComponentProps<typeof Links>['links']
  menu?: ComponentProps<typeof Menu>['groups']
  panel?: boolean | undefined
  search?: boolean | undefined
  open?: boolean | undefined
  cart?: string | undefined
  socials?: ComponentProps<typeof Socials>['socials']
  themer?: boolean | undefined
  size?: 'sm' | 'md' | 'lg' | undefined
}

const {
  size = 'sm',
  open,
  logo,
  company,
  buttons,
  links,
  search,
  panel,
  socials,
  menu,
  cart,
  themer,
  ...rest
} = Astro.props
---

<Element
  class:list={['header']}
  as="header"
  {panel}
  {size}
  {open}
  {...rest}
>
  <Logo
    {company}
    {size}
    {...typeof logo === 'string' ? { src: logo } : logo}
  />
  <Links
    {size}
    {links}
  />
  <Socials
    {size}
    variant="ghost"
    {socials}
  />
  <Buttons
    {size}
    {buttons}
  >
    <Themer
      if={themer}
      {size}
    />
    <Cart
      if={cart}
      variant="secondary"
      heading={cart}
      {size}
    />
    <Drawer
      class:list={['header-button']}
      icon="menu-2"
      id="menu"
      variant="secondary"
      {logo}
      {company}
      {buttons}
      {menu}
      {size}
    />
  </Buttons>
</Element>

<style is:global>
  @layer fulldev {
    .header {
      @apply sticky left-0 top-0 z-20 flex h-14 items-center gap-6 overflow-hidden px-gutter py-2;
      @apply border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60;

      &,
      & ~ * {
        --header-height: 3.5rem;
      }

      &.panel {
        @apply top-2 mx-gutter my-2 rounded-lg border px-4;
      }

      .logo {
        @apply justify-self-start;
      }

      .links {
        @apply mr-auto max-lg:hidden;
      }

      .socials {
        @apply ml-auto max-lg:hidden;
      }

      .buttons {
        @apply justify-self-end max-lg:ml-auto;
      }

      .menu-button {
        @apply lg:hidden;
      }

      @media (min-width: 1024px) {
        &:not(.open) {
          display: none;

          & ~ * {
            --header-height: 0px;
          }
        }
      }
    }
  }
</style>
