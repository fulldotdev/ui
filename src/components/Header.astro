---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Buttons from 'fulldev-ui/components/Buttons.astro'
import Cart from 'fulldev-ui/components/Cart.astro'
import Drawer from 'fulldev-ui/components/Drawer.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Links from 'fulldev-ui/components/Links.astro'
import Logo from 'fulldev-ui/components/Logo.astro'
import Menu from 'fulldev-ui/components/Menu.astro'
import Socials from 'fulldev-ui/components/Socials.astro'
import Themer from 'fulldev-ui/components/Themer.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

interface Props extends GlobalProps, HTMLAttributes<'header'> {
  logo?: ComponentProps<typeof Logo>
  company?: ComponentProps<typeof Logo>['company']
  buttons?: ComponentProps<typeof Buttons>['buttons']
  links?: ComponentProps<typeof Links>['links']
  menu?: ComponentProps<typeof Menu>['groups']
  panel?: boolean | undefined
  search?: boolean | undefined
  open?: boolean | undefined
  cart?: string | undefined
  socials?: ComponentProps<typeof Socials>['socials']
  themer?: boolean | undefined
  size?: 'sm' | 'md' | 'lg' | undefined
}

const {
  size = 'sm',
  open,
  logo,
  company,
  buttons,
  links,
  search,
  panel,
  socials,
  menu,
  cart,
  themer,
  ...rest
} = Astro.props
---

<Element
  class:list={['header']}
  as="header"
  {size}
  {open}
  {...rest}
>
  <Element class:list="header-container">
    <Logo
      {company}
      {size}
      {...typeof logo === 'string' ? { src: logo } : logo}
    />
    <Links
      class:list="header-links"
      {size}
      {links}
    />
    <Socials
      {size}
      variant="ghost"
      {socials}
    />
    <Buttons
      class:list="header-buttons"
      {size}
      {buttons}
    >
      <Themer
        if={themer}
        {size}
      />
      <Cart
        if={cart}
        variant="secondary"
        heading={cart}
        {size}
      />
      <Drawer
        class:list={['header-button']}
        icon="menu-2"
        id="menu"
        variant="secondary"
        {logo}
        {company}
        {buttons}
        {links}
        {menu}
        {size}
      />
    </Buttons>
  </Element>
</Element>

<style is:global>
  @layer fulldev {
    .header {
      @apply sticky left-0 top-0 z-20 flex h-14 items-center overflow-hidden bg-background;

      .header-container {
        @apply mx-auto flex w-full max-w-container items-center justify-between gap-6 px-gutter;
      }

      &,
      & ~ * {
        --header-height: 3.5rem;
      }

      .header-links {
        @apply mr-auto max-lg:hidden;
      }

      .header-socials {
        @apply ml-auto max-lg:hidden;
      }

      .menu-button {
        @apply lg:hidden;
      }

      &:not(.open) {
        @apply lg:hidden;

        & ~ * {
          --header-height: 0px;
        }
      }
    }
  }
</style>
