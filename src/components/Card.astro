---
import { getEntry } from 'astro:content'
import Button from 'fulldev-ui/components/Button.astro'
import Buttons from 'fulldev-ui/components/Buttons.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Image from 'fulldev-ui/components/Image.astro'
import Writeup from 'fulldev-ui/components/Writeup.astro'
import type { CardSchema } from 'fulldev-ui/schemas/components/card'
import cardSchema from 'fulldev-ui/schemas/components/card'
import Icon from './Icon.astro'
import Price from './Price.astro'
interface Props extends CardSchema {}
const { align: alignDefault, level: levelDefault } =
  await cardSchema.parseAsync(Astro.props)

const { slug } = Astro.props
const page = slug ? (await getEntry('pages', slug))?.data : {}

const entryProps = {
  heading: page?.title,
  text: page?.description,
  href: slug ? `/${slug}/` : undefined,
  ...page,
}

const {
  align = alignDefault,
  level = levelDefault,
  href,
  badge,
  tagline,
  rating,
  heading,
  text,
  variant,
  price,
  list,
  button,
  buttons,
  panel,
  image,
  icon,
  title,
  images,
  position,
  ...rest
} = {
  ...entryProps,
  ...Astro.props,
}
---

<Element
  class:list="card"
  as={href ? 'a' : 'div'}
  {href}
  {align}
  {panel}
  {...rest}
>
  <slot name="image">
    <Image
      position={panel ? position : undefined}
      {...image || images?.[0]}
    />
  </slot>
  <slot name="icon">
    <Icon name={icon} />
  </slot>
  <slot name="writeup">
    <Writeup
      heading={heading || title}
      {level}
      {rating}
      {badge}
      {tagline}
      {text}
      {list}
    />
    <Price value={price} />
  </slot>
  <slot name="buttons">
    <Button
      {variant}
      {...button}
    />
    <Buttons
      {variant}
      {buttons}
    />
  </slot>
  <slot />
</Element>

<style is:global lang="scss">
  @layer fulldev {
    .card {
      --inset-top: 0px;
      --inset-left: 0px;
      --inset-right: 0px;
      --inset-bottom: 0px;

      display: flex;
      position: relative;
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-4);
      text-decoration: none;

      &[href] {
        cursor: pointer;

        > .image {
          transition: all 0.2s ease;
        }

        &:hover {
          > .image {
            opacity: 0.8;
          }
        }
      }

      &.panel {
        --inset-top: var(--space-4);
        --inset-left: var(--space-4);
        --inset-right: var(--space-4);
        --inset-bottom: 0px;

        border: 1px solid var(--color-a6);
        border-radius: var(--radius-2);
        background-color: var(--color-2);
        padding: var(--space-4);
        overflow: hidden;

        &[href]:hover {
          border: 1px solid var(--color-a7);
        }
      }
    }
  }
</style>
