---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Image from 'fulldev-ui/components/Image.astro'
import Buttons from './Buttons.astro'
import Writeup from './Writeup.astro'

interface Props
  extends ComponentProps<typeof Element>,
    ComponentProps<typeof Writeup>,
    Omit<HTMLAttributes<'a'>, 'color'> {
  image?: ComponentProps<typeof Image>['src']
  images?: ComponentProps<typeof Image>['src'][]
  position?: ComponentProps<typeof Image>['position']
  buttons?: ComponentProps<typeof Buttons>['buttons']
  button?: ComponentProps<typeof Button<'a'>> | undefined
  variant?: ComponentProps<typeof Button<'a'>>['variant']
  align?: ComponentProps<typeof Writeup>['align']
  panel?: boolean | undefined
}

const {
  align = 'start',
  level = 4,
  href,
  badge,
  tagline,
  rating,
  heading,
  text,
  list,
  html,
  button,
  buttons,
  variant,
  panel,
  image,
  images,
  position,
  ...rest
} = Astro.props
---

<Element
  class:list="card"
  as={href ? 'a' : 'div'}
  {href}
  {align}
  {panel}
  {...rest}
>
  <slot name="image">
    <Image
      position={panel ? position : undefined}
      src={image ?? images?.[0]}
    />
  </slot>
  <slot name="writeup">
    <Writeup
      {level}
      {rating}
      {badge}
      {tagline}
      {heading}
      {text}
      {html}
      {list}
    />
  </slot>
  <slot name="buttons">
    <Button
      {variant}
      {...button}
    />
    <Buttons
      {variant}
      {buttons}
    />
  </slot>
  <slot />
</Element>

<style is:global lang="scss">
  @layer fulldev {
    .card {
      --inset-top: var(--space-5);
      --inset-left: var(--space-5);
      --inset-right: var(--space-5);
      --inset-bottom: var(--space-5);

      position: relative;
      text-decoration: none;

      &[href] {
        cursor: pointer;

        > .root.image {
          transition: all;
        }

        &:hover {
          > .root.image {
            opacity: 0.8;
          }
        }
      }

      &.panel {
        border: 1px solid var(--color-a6);
        border-radius: var(--radius-2);
        background-color: var(--color-2);
        padding: var(--inset-top) var(--inset-right) var(--inset-bottom)
          var(--inset-left);
        overflow: hidden;

        &[href]:hover {
          border: 1px solid var(--color-a7);
        }
      }

      > .image + * {
        margin-top: var(--space-5);
      }
    }
  }
</style>
