---
import type { CollectionEntry } from 'astro:content'
import Button from 'fulldev-ui/components/Button.astro'
import Input from 'fulldev-ui/components/Input.astro'
import Select from 'fulldev-ui/components/Select.astro'
import { capitalize } from 'radash'
import { scope } from 'simple:scope'
import Element from './Element.astro'
import Form from './Form.astro'
import Price from './Price.astro'

interface Props {
  product: CollectionEntry<'products'>
}

const { slug, data } = Astro.props.product

const src = data.images?.[0]?.src || `/${data.images?.[0]?.id}`
---

<RootElement data={{ variants: Object.keys(data.variants || {}) }}>
  <Form
    class:list="cart-form"
    data-target={scope('form')}
  >
    <Input
      name="slug"
      type="hidden"
      value={slug}
    />
    <Input
      name="title"
      type="hidden"
      value={data.title}
    />
    <Input
      name="price"
      type="hidden"
      value={data.price}
    />
    <Input
      name="image"
      type="hidden"
      value={Astro.site && (Astro.site.href + src).replace('//', '/')}
    />
    {
      Object.entries(data.variants ?? {}).map(([key, options]) => (
        <Select
          name={key}
          label={capitalize(key)}
          name={key}
          options={options}
          disabled={data.soldout}
        />
      ))
    }
    <Price value={data.price} />
    <Element class:list="inputs">
      <Input
        class:list="quantity-input"
        name="quantity"
        type="number"
        min={1}
        value={1}
      />
      <Button
        variant="primary"
        type="submit"
        class="cart-add"
        text={data.soldout ? 'Uitverkocht' : 'Toevoegen aan winkelwagen'}
        disabled={data.soldout}
      />
    </Element>
  </Form>
</RootElement>

<script>
  import { addItem, openCart } from 'fulldev-ui/stores/cart.ts'

  RootElement.ready(($, ctx) => {
    $('form').addEventListener('submit', async (e) => {
      if (!(e.target instanceof HTMLFormElement)) return
      e.preventDefault()

      const formData = new FormData(e.target)
      const object = Object.fromEntries(formData.entries())
      const formatted = {
        slug: String(object['slug']),
        title: String(object['title']),
        price: Number(object['price']),
        quantity: Number(object['quantity']),
        image: String(object['image']),
        variants: ctx.data.variants.map((key: string) => object[key]),
      }

      addItem(formatted)
      openCart()
    })
  })
</script>

<style is:global>
  @layer fulldev {
    .cart-form {
      @apply flex flex-col gap-4;

      .inputs {
        @apply flex gap-2;
      }

      .quantity-input {
        @apply w-16;
      }

      .price-input {
        @apply hidden;
      }
    }
  }
</style>
