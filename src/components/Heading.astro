---
import type { HTMLAttributes, HTMLTag } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

interface Props extends GlobalProps, HTMLAttributes<'h2'> {
  as?: HTMLTag
  level?: 1 | 2 | 3 | 4 | 5 | 6 | undefined
  text?: string | undefined
}

const { level = 2, as = `h${level}`, text, ...rest } = Astro.props
---

<Element
  class:list="heading"
  {as}
  {level}
  {...rest}
>
  <slot />
  <Fragment set:html={text} />
</Element>

<style is:global lang="scss">
  .heading,
  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6 {
    margin: 0;
    max-width: calc(var(--space-4) * 44);
    scroll-margin: var(--spacing-20);
    font-weight: var(--font-weight-semibold);
    letter-spacing: var(--letter-spacing-tight);

    &:is(h1) {
      font-weight: var(--font-weight-extrabold);
      font-size: var(--font-size-4xl);
      line-height: var(--font-size-4xl--line-height);

      @media (min-width: 1024px) {
        font-size: var(--font-size-5xl);
        line-height: var(--font-size-5xl--line-height);
      }
    }

    &:is(h2) {
      font-size: var(--font-size-3xl);
      line-height: var(--font-size-3xl--line-height);
    }

    &:is(h3) {
      font-size: var(--font-size-2xl);
      line-height: var(--font-size-2xl--line-height);
    }

    &:is(h4) {
      font-size: var(--font-size-xl);
      line-height: var(--font-size-xl--line-height);
    }

    &:is(h5) {
      font-size: var(--font-size-lg);
      line-height: var(--font-size-lg--line-height);
    }

    &:is(h6) {
      font-size: var(--font-size-base);
      line-height: var(--font-size-base--line-height);
    }
  }

  .prose {
    h2 {
      border-bottom: 1px solid var(--border-color);
      padding-bottom: var(--spacing-2);

      &:not(:first-child) {
        margin-top: var(--spacing-10);
      }
    }

    h3,
    h4,
    h5,
    h6 {
      margin-top: var(--spacing-8);
    }
  }
</style>
