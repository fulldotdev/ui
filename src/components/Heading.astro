---
import type { HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'

interface Props
  extends HTMLAttributes<'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'> {
  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | undefined
  depth?: 1 | 2 | 3 | 4 | 5 | 6 | number | undefined
  text?: string | undefined
  size?:
    | 'xs'
    | 'sm'
    | 'md'
    | 'lg'
    | 'xl'
    | '2xl'
    | '3xl'
    | '4xl'
    | '5xl'
    | '6xl'
    | undefined
}

const { depth = 2, as = `h${depth}`, text, ...rest } = Astro.props
---

<Element
  class:list="heading"
  {as}
  {...rest}
>
  <Fragment set:html={text} />
  <slot />
</Element>

<style is:global>
  .heading,
  .prose > :is(h1, h2, h3, h4, h5, h6) {
    @apply scroll-mt-20 font-bold tracking-tight text-foreground;

    code {
      @apply rounded-sm bg-muted px-1 py-0.5 font-mono;
    }

    &.size-xs {
      @apply text-xs;
    }

    &.size-sm {
      @apply text-sm;
    }

    &:where(.prose > h6),
    &.size-md {
      @apply text-base;
    }

    &:where(.prose > h5),
    &.size-lg {
      @apply text-lg;
    }

    &:where(.prose > h4),
    &.size-xl {
      @apply text-xl;
    }

    &:where(.prose > h3),
    &.size-2xl {
      @apply text-2xl;
    }

    &:where(.prose > h2),
    &.size-3xl {
      @apply text-3xl;
    }

    &.size-4xl {
      @apply text-4xl;
    }

    &:where(.prose > h1),
    &.size-5xl {
      @apply text-4xl lg:text-5xl;
    }

    &.size-6xl {
      @apply text-5xl lg:text-6xl;
    }
  }
</style>
