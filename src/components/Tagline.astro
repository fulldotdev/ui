---
import type { ComponentProps, HTMLAttributes, HTMLTag } from 'astro/types'
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
import Avatar from 'fulldev-ui/components/Avatar.astro'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

interface Props
  extends GlobalProps,
    HTMLAttributes<'span'>,
    HTMLAttributes<'a'> {
  as?: HTMLTag
  icon?: ComponentProps<typeof Icon>['name']
  avatar?: ComponentProps<typeof Avatar>['src']
  slug?: CollectionEntry<'pages'>['slug'] | undefined
  size?: 'sm' | 'md' | 'lg' | undefined
  text?: string | undefined
  variant?: 'secondary' | 'outline' | 'link' | undefined
}

const {
  slug,
  href = slug === 'index' ? '/' : slug ? `/${slug}/` : undefined,
  text = slug ? (await getEntry('pages', slug)).data.title : undefined,
  as = href ? 'a' : 'a',
  target = href?.toString().startsWith('http') ? '_blank' : undefined,
  icon,
  ...rest
} = Astro.props
---

<Element
  class:list={'tagline'}
  {href}
  {as}
  {target}
  {...rest}
>
  <slot />
  <Icon name={icon} />
  <Fragment set:html={text} />
</Element>

<style is:global>
  @layer fulldev {
    .tagline {
      @apply text-primary font-semibold;

      &.size-sm {
        @apply text-sm;
      }

      &.size-lg {
        @apply text-lg;
      }
    }
  }
</style>
