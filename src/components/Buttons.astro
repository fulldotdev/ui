---
import Box from '@/components/Box.astro'
import Button from '@/components/Button.astro'
import type { ComponentProps, HTMLAttributes } from 'astro/types'

interface Props extends HTMLAttributes<'div'> {
  justify?: 'start' | 'center' | 'end'
  size?: ComponentProps<typeof Button>['size']
  buttons?: ComponentProps<typeof Button>[] | null | undefined
  reverse?: boolean
}

const { size = 'default', reverse = false, class: className, buttons, ...rest } = Astro.props

const getButtonVariant = (index: number) => {
  if (reverse) {
    const length = buttons?.length || 0
    if (index === length - 1) return 'default'
    if (index === length - 2) return 'outline'
    return 'ghost'
  }
  if (index === 0) return 'default'
  if (index === 1) return 'outline'
  return 'ghost'
}
---

<Box
  class:list={['buttons inline-flex flex-wrap gap-2', className]}
  {...rest}
>
  {
    buttons?.map((button, i) => (
      <Button
        variant={getButtonVariant(i)}
        {size}
        {...button}
      />
    ))
  }
  <slot />
</Box>
