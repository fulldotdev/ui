---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Box from './Box.astro'

interface Props extends HTMLAttributes<'div'> {
  justify?: 'start' | 'center' | 'end'
  size?: ComponentProps<typeof Button>['size']
  buttons?: ComponentProps<typeof Button>[]
  reverse?: boolean
}

const { size = 'default', justify = 'start', reverse = false, class: className, buttons, ...rest } = Astro.props

const getButtonVariant = (index: number) => {
  if (reverse) {
    const length = buttons?.length || 0
    if (index === length - 1) return 'default'
    if (index === length - 2) return 'outline'
    return 'ghost'
  }
  if (index === 0) return 'default'
  if (index === 1) return 'outline'
  return 'ghost'
}
---

<Box
  class:list={[
    'buttons justify-inherit inline-flex flex-wrap gap-2',
    {
      'justify-start': justify === 'start',
      'justify-center': justify === 'center',
      'justify-end': justify === 'end',
    },
    className,
  ]}
  {...rest}
>
  {
    buttons?.map((button, i) => (
      <Button
        variant={getButtonVariant(i)}
        {size}
        {...button}
      />
    ))
  }
  <slot />
</Box>
