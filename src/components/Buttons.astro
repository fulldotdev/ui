---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Element from 'fulldev-ui/components/Element.astro'

interface Props extends HTMLAttributes<'div'> {
  variant?: ComponentProps<typeof Button>['variant'] | undefined
  size?: ComponentProps<typeof Button>['size'] | undefined
  buttons?: ComponentProps<typeof Button>[] | undefined
}

const { size = 'default', variant = 'default', buttons, ...rest } = Astro.props

const buttonVariant = (i: number) => {
  if (variant === 'default' && i === 0) return 'default'
  else if (variant === 'default' && i === 1) return 'secondary'
  else if (variant === 'secondary' && i === 0) return 'secondary'
  else if (variant === 'outline' && i === 0) return 'outline'
  else return 'ghost'
}
---

<Element
  class:list={[
    'buttons not-prose inline-flex',
    {
      // size
      'gap-2': size === 'sm',
      'gap-2.5': size === 'default',
      'gap-3': size === 'lg',
    },
  ]}
  {...rest}
>
  {
    buttons?.map((button, i) => (
      <Button
        variant={buttonVariant(i)}
        {size}
        {...button}
      />
    ))
  }
  <slot />
</Element>
