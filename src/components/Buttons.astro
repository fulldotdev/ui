---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Element from 'fulldev-ui/components/Element.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

interface Props extends GlobalProps, HTMLAttributes<'div'> {
  variant?: ComponentProps<typeof Button>['variant']
  buttons?: ComponentProps<typeof Button>[] | undefined
  button?: ComponentProps<typeof Button> | undefined
}

const { variant = 'primary', buttons = [], button, size, ...rest } = Astro.props

const buttonVariant = (i: number) => {
  if (variant === 'primary' && i === 0) return 'primary'
  else if (variant === 'primary' && i === 1) return 'secondary'
  else if (variant === 'primary' && i > 1) return 'ghost'
  else if (variant === 'secondary' && i === 0) return 'secondary'
  else return 'ghost'
}
---

<Element
  class:list="buttons"
  {...rest}
>
  {
    [button, ...buttons].filter(Boolean).map((button, i) => (
      <Button
        variant={buttonVariant(i)}
        {size}
        {...button}
      />
    ))
  }
  <slot />
</Element>

<style is:global>
  @layer fulldev {
    .buttons {
      @apply inline-flex flex-wrap justify-stretch gap-2;
    }
  }
</style>
