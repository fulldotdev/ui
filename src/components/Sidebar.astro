---
import { getCollection } from 'astro:content'
import Column from 'fulldev-ui/components/Column.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Link from 'fulldev-ui/components/Link.astro'

const { sidebar } = Astro.props
const slug = Astro.url.pathname.replace(/^\/|\/$/g, '')
const url = Astro.url.href
---

<Column
  as="aside"
  class:list="sidebar"
>
  {
    sidebar?.length > 0 &&
      sidebar.map((item: any) => (
        <>
          <Heading
            level={6}
            set:html={item.heading}
          />
          {item.links?.map((link: any) => (
            <Link
              {...link}
              class="sidebar-link"
              color={url.endsWith(link.href) ? 'brand' : undefined}
            />
          ))}
          {item.folder &&
            (async () => {
              const pages = await getCollection(
                'pages',
                (entry: any) =>
                  entry.slug.startsWith(item.folder) &&
                  !entry.slug.endsWith(item.folder)
              )
              return pages.map((page: any) => (
                <Link
                  href={`/${page.slug}`}
                  class="sidebar-link"
                  color={slug === page.slug ? 'brand' : undefined}
                  set:html={page.data.title}
                />
              ))
            })()}
        </>
      ))
  }
</Column>

<style lang="scss" is:global>
  @layer fulldev {
    .sidebar {
      display: none !important;
      box-sizing: border-box;
      border-right: 1px solid var(--color-a6);
      padding: var(--space-6) min(var(--space-5), var(--gutter)) var(--space-6)
        0;
      height: 100vh;
      max-height: 100vh;
      overflow-y: auto;

      .sidebar-link {
        font-size: var(--text-2);
      }

      @media (min-width: 1024px) {
        display: flex !important;
      }
    }
  }
</style>
