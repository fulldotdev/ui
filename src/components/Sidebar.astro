---
import type { HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import type { SidebarSchema } from 'fulldev-ui/schemas/components/sidebar'
import Container from './Container.astro'
import Heading from './Heading.astro'
import Link from './Link.astro'

interface Props extends HTMLAttributes<'aside'>, SidebarSchema {}

const { company, logo, menus, links, heading, themer, ...rest } = Astro.props
---

<Element
  class:list="sidebar"
  as="aside"
  {...rest}
>
  <Container>
    <Element class:list="sidebar-links">
      {
        links?.map((link) => (
          <Link
            size="sm"
            variant="muted"
            {...link}
          />
        ))
      }
    </Element>
    {
      menus?.map(({ heading, links }) => (
        <Element class:list="sidebar-menu">
          <Heading
            text={heading}
            size="sm"
            as="h6"
          />
          <Element class:list="sidebar-links">
            {links?.map((link) => (
              <Link
                size="sm"
                variant="muted"
                {...link}
              />
            ))}
          </Element>
        </Element>
      ))
    }
  </Container>
</Element>

<style is:global>
  @layer fulldev {
    .sidebar {
      @apply sticky bottom-0 top-0 z-10 hidden h-full w-56 flex-col items-start justify-start border-r bg-background lg:flex;

      .container {
        @apply flex w-full flex-1 flex-col items-start gap-6 overflow-y-auto px-gutter pb-14 pt-6 first:pt-14;
        @apply scrollbar scrollbar-track-transparent scrollbar-thumb-accent scrollbar-thumb-rounded-full scrollbar-w-2 hover:scrollbar-thumb-accent-hover;
      }

      .sidebar-menu {
        @apply flex flex-col gap-3;
      }

      .sidebar-links {
        @apply flex flex-col gap-2;
      }
    }
  }
</style>
