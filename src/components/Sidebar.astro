---
import type { HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import type { SidebarSchema } from 'fulldev-ui/schemas/components/sidebar'
import Container from './Container.astro'
import Heading from './Heading.astro'
import Link from './Link.astro'

interface Props extends HTMLAttributes<'aside'>, SidebarSchema {}

const { company, logo, menus, links, heading, themer, ...rest } = Astro.props
---

<Element
  class:list="sidebar"
  as="aside"
  {...rest}
>
  <Container>
    {
      menus?.map(({ heading, links }) => (
        <Element class:list="sidebar-menu">
          <Heading
            text={heading}
            size="sm"
            as="h6"
          />
          <Element class:list="sidebar-links">
            {links?.map((link) => (
              <Link
                size="sm"
                variant="muted"
                {...link}
              />
            ))}
          </Element>
        </Element>
      ))
    }
  </Container>
</Element>

<style is:global>
  @layer fulldev {
    .sidebar {
      @apply sticky bottom-0 left-0 hidden w-64 max-w-[75vw] border-r bg-background py-8 lg:flex;

      --headers: calc(var(--header-height, 0px) + var(--subheader-height, 0px));
      top: var(--headers);
      width: var(--sidebar-width);
      max-height: calc(100vh - var(--headers));

      &,
      & ~ * {
        @media (min-width: 1024px) {
          --sidebar-width: 16rem;
        }
      }

      .container {
        @apply flex h-full w-full grow flex-col items-start gap-8 overflow-y-auto;
        /* @apply scrollbar scrollbar-track-transparent scrollbar-thumb-accent scrollbar-thumb-rounded-full scrollbar-w-2 hover:scrollbar-thumb-accent-hover; */
      }

      .sidebar-menu {
        @apply flex flex-col gap-3;
      }

      .sidebar-links {
        @apply flex flex-col gap-2;
      }
    }
  }
</style>
