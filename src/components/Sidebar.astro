---
import type { HTMLAttributes } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Column from 'fulldev-ui/components/Column.astro'
import Logo from 'fulldev-ui/components/experimental/Logo.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Root from 'fulldev-ui/components/Root.astro'
import Search from 'fulldev-ui/components/Search.astro'
import ThemeSelect from 'fulldev-ui/components/ThemeSelect.astro'

type Props = HTMLAttributes<'aside'> & {
  size?: 'sm' | 'md' | 'lg' | undefined
  search?: boolean | undefined
  logo?: string | undefined
  buttons?: any[] | undefined
  open?: boolean | undefined
}

const { size = 'sm', open = false, logo, buttons, search } = Astro.props
---

<input
  id="sidebar"
  class="sidebar-checkbox"
  type="checkbox"
/>

<Root
  class:list="sidebar"
  as="aside"
  {size}
  {open}
>
  <Logo {logo} />
  {search && <Search />}
  <Column
    space="none"
    class:list="buttons"
  >
    {
      buttons?.map(({ heading, slug, href, text, buttons }) => (
        <>
          <Heading
            level={6}
            html={heading}
          />
          <Button
            variant="link"
            {slug}
            {href}
            {text}
          />
          {buttons?.map((button: any) => (
            <Button
              variant="link"
              {...button}
            />
          ))}
        </>
      ))
    }
    <ThemeSelect />
  </Column>
</Root>

<style lang="scss" is:global>
  @layer fulldev {
    .sidebar-checkbox {
      display: none;
    }

    @media (max-width: 1023.999px) {
      body:has(.sidebar-checkbox:checked) {
        overflow: hidden;
      }
    }

    .sidebar {
      --sidebar-width: 240px;

      display: none;
      position: fixed;
      top: var(--header-height, 0px);
      bottom: 0;
      left: 0;
      flex-shrink: 0;
      flex-direction: column;
      justify-content: flex-start;
      z-index: 10;
      border-style: solid;
      border-color: var(--color-a6);
      background-color: var(--base-2);
      padding: var(--space-md-5) var(--gutter);
      width: 100%;
      height: calc(100vh - var(--header-height, 0px));
      overflow-y: auto;

      &:is(.sidebar-checkbox:checked + &) {
        display: flex;
      }

      @media (min-width: 1024px) {
        border-right-width: 1px;
        padding: var(--space-md-6) var(--gutter);
        width: var(--sidebar-width);

        &.open {
          display: flex;
          position: sticky;
        }
      }

      .buttons {
        display: flex;
        flex-direction: column;
        gap: calc(var(--space-4) + var(--space-1));

        .theme-select {
          margin-top: var(--space-5);
        }

        .button + .heading {
          margin-top: var(--space-5);
        }
      }

      .logo {
        display: none;

        @media (min-width: 1024px) {
          &:is(.header:not(.open) ~ .sidebar &) {
            display: flex;
            position: absolute;
            top: 0;
            left: var(--gutter);
            align-items: center;
            height: 56px;
          }
        }
      }
    }
  }
</style>
