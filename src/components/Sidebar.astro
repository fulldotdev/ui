---
import type { HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import type { SidebarSchema } from 'fulldev-ui/schemas/components/sidebar'
import Heading from './Heading.astro'
import Link from './Link.astro'

interface Props extends HTMLAttributes<'aside'>, SidebarSchema {}

const { company, logo, menus, links, heading, themer, ...rest } = Astro.props
---

<Element
  class:list="sidebar"
  as="aside"
  {...rest}
>
  <Element class:list="sidebar-links">
    {
      links?.map((link) => (
        <Link
          variant="muted"
          size="sm"
          {...link}
        />
      ))
    }
  </Element>
  {
    menus?.map(({ heading, links }) => (
      <Element class:list="sidebar-menu">
        <Heading
          text={heading}
          size="sm"
          as="h6"
        />
        <Element class:list="sidebar-links">
          {links?.map((link) => (
            <Link
              variant="muted"
              size="sm"
              {...link}
            />
          ))}
        </Element>
      </Element>
    ))
  }
</Element>

<style is:global>
  @layer fulldev {
    .sidebar {
      @apply sticky bottom-0 left-0 hidden h-full max-w-[75vw] flex-col items-start gap-8 overflow-y-auto border-r bg-background py-8 pr-8 lg:flex;
      @apply scrollbar scrollbar-track-transparent scrollbar-thumb-accent scrollbar-thumb-rounded-full scrollbar-w-2 hover:scrollbar-thumb-accent-hover;

      --headers: calc(var(--header-height, 0px) + var(--subheader-height, 0px));
      top: var(--headers);
      width: var(--sidebar-width);
      height: calc(100vh - var(--headers));

      &,
      & ~ * {
        @media (min-width: 1024px) {
          --sidebar-width: 14rem;
        }
      }

      .sidebar-menu {
        @apply flex flex-col gap-3;
      }

      .sidebar-links {
        @apply flex flex-col gap-2;
      }
    }
  }
</style>
