---
import type { ImageMetadata } from 'astro'
import type { HTMLAttributes } from 'astro/types'
import { Image as AstroImage } from 'astro:assets'
import { getEntry } from 'astro:content'

type Props = HTMLAttributes<'img'> & {
  position?: 'background' | 'cover' | 'inset' | undefined
  frame?: 'inset' | undefined
  ratio?: 'landscape' | 'portrait' | 'square' | number | undefined
  mask?: 'sm' | 'md' | 'lg' | undefined
  src?: string | undefined
}

const {
  width = 1920,
  height = 1920,
  position,
  frame,
  ratio,
  mask,
  src,
  alt,
  ...rest
} = Astro.props

function getAltBySrc() {
  if (!src) return
  const filename = src?.split('/').pop()
  const slug = filename && filename.split('.')[0]
  const unslugged = slug?.replace(/-/g, ' ')
  return unslugged || ''
}

const images = import.meta.glob<{ default: ImageMetadata }>('/src/images/*')
const localImage = src && images[`/src/images/${src}`]
const id = localImage && src.split('.').shift()
const entry = id && ((await getEntry('images', id)) as any)

const newAlt = alt ?? entry?.data.alt ?? getAltBySrc() ?? ''
const newSrc = localImage ? localImage() : src
---

{
  newSrc && (
    <AstroImage
      class:list={[
        'image',
        position && `position-${position}`,
        frame && `frame-${frame}`,
      ]}
      src={newSrc as typeof src}
      alt={newAlt as typeof alt}
      width={localImage ? undefined : width}
      height={localImage ? undefined : height}
      {...(rest as any)}
    />
  )
}

<style is:global lang="scss">
  @layer fulldev {
    .image {
      display: block;
      width: 100%;
      height: auto;

      &.mask-sm {
        -webkit-mask-image: linear-gradient(to top, transparent 0%, black 30%);
        mask-image: linear-gradient(to top, transparent 0%, black 30%);
      }

      &.mask-md {
        -webkit-mask-image: linear-gradient(to top, transparent 0%, black 65%);
        mask-image: linear-gradient(to top, transparent 0%, black 65%);
      }

      &.mask-lg {
        -webkit-mask-image: linear-gradient(to top, transparent 0%, black 100%);
        mask-image: linear-gradient(to top, transparent 0%, black 100%);
      }

      &.position-background {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: -1;
        margin: 0 !important;
        border-radius: 0;
        width: 100%;
        max-width: none;
        height: 100%;
        max-height: 100%;
        object-fit: cover;
      }

      &.position-cover {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      &.position-container {
        width: 100%;
        height: 100%;
        object-fit: contain;
        object-position: center;
      }

      &.position-inset {
        max-width: none;
        object-fit: cover;

        &:is(.structure-column > &) {
          margin-right: calc(var(--inset-right) * -1);
          margin-left: calc(var(--inset-left) * -1);
          width: calc(100% + var(--inset-left) + var(--inset-right));

          &.image:first-child {
            margin-top: calc(var(--inset-top) * -1);
            height: calc(100% + var(--inset-top) * 1);
          }

          &.image:last-child {
            margin-bottom: calc(var(--inset-bottom) * -1);
            height: calc(100% + var(--inset-bottom) * 1);
          }
        }

        &:is(.structure-split > &) {
          @media (max-width: 1023.999px) {
            margin-right: calc(var(--inset-right) * -1);
            margin-left: calc(var(--inset-left) * -1);
            width: calc(100% + var(--inset-left) + var(--inset-right));

            &.image:first-child {
              margin-top: calc(var(--inset-top) * -1);
              height: calc(100% + var(--inset-top) * 1);
            }

            &.image:last-child {
              margin-bottom: calc(var(--inset-bottom) * -1);
              height: calc(100% + var(--inset-bottom) * 1);
            }
          }

          @media (min-width: 1024px) {
            margin-top: calc(var(--inset-top) * -1);
            margin-bottom: calc(var(--inset-bottom) * -1);
            height: calc(100% + var(--inset-top) * 1 + var(--inset-bottom) * 1);

            &.image:first-child {
              margin-left: calc(var(--inset-left) * -1);
              width: calc(100% + var(--inset-left) * 1);
            }

            &.image:last-child {
              margin-right: calc(var(--inset-right) * -1);
              width: calc(100% + var(--inset-right) * 1);
            }
          }
        }
      }

      &.ratio-landscape {
        aspect-ratio: 4/3;
      }

      &.ratio-square {
        aspect-ratio: 1/1;
      }

      &.ratio-portrait {
        aspect-ratio: 3/4;
      }
    }
  }
</style>
