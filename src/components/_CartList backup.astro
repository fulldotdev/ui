<!-- ---
import Element from 'fulldev-ui/components/Element.astro'
import Image from 'fulldev-ui/components/Image.astro'
import Button from './Button.astro'
import Heading from './Heading.astro'
import Input from './Input.astro'
import Price from './Price.astro'

const { ...rest } = Astro.props
---

<Element
  if={true}
  class:list="cart-list"
  {...rest}
/>

<template id="cart-list-template">
  <Element class="cart-list-card">
    <Image src="/placeholder-portrait.webp" />
    <Element class="cart-list-card-segment">
      <Element class="cart-list-card-content">
        <Heading
          level={6}
          text="Product title"
        />
        <Price value={999} />
      </Element>
      <Element class="cart-list-card-actions">
        <Input
          type="number"
          name="quantity"
          value={1}
          min={0}
        />
        <Button
          variant="outline"
          icon="trash"
          type="button"
        />
      </Element>
    </Element>
  </Element>
</template>

<script>
  import { $cart } from 'fulldev-ui/stores/cart.ts'
  import { formatPrice } from 'fulldev-ui/utils/cart'

  function setCards(items: any) {
    const template = document.querySelector('template')
    const container = document.querySelector('.cart-list')
    if (!(container instanceof HTMLElement)) return
    if (!(template instanceof HTMLTemplateElement)) return

    container.innerHTML = ''

    items.forEach((item: any, index: number) => {
      const clone = template?.content.cloneNode(true)
      if (!(clone instanceof DocumentFragment)) return
      const card = clone.querySelector('.cart-list-card')
      if (!card) return

      const image = card.querySelector('img')
      const heading = card.querySelector('.heading')
      const price = card.querySelector('.price')
      // const input = card.querySelector('.input-input')
      const remove = card.querySelector('.button')

      if (image) image.src = item.image
      if (heading) heading.textContent = item.name
      if (price) price.textContent = formatPrice(item.price)

      remove?.addEventListener('click', () => {
        const currentCart = $cart.get()
        const newCart = [...currentCart]
        newCart.splice(index, 1)
        $cart.set(newCart)
      })

      container.appendChild(clone)
    })
  }

  document.addEventListener('astro:page-load', () => {
    setCards($cart.get())

    $cart.subscribe((items: any) => {
      setCards(items)
    })
  })
</script>

<style is:global>
  @layer fulldev {
    .cart-list {
      @apply flex flex-col text-foreground;

      .cart-list-card {
        @apply flex w-full gap-5;

        &:not(:first-child) {
          @apply mt-5 border-t pt-5;
        }
      }

      .image {
        @apply block h-auto w-24;
      }

      .cart-list-card-segment {
        @apply flex h-full w-full flex-col justify-between gap-4;
      }

      .cart-list-card-content,
      .cart-list-card-actions {
        @apply flex justify-between gap-2;
      }

      .input {
        @apply w-16;
      }
    }
  }
</style> -->
