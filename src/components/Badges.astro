---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Element from 'fulldev-ui/components/Element.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'
import Badge from './Badge.astro'

interface Props extends GlobalProps, HTMLAttributes<'div'> {
  variant?: ComponentProps<typeof Button>['variant']
  badges?: ComponentProps<typeof Badge>[] | undefined
  badge?: ComponentProps<typeof Badge> | undefined
}

const { variant = 'outline', badges = [], badge, ...rest } = Astro.props
---

<Element
  class:list="badges"
  {...rest}
>
  {[badge, ...badges].filter(Boolean).map((badge) => <Badge {...badge} />)}
</Element>

<style is:global>
  @layer fulldev {
    .badges {
      @apply inline-flex w-auto flex-wrap justify-stretch gap-2;
    }
  }
</style>
