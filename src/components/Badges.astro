---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Element from 'fulldev-ui/components/Element.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'
import Badge from './Badge.astro'

interface Props extends GlobalProps, HTMLAttributes<'div'> {
  variant?: ComponentProps<typeof Button>['variant']
  badges?: ComponentProps<typeof Badge>[] | undefined
}

const { variant = 'secondary', badges, ...rest } = Astro.props

const buttonVariant = (i: number) => {
  if (variant === 'primary' && i === 0) return 'primary'
  else if (variant === 'primary' && i === 1) return 'secondary'
  else if (variant === 'primary' && i > 1) return 'tertiary'
  else if (variant === 'secondary' && i === 0) return 'secondary'
  else if (variant === 'secondary' && i > 0) return 'tertiary'
  else if (variant === 'tertiary') return 'tertiary'
  else return 'tertiary'
}
---

<Element
  class:list="badges"
  {...rest}
>
  {
    badges?.map((badge, i) => (
      <Badge
        variant={variant === 'link' ? 'link' : buttonVariant(i)}
        {...badge}
      />
    ))
  }
</Element>

<style is:global lang="scss">
  @layer fulldev {
    .badges {
      display: inline-flex;
      flex-wrap: wrap;
      justify-content: stretch;
      gap: var(--space-2);
      width: auto;
    }
  }
</style>
