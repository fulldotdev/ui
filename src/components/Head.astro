---
import { AstroSeo } from '@astrolib/seo'
import type { ComponentProps } from 'astro/types'
import { ViewTransitions } from 'astro:transitions'
import type Layout from 'fulldev-ui/layouts/Layout.astro'

type Props = ComponentProps<typeof Layout>

const { theme, title, description, image, seo, code, render } = Astro.props

const renderTitle = render && (await render()).headings[0]?.text
const mergedTitle = seo?.title || title || renderTitle
const mergedDescription = seo?.description || description
const mergedImage =
  seo?.image || image ? Astro.url.origin + (seo?.image || image) : undefined
---

<head>
  <meta charset="utf-8" />
  <meta
    content="width=device-width, initial-scale=1, viewport-fit=cover"
    name="viewport"
  />
  <meta
    name="generator"
    content={Astro.generator}
  />
  <link
    rel="canonical"
    href={Astro.url.href.endsWith('/') ? Astro.url.href : Astro.url.href + '/'}
  />
  <ViewTransitions />
  <AstroSeo
    title={mergedTitle ?? ''}
    description={mergedDescription ?? ''}
    openGraph={{
      title: mergedTitle,
      description: mergedDescription,
      images: mergedImage
        ? [
            {
              url: mergedImage,
              alt: mergedTitle,
            },
          ]
        : undefined,
    } as any}
  />
  <Fragment set:html={code?.head} />

  <script is:inline define:vars={{ theme }}>
    function setTheme(document) {
      const value = localStorage.getItem('theme') || theme

      const isDark =
        value === 'dark' ||
        (value === 'system' &&
          window.matchMedia('(prefers-color-scheme: dark)').matches)

      document.documentElement.classList.toggle('dark', isDark)

      document.querySelectorAll('.themer').forEach((themer) => {
        themer?.querySelectorAll('option').forEach((option) => {
          option.selected = option.value === value
        })
      })
    }

    function setOption(document) {
      const value = localStorage.getItem('theme') || theme

      document.querySelectorAll('.themer').forEach((themer) => {
        themer?.querySelectorAll('option').forEach((option) => {
          option.selected = option.value === value
        })
      })
    }

    setTheme(document)
    setOption(document)

    document.addEventListener('astro:before-swap', (event) => {
      setTheme(event.newDocument)
    })

    document.addEventListener('astro:page-load', (event) => {
      setOption(document)
    })
  </script>
</head>
