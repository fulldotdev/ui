---
import { AstroSeo } from '@astrolib/seo'
import type { ComponentProps } from 'astro/props'
import type { HTMLAttributes } from 'astro/types'
import type Image from 'fulldev-ui/components/Image.astro'

type Props = HTMLAttributes<'head'> & {
  title?: string | undefined
  description?: string | undefined
  image?: ComponentProps<typeof Image> | undefined
  theme?: 'light' | 'dark' | 'system' | undefined
  favicon?: string | undefined
  company?: string | undefined
  scripts?: string[] | undefined
  code?: string | undefined
}

const { theme, title, description, image, code, ...rest } = Astro.props

const src = image?.src && Astro.url.origin + image.src
---

<head {...rest}>
  <meta charset="utf-8" />
  <meta
    content="width=device-width, initial-scale=1, viewport-fit=cover"
    name="viewport"
  />
  <meta
    name="generator"
    content={Astro.generator}
  />
  <link
    rel="canonical"
    href={Astro.url.href.endsWith('/') ? Astro.url.href : Astro.url.href + '/'}
  />
  <AstroSeo
    title={title ?? ''}
    description={description ?? ''}
    openGraph={{
      title: title ?? '',
      description: description ?? '',
      images: [
        {
          url: src ?? '',
          alt: title ?? '',
        },
      ],
    }}
  />

  <Fragment set:html={code} />
  <slot />

  <script is:inline define:vars={{ theme }}>
    function setTheme(document) {
      const value = localStorage.getItem('theme') || theme

      const isDark =
        value === 'dark' ||
        (value === 'system' &&
          window.matchMedia('(prefers-color-scheme: dark)').matches)

      document.documentElement.classList.toggle('dark', isDark)

      document.querySelectorAll('.themer').forEach((themer) => {
        themer?.querySelectorAll('option').forEach((option) => {
          option.selected = option.value === value
        })
      })
    }

    function setOption(document) {
      const value = localStorage.getItem('theme') || theme

      document.querySelectorAll('.themer').forEach((themer) => {
        themer?.querySelectorAll('option').forEach((option) => {
          option.selected = option.value === value
        })
      })
    }

    setTheme(document)
    setOption(document)

    document.addEventListener('astro:before-swap', (event) => {
      setTheme(event.newDocument)
    })

    document.addEventListener('astro:page-load', (event) => {
      setOption(document)
    })
  </script>
</head>
