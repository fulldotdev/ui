---
import type { ComponentProps } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Card from 'fulldev-ui/components/Card.astro'
import Element from 'fulldev-ui/components/Element.astro'

interface Props extends Omit<ComponentProps<typeof Card>, 'position'> {
  label?: string | undefined
  icon?: string | undefined
  position?: 'left' | 'right' | undefined
  panel?: boolean | undefined
}

const {
  id = 'drawer',
  position = 'left',
  panel,
  label,
  icon,
  ...rest
} = Astro.props
---

<Button
  class:list="drawer-button"
  as="button"
  variant="secondary"
  type="button"
  id={`${id}-button`}
  text={label}
  icon={icon}
  onclick={`document.getElementById('${id}').showModal()`}
/>

<Element
  as="dialog"
  class="drawer"
  {id}
  {position}
  onclick={`event.target === this && this.close()`}
>
  <Element
    class:list={[panel, `position-${position}`]}
    {...rest}
  >
    <slot />
  </Element>
</Element>

<style lang="scss" is:global>
  @layer fulldev {
    .drawer {
      flex-shrink: 0;
      align-items: stretch;
      box-sizing: border-box;
      margin: 0 !important;
      outline: 0;
      border: 0;
      background: var(--color-2);
      padding: 0;
      padding: var(--space-7) var(--space-7) var(--space-7) var(--gutter);
      min-width: 260px;
      max-width: 360px;
      height: 100vh;
      max-height: 100vh;

      &::backdrop {
        background: rgba(0, 0, 0, 0.5);
      }

      &.position-left {
        margin-right: 0;
      }

      &.position-right {
        right: 0;
      }

      .box {
        padding: calc(var(--space-5) * 2) calc(var(--space-7) * 3);
        min-width: calc(var(--space-7) * 14);
        height: 100vh;
        overflow-x: hidden;
        overflow-y: auto;

        &.position-left {
          border-right: 1px solid var(--color-a6);
          padding-left: var(--gutter);
        }

        &.position-right {
          border-left: 1px solid var(--color-a6);
          padding-right: var(--gutter);
        }
      }
    }
  }
</style>
