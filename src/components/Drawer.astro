---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Button from 'fulldev-ui/components/Button.astro'
import Element from 'fulldev-ui/components/Element.astro'

interface Props
  extends HTMLAttributes<'aside'>,
    Pick<ComponentProps<typeof Button>, 'variant' | 'size' | 'text' | 'icon'> {
  id: string
  icon: string
}

const { id, variant = 'ghost', size = 'md', icon, text, ...rest } = Astro.props

const slot = await Astro.slots.render('default')
const render = slot?.trim().length > 0
---

{
  render && (
    <Element class:list="drawer">
      <Button
        class="drawer-button"
        as="label"
        role="button"
        for={id}
        {variant}
        {size}
        {text}
        {icon}
      />

      <input
        type="checkbox"
        class="drawer-checkbox"
        name={id}
        {id}
      />

      <Element
        class:list="drawer-body"
        as="aside"
        {...rest}
      >
        <Fragment set:html={slot} />
      </Element>
      <label
        for={id}
        class="drawer-backdrop"
      />
    </Element>
  )
}

<style is:global>
  @layer fulldev {
    .drawer {
      display: contents;
      height: 100vh;
    }

    .drawer-checkbox {
      display: none;
      visibility: hidden;
    }

    .drawer-backdrop {
      position: fixed;
      top: 0;
      left: 0;
      visibility: hidden;
      opacity: 0;
      z-index: 30;
      transition: var(--transition);
      background-color: var(--color-black);
      width: 100%;
      height: 100vh;
      pointer-events: none;

      &:is(.drawer-checkbox:checked ~ &) {
        visibility: visible;
        opacity: 0.5;
        pointer-events: auto;
      }
    }

    .drawer-body {
      position: fixed;
      top: 0;
      left: 0;
      transform: translateX(-100%);
      z-index: 40;
      transition: var(--transition);
      box-shadow: var(--shadow-2xl);
      border: 1px solid var(--color-border);
      border-left-width: 0;
      border-top-right-radius: var(--radius-lg);
      border-bottom-right-radius: var(--radius-lg);
      background-color: var(--color-background);
      width: var(--spacing-80);
      max-width: 75vw;
      height: 100vh;
      overflow-y: auto;

      /* TODO: Add scrollbar */
      /* @apply scrollbar scrollbar-track-transparent scrollbar-thumb-accent scrollbar-thumb-rounded-full scrollbar-w-2 hover:scrollbar-thumb-accent-hover; */

      &:is(.drawer-checkbox:checked ~ &) {
        transform: translateX(0);
      }
    }
  }
</style>
