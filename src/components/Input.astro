---
import type { HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'
import { Input as ShadcnInput } from 'fulldev-ui/shadcn/components/input'
import { Label } from 'fulldev-ui/shadcn/components/label'
import type { ComponentProps } from 'react'

interface Props extends HTMLAttributes<'div'> {
  label?: string | undefined
  icon?: string | undefined
  // input
  id?: ComponentProps<typeof ShadcnInput>['id']
  name?: ComponentProps<typeof ShadcnInput>['name']
  type?: ComponentProps<typeof ShadcnInput>['type']
  value?: ComponentProps<typeof ShadcnInput>['value']
  disabled?: ComponentProps<typeof ShadcnInput>['disabled']
  required?: ComponentProps<typeof ShadcnInput>['required']
  pattern?: ComponentProps<typeof ShadcnInput>['pattern']
  form?: ComponentProps<typeof ShadcnInput>['form']
  readonly?: ComponentProps<typeof ShadcnInput>['readOnly']
  minlength?: ComponentProps<typeof ShadcnInput>['minLength']
  maxlength?: ComponentProps<typeof ShadcnInput>['maxLength']
  placeholder?: ComponentProps<typeof ShadcnInput>['placeholder']
}

const {
  label,
  icon,
  // input
  placeholder,
  name = label || placeholder,
  id = name,
  type = 'text',
  value,
  disabled,
  required,
  pattern,
  form,
  readonly,
  minlength,
  maxlength,
  ...rest
} = Astro.props
---

<Element
  class:list="input flex flex-col relative"
  {...rest}
>
  {
    label && (
      <Label
        className="pb-1.5"
        htmlFor={id}
      >
        {label}
      </Label>
    )
  }
  <Icon
    class="absolute bottom-2.5 right-2.5"
    name={icon}
  />
  {
    id && (
      <ShadcnInput
        id={name}
        readOnly={readonly}
        minLength={minlength}
        maxLength={maxlength}
        {type}
        {placeholder}
        {name}
        {disabled}
        {required}
        {pattern}
        {form}
        {value}
      />
    )
  }
</Element>
