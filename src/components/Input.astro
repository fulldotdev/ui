---
import type { HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'
import Label from 'fulldev-ui/components/Label.astro'

interface Props extends HTMLAttributes<'input'> {
  size?: 'sm' | 'md' | 'lg' | undefined
  label?: string | undefined
  icon?: string | undefined
}

const {
  label,
  placeholder,
  name = label || placeholder,
  id = name,
  type = 'text',
  size = 'md',
  value,
  icon,
  ...rest
} = Astro.props
---

<Label
  class:list="input"
  for={id}
  {size}
  {...rest}
>
  <Fragment set:html={label} />
  <Element
    class:list="input-input"
    as="input"
    show={name}
    id={name}
    {name}
    {placeholder}
    {type}
    {value}
  />
  <Icon
    name={icon}
    {size}
  />
</Label>

<style is:global>
  @layer fulldev {
    .input-input {
      display: flex;
      border: 1px solid var(--color-input);
      border-radius: var(--radius-md);
      background-color: var(--color-background);
      width: 100%;
      color: var(--color-foreground);
      font-size: var(--text-sm);

      &:focus-visible {
        outline: none;
        /* TODO: Add ring */
        /* @apply ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2; */
      }

      &::placeholder {
        color: var(--color-muted-foreground);
      }

      &[readonly] {
        pointer-events: none;
      }

      &:disabled {
        opacity: 0.5;
        pointer-events: none;
      }
    }

    .input {
      display: flex;
      position: relative;
      flex-direction: column;
      gap: 1.5rem;

      .icon {
        position: absolute;
        pointer-events: none;
      }

      &.size-sm {
        gap: var(--spacing-1);

        .input-input {
          padding: var(--spacing-2-5) var(--spacing-1-5);
          height: var(--spacing-9);
          font-size: var(--text-xs);
        }

        .icon {
          right: var(--spacing-2);
          bottom: var(--spacing-2);
        }

        .icon + .input-input {
          padding-right: var(--spacing-9);
        }
      }

      &.size-md {
        gap: var(--spacing-1-5);

        .input-input {
          padding: var(--spacing-2-5) var(--spacing-1-5);
          height: var(--spacing-10);
          font-size: var(--text-sm);
        }

        .icon {
          right: var(--spacing-2-5);
          bottom: var(--spacing-2-5);
        }

        .icon + .input-input {
          padding-right: var(--spacing-10);
        }
      }

      &.size-lg {
        gap: var(--spacing-2);

        .input-input {
          padding: var(--spacing-3-5) var(--spacing-1-5);
          height: var(--spacing-12);
          font-size: var(--text-base);
        }

        .icon {
          right: var(--spacing-3-5);
          bottom: var(--spacing-3-5);
        }

        .icon + .input-input {
          padding-right: var(--spacing-11);
        }
      }
    }
  }
</style>
