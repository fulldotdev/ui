---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'
import Label from 'fulldev-ui/components/Label.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

interface Props extends GlobalProps, HTMLAttributes<'input'> {
  label?: ComponentProps<typeof Label>['text']
  icon?: ComponentProps<typeof Icon>['name']
}

const {
  placeholder,
  name = placeholder,
  type = 'text',
  label,
  icon,
  size,
  ...rest
} = Astro.props
---

<Element
  class:list="input"
  {...rest}
>
  <Label
    for={name}
    text={label}
  />
  <Element
    as="input"
    if={name}
    id={name}
    {name}
    {placeholder}
    {type}
    {size}
    {...rest}
  />
  <Icon name={icon} />
</Element>

<style is:global>
  @layer fulldev {
    .input {
      @apply relative flex flex-col gap-1;

      .icon {
        @apply pointer-events-none absolute bottom-3 right-3;
      }

      input {
        @apply flex h-11 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background;
        @apply file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground;
        @apply focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2;
        @apply disabled:pointer-events-none disabled:opacity-50;
        @apply [&[readonly]]:pointer-events-none;

        &.size-sm,
        &:where(.size-sm &) {
          @apply h-9 min-w-9 rounded-sm px-4;
        }

        &.size-md,
        &:where(.size-md &) {
          @apply h-11 min-w-11 rounded-md px-5;
        }

        &.size-lg,
        &:where(.size-lg &) {
          @apply h-12 min-w-12 rounded-md px-6;
        }
      }
    }
  }
</style>
