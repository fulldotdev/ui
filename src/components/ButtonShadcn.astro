---
import { buttonVariants } from '@/components/ui/button'
import type { HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'

interface Props
  extends HTMLAttributes<'button'>,
    Omit<HTMLAttributes<'a'>, 'type'>,
    HTMLAttributes<'label'> {
  variant?: 'default' | 'secondary' | 'outline' | 'ghost' | undefined
  size?: 'default' | 'sm' | 'lg' | undefined
  href?: string | undefined
  text?: string | undefined
  icon?: string | undefined
}

const {
  href,
  target = Astro.props.href?.startsWith('http') ? '_blank' : undefined,
  variant = 'default',
  size = 'default',
  text,
  icon,
  ...rest
} = Astro.props

const slot = await Astro.slots.render('default')
const hasSlot = slot?.trim().length > 0
---

<Element
  class:list={[
    `button variant-${variant} size-${size}`,
    buttonVariants({ variant, size }),
  ]}
  as={href ? 'a' : rest.for ? 'label' : 'button'}
  {href}
  {target}
  {...rest}
>
  <Fragment set:html={text} />
  <Icon
    class:list={{ 'icon-only': !(hasSlot || text) }}
    name={icon}
  />
  <Fragment set:html={slot} />
</Element>
