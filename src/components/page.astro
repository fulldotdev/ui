---
import { Font } from "astro:assets"

import "@/styles/globals.css"

import { SEO } from "astro-seo"

import type { PageProps } from "@/lib/types"
import { Social } from "@/components/ui/social"
import { Block } from "@/components/block"

type Props = PageProps

const {
  href,
  title,
  description,
  image,
  seo,
  published,
  block,
  blocks,
  body,
  css,
  head,
  banner,
  header,
  bubble,
  footer,
  legal,
  ...data
} = Astro.props
---

<!doctype html>
<html class="layout light" lang={Astro.currentLocale}>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <SEO
      charset="UTF-8"
      title={seo?.title || title}
      description={seo?.description || description}
      canonical={href}
      openGraph={{
        basic: {
          title: seo?.title || title || "",
          image: Astro.url.origin + image?.src,
          type: "website",
          url: Astro.url.href,
        },
        image: {
          url: Astro.url.origin + image?.src,
          alt: image?.alt,
        },
        optional: {
          description: seo?.description || description,
          locale: Astro.currentLocale,
        },
        article: {
          publishedTime: published?.toISOString(),
        },
      }}
    />
    <Font cssVariable="--font-sans" preload />
    <Fragment set:html={head} />
  </head>
  <body
    class="text-foreground bg-background overscroll-none font-sans antialiased"
    id={Astro.params.page}
  >
    <Block client:load {...banner} />
    <Block client:load {...header} />
    <main>
      {
        block ? (
          <Block
            client:load
            block={block}
            title={title}
            description={description}
            image={image}
            glob={Astro.params.page}
            {...data}
          >
            <slot />
          </Block>
        ) : (
          <slot />
        )
      }
      {
        blocks?.map((block) => (
          <Block client:load {...block}>
            <Fragment set:html={block.html} />
          </Block>
        ))
      }
    </main>
    <Block client:load {...footer} />
    <Block client:load {...legal} />
    {
      bubble && (
        <Social
          className="fixed right-4 bottom-4 p-6 *:!size-6 z-50"
          variant="default"
          href={bubble}
        />
      )
    }
    <Fragment set:html={body} />
    <style set:html={css}></style>
  </body>
</html>
