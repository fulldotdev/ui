---
import { getHref } from '@/lib/getHref'
import { getCollection } from 'astro:content'
import { marked } from 'marked'

let { type, variant, content, pages, articles, products, projects, persons, ...rest } = Astro.props

const blocks = import.meta.glob('../blocks/**/*.astro')

const blockName = `${type}${variant || 1}`
const path = Object.keys(blocks).find((path) => path.split('/').pop()?.split('.')[0] === blockName)

const BlockComponent = path && (await (blocks[path] as any)()).default

const markdownHtml = marked(content || '')

pages = (await getCollection('pages'))?.map(({ collection, id, data }) => ({
  href: getHref(collection, id),
  ...data,
}))
articles = (await getCollection('articles')).map(({ collection, id, data }) => ({
  href: getHref(collection, id),
  ...data,
}))
products = (await getCollection('products')).map(({ collection, id, data }) => ({
  href: getHref(collection, id),
  ...data,
}))
projects = (await getCollection('projects')).map(({ collection, id, data }) => ({
  href: getHref(collection, id),
  ...data,
}))
persons = (await getCollection('persons')).map(({ collection, id, data }) => ({
  href: getHref(collection, id),
  ...data,
}))
---

{
  BlockComponent && (
    <BlockComponent
      {pages}
      {articles}
      {products}
      {projects}
      {persons}
      {...rest}
    >
      <Fragment set:html={markdownHtml} />
    </BlockComponent>
  )
}
