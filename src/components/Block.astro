---
import { getEntries } from 'astro:content'
import type { BlockSchema } from 'fulldev-ui/schemas/block'
import { getHref } from 'fulldev-ui/utils/getHref'

interface Props extends BlockSchema {
  headings?: any | undefined
}

let { block, cards, pages, ...rest } = Astro.props

const blocks = {
  ...import.meta.glob('/src/blocks/**/*.astro'),
  ...import.meta.glob('../blocks/**/*.astro'),
}

const path = Object.keys(blocks).find(
  (path) => path.split('/').pop()?.split('.')[0] === block
)

const BlockComponent = path && (await (blocks[path] as any)()).default

cards = [
  ...(cards || []),
  ...(await getEntries(pages || [])).map(({ id, data }) => ({
    href: getHref(id),
    ...data,
  })),
]
---

{
  BlockComponent && (
    <BlockComponent
      {cards}
      {pages}
      {...rest}
    >
      <slot />
    </BlockComponent>
  )
}
