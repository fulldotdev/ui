---
import type { ComponentProps, HTMLAttributes } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import Label from 'fulldev-ui/components/Label.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

interface Props extends GlobalProps, Omit<HTMLAttributes<'input'>, 'type'> {
  label?: ComponentProps<typeof Label>['text']
}

const { label, name = label, id = name, size = 'md', ...rest } = Astro.props
---

<Element
  class:list="switch"
  as="label"
  for={id}
  {size}
>
  <Element
    class:list="switch-input"
    as="input"
    type="checkbox"
    if={id}
    {id}
    {name}
    {...rest}
  />
  <Element
    as="label"
    for={id}
    if={id}
    class="switch-mark"
  />
  <Label
    for={id}
    text={label}
    {size}
  />
</Element>

<style is:global>
  @layer fulldev {
    .switch {
      @apply flex items-center gap-2;

      .switch-input {
        @apply hidden opacity-0;
      }

      .switch-mark {
        @apply relative block cursor-pointer rounded-full bg-input transition;

        &::before {
          @apply block h-full w-1/2 rounded-full border-2 border-input bg-background transition content-[''];
        }
      }

      .switch-input:checked ~ .switch-mark {
        @apply bg-primary;

        &::before {
          @apply translate-x-full border-primary;
        }
      }

      &.size-sm {
        .switch-mark {
          @apply h-5 w-10;
        }
      }

      &.size-md {
        .switch-mark {
          @apply h-6 w-12;
        }
      }

      &.size-lg {
        .switch-mark {
          @apply h-7 w-14;
        }
      }
    }
  }
</style>

<!-- <style is:global>
  @layer fulldev {
    .switch {
      display: flex;
      position: relative;
      align-items: center;
      gap: var(--space-1);
      width: 100%;

      .switch-element {
        display: block;
        position: relative;
        transition: all;
        cursor: pointer;
        box-sizing: border-box;
        border: 1px solid var(--border);
        border-radius: 999px;
        background-color: var(--base-2);
        padding: var(--space-1);
        width: fit-content;
        min-width: calc(
          (var(--text-2) + 2 * var(--space-2) * 2) + 2 * var(--space-1)
        );
        height: calc(var(--text-2) + 2 * var(--space-2));

        .checkbox {
          position: absolute;
          opacity: 0;
          width: 0;
          height: 0;
        }

        .checkmark {
          transform: 0%;
          transition: all;
          border-radius: 999px;
          background-color: var(--base-1);
          width: 50%;
          height: 100%;
        }

        .checkbox:checked ~ .checkmark {
          transform: translateX(100%);
          background-color: var(--color-12);
        }

        &:hover {
          background-color: var(--base-3);
        }

        &:focus-visible {
          outline: 2px solid var(--focus) !important;
          outline-offset: 2px;
        }

        &:disabled {
          opacity: 0.5;
          cursor: not-allowed;
          pointer-events: none;
        }
      }
    }
  }
</style> -->
