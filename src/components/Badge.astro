---
import type { ComponentProps, HTMLAttributes, HTMLTag } from 'astro/types'
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'
import type { GlobalProps } from 'fulldev-ui/types/global-props'

interface Props
  extends GlobalProps,
    HTMLAttributes<'div'>,
    HTMLAttributes<'a'> {
  as?: HTMLTag
  href?: string | null | undefined
  icon?: ComponentProps<typeof Icon>['name']
  slug?: CollectionEntry<'pages'>['slug'] | undefined
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | undefined
  text?: string | undefined
}

const {
  slug,
  href = slug === 'index' ? '/' : slug ? `/${slug}/` : undefined,
  text = slug ? (await getEntry('pages', slug)).data.title : undefined,
  as = href ? 'a' : 'div',
  target = href?.startsWith('http') ? '_blank' : undefined,
  variant = 'outline',
  icon,
  ...rest
} = Astro.props
---

<Element
  class:list="badge"
  {variant}
  {...rest}
>
  <Icon name={icon} />
  <Fragment set:html={text} />
  <slot />
</Element>

<style is:global>
  @layer fulldev {
    .badge {
      @apply inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-full text-sm font-medium leading-none ring-offset-background transition-colors;
      @apply focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2;
      @apply disabled:pointer-events-none disabled:opacity-50;

      &.variant-primary {
        @apply bg-primary text-primary-foreground hover:bg-primary-hover;
      }

      &.variant-secondary {
        @apply bg-secondary text-secondary-foreground hover:bg-secondary-hover;
      }

      &.variant-outline {
        @apply border border-input text-accent-foreground hover:bg-accent;
      }

      &.size-sm,
      &:where(.size-sm &) {
        @apply px-2.5 py-1 text-xs;
      }

      &.size-md,
      &:where(.size-md &) {
        @apply px-3 py-1.5;
      }

      &.size-lg,
      &:where(.size-lg &) {
        @apply px-4 py-2;
      }
    }
  }
</style>
