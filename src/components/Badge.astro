---
import type { HTMLAttributes, HTMLTag } from 'astro/types'
import Element from 'fulldev-ui/components/Element.astro'
import Icon from 'fulldev-ui/components/Icon.astro'
import type { BadgeSchema } from 'fulldev-ui/schemas/badge'

interface Props
  extends HTMLAttributes<'button'>,
    Omit<HTMLAttributes<'a'>, 'href' | 'target'>,
    BadgeSchema {
  as?: HTMLTag
  type?: HTMLAttributes<'button'>['type'] & HTMLAttributes<'a'>['type']
  reverse?: boolean | undefined
}

const {
  href,
  as = href ? 'a' : 'button',
  variant = 'outline',
  size = 'md',
  text,
  icon,
  ...rest
} = Astro.props
---

<Element
  class:list="badge"
  {as}
  {href}
  {variant}
  {size}
  {...rest}
>
  <Icon
    size="sm"
    name={icon}
  />
  <Element as="span">
    <Fragment set:html={text} />
    <slot />
  </Element>
</Element>

<style is:global>
  @layer fulldev {
    .badge {
      @apply inline-flex items-center justify-center gap-1.5 whitespace-nowrap rounded-full text-sm font-medium leading-none ring-offset-background transition-colors;
      @apply focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2;
      @apply disabled:pointer-events-none disabled:opacity-50;

      &.size-sm {
        @apply h-6 min-w-6 px-2;
      }

      &.size-md {
        @apply h-7 min-w-7 px-3;
      }

      &.size-lg {
        @apply h-8 min-w-8 px-3.5;
      }

      &.variant-primary {
        @apply bg-primary text-primary-foreground hover:bg-primary-hover;
      }

      &.variant-secondary {
        @apply bg-secondary text-secondary-foreground hover:bg-secondary-hover;
      }

      &.variant-outline {
        @apply border border-input text-accent-foreground hover:bg-accent;
      }

      .icon {
        @apply first:last:absolute;
      }

      span {
        @apply text-inherit;
      }
    }
  }
</style>
